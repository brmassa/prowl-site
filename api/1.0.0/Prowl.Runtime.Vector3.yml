### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.Vector3
  commentId: T:Prowl.Runtime.Vector3
  id: Vector3
  parent: Prowl.Runtime
  children:
  - Prowl.Runtime.Vector3.#ctor(Prowl.Runtime.Vector2,System.Double)
  - Prowl.Runtime.Vector3.#ctor(System.Double)
  - Prowl.Runtime.Vector3.#ctor(System.Double,System.Double,System.Double)
  - Prowl.Runtime.Vector3.Abs(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.AngleBetween(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Clamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.ClampMagnitude(Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Vector3.Cross(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Distance(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Dot(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Equals(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Equals(System.Object)
  - Prowl.Runtime.Vector3.GetHashCode
  - Prowl.Runtime.Vector3.IsFinate
  - Prowl.Runtime.Vector3.Item(System.Int32)
  - Prowl.Runtime.Vector3.Lerp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Vector3.Max(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Min(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.MoveTowards(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Vector3.Normalize
  - Prowl.Runtime.Vector3.Normalize(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.ProjectOnPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Reflect(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.SmoothDamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@,System.Double,System.Double,System.Double)
  - Prowl.Runtime.Vector3.SquareRoot(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.ToFloat
  - Prowl.Runtime.Vector3.ToString
  - Prowl.Runtime.Vector3.ToString(System.String)
  - Prowl.Runtime.Vector3.ToString(System.String,System.IFormatProvider)
  - Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  - Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Quaternion)
  - Prowl.Runtime.Vector3.TransformNormal(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  - Prowl.Runtime.Vector3.backward
  - Prowl.Runtime.Vector3.down
  - Prowl.Runtime.Vector3.forward
  - Prowl.Runtime.Vector3.infinity
  - Prowl.Runtime.Vector3.left
  - Prowl.Runtime.Vector3.magnitude
  - Prowl.Runtime.Vector3.normalized
  - Prowl.Runtime.Vector3.one
  - Prowl.Runtime.Vector3.op_Addition(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Vector3.op_Equality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Implicit(Prowl.Runtime.Vector3)~System.Numerics.Vector3
  - Prowl.Runtime.Vector3.op_Implicit(System.Numerics.Vector3)~Prowl.Runtime.Vector3
  - Prowl.Runtime.Vector3.op_Inequality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Vector3.op_Multiply(System.Double,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_Subtraction(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.op_UnaryNegation(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Vector3.right
  - Prowl.Runtime.Vector3.sqrMagnitude
  - Prowl.Runtime.Vector3.up
  - Prowl.Runtime.Vector3.x
  - Prowl.Runtime.Vector3.y
  - Prowl.Runtime.Vector3.z
  - Prowl.Runtime.Vector3.zero
  langs:
  - csharp
  - vb
  name: Vector3
  nameWithType: Vector3
  fullName: Prowl.Runtime.Vector3
  type: Struct
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Vector3
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 13
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: A structure encapsulating three single precision floating point values and provides hardware accelerated methods.
  example: []
  syntax:
    content: 'public struct Vector3 : IEquatable<Vector3>, IFormattable'
    content.vb: Public Structure Vector3 Implements IEquatable(Of Vector3), IFormattable
  implements:
  - System.IEquatable{Prowl.Runtime.Vector3}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Prowl.Runtime.Vector3.Prowl.Runtime.MathD.GetQuaternion
  - Prowl.Runtime.Vector3.Prowl.Runtime.MathD.NormalizeEulerAngleDegrees
  - Prowl.Runtime.Vector3.Prowl.Runtime.MathD.ToDeg
  - Prowl.Runtime.Vector3.Prowl.Runtime.MathD.ToRad
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
- uid: Prowl.Runtime.Vector3.x
  commentId: F:Prowl.Runtime.Vector3.x
  id: x
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector3.x
  fullName: Prowl.Runtime.Vector3.x
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: x
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double x
    return:
      type: System.Double
    content.vb: Public x As Double
- uid: Prowl.Runtime.Vector3.y
  commentId: F:Prowl.Runtime.Vector3.y
  id: y
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector3.y
  fullName: Prowl.Runtime.Vector3.y
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: y
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double y
    return:
      type: System.Double
    content.vb: Public y As Double
- uid: Prowl.Runtime.Vector3.z
  commentId: F:Prowl.Runtime.Vector3.z
  id: z
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Vector3.z
  fullName: Prowl.Runtime.Vector3.z
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: z
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double z
    return:
      type: System.Double
    content.vb: Public z As Double
- uid: Prowl.Runtime.Vector3.#ctor(System.Double)
  commentId: M:Prowl.Runtime.Vector3.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(double)
  nameWithType: Vector3.Vector3(double)
  fullName: Prowl.Runtime.Vector3.Vector3(double)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 19
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Constructs a vector whose elements are all the single specified value.
  example: []
  syntax:
    content: public Vector3(double value)
    parameters:
    - id: value
      type: System.Double
    content.vb: Public Sub New(value As Double)
  overload: Prowl.Runtime.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Double)
  fullName.vb: Prowl.Runtime.Vector3.New(Double)
  name.vb: New(Double)
- uid: Prowl.Runtime.Vector3.#ctor(Prowl.Runtime.Vector2,System.Double)
  commentId: M:Prowl.Runtime.Vector3.#ctor(Prowl.Runtime.Vector2,System.Double)
  id: '#ctor(Prowl.Runtime.Vector2,System.Double)'
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Vector2, double)
  nameWithType: Vector3.Vector3(Vector2, double)
  fullName: Prowl.Runtime.Vector3.Vector3(Prowl.Runtime.Vector2, double)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 22
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Constructs a Vector3 from the given Vector2 and a third value.
  example: []
  syntax:
    content: public Vector3(Vector2 value, double z = 0)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector2
    - id: z
      type: System.Double
    content.vb: Public Sub New(value As Vector2, z As Double = 0)
  overload: Prowl.Runtime.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Vector2, Double)
  fullName.vb: Prowl.Runtime.Vector3.New(Prowl.Runtime.Vector2, Double)
  name.vb: New(Vector2, Double)
- uid: Prowl.Runtime.Vector3.#ctor(System.Double,System.Double,System.Double)
  commentId: M:Prowl.Runtime.Vector3.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(double, double, double)
  nameWithType: Vector3.Vector3(double, double, double)
  fullName: Prowl.Runtime.Vector3.Vector3(double, double, double)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 25
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Constructs a vector with the given individual elements.
  example: []
  syntax:
    content: public Vector3(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: Prowl.Runtime.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Double, Double, Double)
  fullName.vb: Prowl.Runtime.Vector3.New(Double, Double, Double)
  name.vb: New(Double, Double, Double)
- uid: Prowl.Runtime.Vector3.normalized
  commentId: P:Prowl.Runtime.Vector3.normalized
  id: normalized
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: normalized
  nameWithType: Vector3.normalized
  fullName: Prowl.Runtime.Vector3.normalized
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: normalized
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 34
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Vector3 normalized { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public ReadOnly Property normalized As Vector3
  overload: Prowl.Runtime.Vector3.normalized*
- uid: Prowl.Runtime.Vector3.magnitude
  commentId: P:Prowl.Runtime.Vector3.magnitude
  id: magnitude
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: magnitude
  nameWithType: Vector3.magnitude
  fullName: Prowl.Runtime.Vector3.magnitude
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: magnitude
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 36
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double magnitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property magnitude As Double
  overload: Prowl.Runtime.Vector3.magnitude*
- uid: Prowl.Runtime.Vector3.sqrMagnitude
  commentId: P:Prowl.Runtime.Vector3.sqrMagnitude
  id: sqrMagnitude
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: sqrMagnitude
  nameWithType: Vector3.sqrMagnitude
  fullName: Prowl.Runtime.Vector3.sqrMagnitude
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: sqrMagnitude
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 38
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double sqrMagnitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property sqrMagnitude As Double
  overload: Prowl.Runtime.Vector3.sqrMagnitude*
- uid: Prowl.Runtime.Vector3.Item(System.Int32)
  commentId: P:Prowl.Runtime.Vector3.Item(System.Int32)
  id: Item(System.Int32)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector3.this[int]
  fullName: Prowl.Runtime.Vector3.this[int]
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: this[]
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 40
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Default Property this[](index As Integer) As Double
  overload: Prowl.Runtime.Vector3.Item*
  nameWithType.vb: Vector3.this[](Integer)
  fullName.vb: Prowl.Runtime.Vector3.this[](Integer)
  name.vb: this[](Integer)
- uid: Prowl.Runtime.Vector3.ToFloat
  commentId: M:Prowl.Runtime.Vector3.ToFloat
  id: ToFloat
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ToFloat()
  nameWithType: Vector3.ToFloat()
  fullName: Prowl.Runtime.Vector3.ToFloat()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToFloat
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 71
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Vector3 ToFloat()
    return:
      type: System.Numerics.Vector3
    content.vb: Public Function ToFloat() As Vector3
  overload: Prowl.Runtime.Vector3.ToFloat*
- uid: Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3)
  id: Scale(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Scale(Vector3)
  nameWithType: Vector3.Scale(Vector3)
  fullName: Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Scale
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 73
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Scale(Vector3 scale)
    parameters:
    - id: scale
      type: Prowl.Runtime.Vector3
    content.vb: Public Sub Scale(scale As Vector3)
  overload: Prowl.Runtime.Vector3.Scale*
- uid: Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Scale(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Scale(Vector3, Vector3)
  nameWithType: Vector3.Scale(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Scale(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Scale
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 75
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 Scale(Vector3 v, Vector3 scale)
    parameters:
    - id: v
      type: Prowl.Runtime.Vector3
    - id: scale
      type: Prowl.Runtime.Vector3
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function Scale(v As Vector3, scale As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Scale*
- uid: Prowl.Runtime.Vector3.Normalize
  commentId: M:Prowl.Runtime.Vector3.Normalize
  id: Normalize
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector3.Normalize()
  fullName: Prowl.Runtime.Vector3.Normalize()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Normalize
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 80
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: Prowl.Runtime.Vector3.Normalize*
- uid: Prowl.Runtime.Vector3.GetHashCode
  commentId: M:Prowl.Runtime.Vector3.GetHashCode
  id: GetHashCode
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: Prowl.Runtime.Vector3.GetHashCode()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetHashCode
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 95
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Prowl.Runtime.Vector3.GetHashCode*
- uid: Prowl.Runtime.Vector3.Equals(System.Object)
  commentId: M:Prowl.Runtime.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Vector3.Equals(object?)
  fullName: Prowl.Runtime.Vector3.Equals(object?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 108
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the given Object is equal to this Vector3 instance.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The Object to compare against.
    return:
      type: System.Boolean
      description: True if the Object is equal to this Vector3; False otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Prowl.Runtime.Vector3.Equals*
  nameWithType.vb: Vector3.Equals(Object)
  fullName.vb: Prowl.Runtime.Vector3.Equals(Object)
  name.vb: Equals(Object)
- uid: Prowl.Runtime.Vector3.Equals(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Equals(Prowl.Runtime.Vector3)
  id: Equals(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: Prowl.Runtime.Vector3.Equals(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 116
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the given Vector3 is equal to this Vector3 instance.
  example: []
  syntax:
    content: public bool Equals(Vector3 other)
    parameters:
    - id: other
      type: Prowl.Runtime.Vector3
      description: The Vector3 to compare this instance to.
    return:
      type: System.Boolean
      description: True if the other Vector3 is equal to this instance; False otherwise.
    content.vb: Public Function Equals(other As Vector3) As Boolean
  overload: Prowl.Runtime.Vector3.Equals*
  implements:
  - System.IEquatable{Prowl.Runtime.Vector3}.Equals(Prowl.Runtime.Vector3)
- uid: Prowl.Runtime.Vector3.ToString
  commentId: M:Prowl.Runtime.Vector3.ToString
  id: ToString
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: Prowl.Runtime.Vector3.ToString()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 127
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a String representing this Vector3 instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Prowl.Runtime.Vector3.ToString*
- uid: Prowl.Runtime.Vector3.ToString(System.String)
  commentId: M:Prowl.Runtime.Vector3.ToString(System.String)
  id: ToString(System.String)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector3.ToString(string)
  fullName: Prowl.Runtime.Vector3.ToString(string)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 137
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a String representing this Vector3 instance, using the specified format to format individual elements.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Function ToString(format As String) As String
  overload: Prowl.Runtime.Vector3.ToString*
  nameWithType.vb: Vector3.ToString(String)
  fullName.vb: Prowl.Runtime.Vector3.ToString(String)
  name.vb: ToString(String)
- uid: Prowl.Runtime.Vector3.ToString(System.String,System.IFormatProvider)
  commentId: M:Prowl.Runtime.Vector3.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: Vector3.ToString(string?, IFormatProvider?)
  fullName: Prowl.Runtime.Vector3.ToString(string?, System.IFormatProvider?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 149
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Returns a String representing this Vector3 instance, using the specified format to format individual elements

    and the given IFormatProvider.
  example: []
  syntax:
    content: public string ToString(string? format, IFormatProvider? formatProvider)
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider to use when formatting elements.
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: Prowl.Runtime.Vector3.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector3.ToString(String, IFormatProvider)
  fullName.vb: Prowl.Runtime.Vector3.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: Prowl.Runtime.Vector3.IsFinate
  commentId: M:Prowl.Runtime.Vector3.IsFinate
  id: IsFinate
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: IsFinate()
  nameWithType: Vector3.IsFinate()
  fullName: Prowl.Runtime.Vector3.IsFinate()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsFinate
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 165
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool IsFinate()
    return:
      type: System.Boolean
    content.vb: Public Function IsFinate() As Boolean
  overload: Prowl.Runtime.Vector3.IsFinate*
- uid: Prowl.Runtime.Vector3.zero
  commentId: P:Prowl.Runtime.Vector3.zero
  id: zero
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: zero
  nameWithType: Vector3.zero
  fullName: Prowl.Runtime.Vector3.zero
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: zero
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 170
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 zero { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property zero As Vector3
  overload: Prowl.Runtime.Vector3.zero*
- uid: Prowl.Runtime.Vector3.one
  commentId: P:Prowl.Runtime.Vector3.one
  id: one
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: one
  nameWithType: Vector3.one
  fullName: Prowl.Runtime.Vector3.one
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: one
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 171
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 one { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property one As Vector3
  overload: Prowl.Runtime.Vector3.one*
- uid: Prowl.Runtime.Vector3.right
  commentId: P:Prowl.Runtime.Vector3.right
  id: right
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: right
  nameWithType: Vector3.right
  fullName: Prowl.Runtime.Vector3.right
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: right
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 172
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 right { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property right As Vector3
  overload: Prowl.Runtime.Vector3.right*
- uid: Prowl.Runtime.Vector3.left
  commentId: P:Prowl.Runtime.Vector3.left
  id: left
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: left
  nameWithType: Vector3.left
  fullName: Prowl.Runtime.Vector3.left
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: left
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 173
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 left { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property left As Vector3
  overload: Prowl.Runtime.Vector3.left*
- uid: Prowl.Runtime.Vector3.up
  commentId: P:Prowl.Runtime.Vector3.up
  id: up
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: up
  nameWithType: Vector3.up
  fullName: Prowl.Runtime.Vector3.up
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: up
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 174
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 up { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property up As Vector3
  overload: Prowl.Runtime.Vector3.up*
- uid: Prowl.Runtime.Vector3.down
  commentId: P:Prowl.Runtime.Vector3.down
  id: down
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: down
  nameWithType: Vector3.down
  fullName: Prowl.Runtime.Vector3.down
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: down
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 175
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 down { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property down As Vector3
  overload: Prowl.Runtime.Vector3.down*
- uid: Prowl.Runtime.Vector3.forward
  commentId: P:Prowl.Runtime.Vector3.forward
  id: forward
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: forward
  nameWithType: Vector3.forward
  fullName: Prowl.Runtime.Vector3.forward
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: forward
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 176
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 forward { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property forward As Vector3
  overload: Prowl.Runtime.Vector3.forward*
- uid: Prowl.Runtime.Vector3.backward
  commentId: P:Prowl.Runtime.Vector3.backward
  id: backward
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: backward
  nameWithType: Vector3.backward
  fullName: Prowl.Runtime.Vector3.backward
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: backward
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 177
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 backward { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared ReadOnly Property backward As Vector3
  overload: Prowl.Runtime.Vector3.backward*
- uid: Prowl.Runtime.Vector3.infinity
  commentId: F:Prowl.Runtime.Vector3.infinity
  id: infinity
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: infinity
  nameWithType: Vector3.infinity
  fullName: Prowl.Runtime.Vector3.infinity
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: infinity
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 179
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 infinity
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared infinity As Vector3
- uid: Prowl.Runtime.Vector3.AngleBetween(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.AngleBetween(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: AngleBetween(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: AngleBetween(Vector3, Vector3)
  nameWithType: Vector3.AngleBetween(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.AngleBetween(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AngleBetween
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 185
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static double AngleBetween(Vector3 from, Vector3 to)
    parameters:
    - id: from
      type: Prowl.Runtime.Vector3
    - id: to
      type: Prowl.Runtime.Vector3
    return:
      type: System.Double
    content.vb: Public Shared Function AngleBetween(from As Vector3, [to] As Vector3) As Double
  overload: Prowl.Runtime.Vector3.AngleBetween*
- uid: Prowl.Runtime.Vector3.Distance(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Distance(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Distance(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Distance(Vector3, Vector3)
  nameWithType: Vector3.Distance(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Distance(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Distance
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 189
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the Euclidean distance between the two given points.
  example: []
  syntax:
    content: public static double Distance(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
    - id: value2
      type: Prowl.Runtime.Vector3
    return:
      type: System.Double
    content.vb: Public Shared Function Distance(value1 As Vector3, value2 As Vector3) As Double
  overload: Prowl.Runtime.Vector3.Distance*
- uid: Prowl.Runtime.Vector3.MoveTowards(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Vector3.MoveTowards(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  id: MoveTowards(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: MoveTowards(Vector3, Vector3, double)
  nameWithType: Vector3.MoveTowards(Vector3, Vector3, double)
  fullName: Prowl.Runtime.Vector3.MoveTowards(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: MoveTowards
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 201
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 MoveTowards(Vector3 current, Vector3 target, double maxDistanceDelta)
    parameters:
    - id: current
      type: Prowl.Runtime.Vector3
    - id: target
      type: Prowl.Runtime.Vector3
    - id: maxDistanceDelta
      type: System.Double
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function MoveTowards(current As Vector3, target As Vector3, maxDistanceDelta As Double) As Vector3
  overload: Prowl.Runtime.Vector3.MoveTowards*
  nameWithType.vb: Vector3.MoveTowards(Vector3, Vector3, Double)
  fullName.vb: Prowl.Runtime.Vector3.MoveTowards(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Double)
  name.vb: MoveTowards(Vector3, Vector3, Double)
- uid: Prowl.Runtime.Vector3.SmoothDamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@,System.Double,System.Double,System.Double)
  commentId: M:Prowl.Runtime.Vector3.SmoothDamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@,System.Double,System.Double,System.Double)
  id: SmoothDamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@,System.Double,System.Double,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: SmoothDamp(Vector3, Vector3, ref Vector3, double, double, double)
  nameWithType: Vector3.SmoothDamp(Vector3, Vector3, ref Vector3, double, double, double)
  fullName: Prowl.Runtime.Vector3.SmoothDamp(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, ref Prowl.Runtime.Vector3, double, double, double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SmoothDamp
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 210
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 SmoothDamp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, double smoothTime, double maxSpeed = Infinity, double deltaTime = 0.02)
    parameters:
    - id: current
      type: Prowl.Runtime.Vector3
    - id: target
      type: Prowl.Runtime.Vector3
    - id: currentVelocity
      type: Prowl.Runtime.Vector3
    - id: smoothTime
      type: System.Double
    - id: maxSpeed
      type: System.Double
    - id: deltaTime
      type: System.Double
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function SmoothDamp(current As Vector3, target As Vector3, currentVelocity As Vector3, smoothTime As Double, maxSpeed As Double = Infinity, deltaTime As Double = 0.02) As Vector3
  overload: Prowl.Runtime.Vector3.SmoothDamp*
  nameWithType.vb: Vector3.SmoothDamp(Vector3, Vector3, Vector3, Double, Double, Double)
  fullName.vb: Prowl.Runtime.Vector3.SmoothDamp(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Double, Double, Double)
  name.vb: SmoothDamp(Vector3, Vector3, Vector3, Double, Double, Double)
- uid: Prowl.Runtime.Vector3.Normalize(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Normalize(Prowl.Runtime.Vector3)
  id: Normalize(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: Prowl.Runtime.Vector3.Normalize(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Normalize
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 241
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector with the same direction as the given vector, but with a length of 1.
  example: []
  syntax:
    content: public static Vector3 Normalize(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function Normalize(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Normalize*
- uid: Prowl.Runtime.Vector3.ClampMagnitude(Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Vector3.ClampMagnitude(Prowl.Runtime.Vector3,System.Double)
  id: ClampMagnitude(Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ClampMagnitude(Vector3, double)
  nameWithType: Vector3.ClampMagnitude(Vector3, double)
  fullName: Prowl.Runtime.Vector3.ClampMagnitude(Prowl.Runtime.Vector3, double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ClampMagnitude
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 249
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 ClampMagnitude(Vector3 vector, double maxLength)
    parameters:
    - id: vector
      type: Prowl.Runtime.Vector3
    - id: maxLength
      type: System.Double
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function ClampMagnitude(vector As Vector3, maxLength As Double) As Vector3
  overload: Prowl.Runtime.Vector3.ClampMagnitude*
  nameWithType.vb: Vector3.ClampMagnitude(Vector3, Double)
  fullName.vb: Prowl.Runtime.Vector3.ClampMagnitude(Prowl.Runtime.Vector3, Double)
  name.vb: ClampMagnitude(Vector3, Double)
- uid: Prowl.Runtime.Vector3.Cross(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Cross(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Cross(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Cross(Vector3, Vector3)
  nameWithType: Vector3.Cross(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Cross(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Cross
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 263
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Computes the cross product of two vectors.
  example: []
  syntax:
    content: public static Vector3 Cross(Vector3 vector1, Vector3 vector2)
    parameters:
    - id: vector1
      type: Prowl.Runtime.Vector3
      description: The first vector.
    - id: vector2
      type: Prowl.Runtime.Vector3
      description: The second vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The cross product.
    content.vb: Public Shared Function Cross(vector1 As Vector3, vector2 As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Cross*
- uid: Prowl.Runtime.Vector3.Reflect(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Reflect(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Reflect(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(Vector3, Vector3)
  nameWithType: Vector3.Reflect(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Reflect(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Reflect
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 278
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the reflection of a vector off a surface that has the specified normal.
  example: []
  syntax:
    content: public static Vector3 Reflect(Vector3 vector, Vector3 normal)
    parameters:
    - id: vector
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: normal
      type: Prowl.Runtime.Vector3
      description: The normal of the surface being reflected off.
    return:
      type: Prowl.Runtime.Vector3
      description: The reflected vector.
    content.vb: Public Shared Function Reflect(vector As Vector3, normal As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Reflect*
- uid: Prowl.Runtime.Vector3.Clamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Clamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Clamp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(Vector3, Vector3, Vector3)
  nameWithType: Vector3.Clamp(Vector3, Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Clamp(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Clamp
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 295
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Restricts a vector between a min and max value.
  example: []
  syntax:
    content: public static Vector3 Clamp(Vector3 value1, Vector3 min, Vector3 max)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: min
      type: Prowl.Runtime.Vector3
      description: The minimum value.
    - id: max
      type: Prowl.Runtime.Vector3
      description: The maximum value.
    return:
      type: Prowl.Runtime.Vector3
      description: The restricted vector.
    content.vb: Public Shared Function Clamp(value1 As Vector3, min As Vector3, max As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Clamp*
- uid: Prowl.Runtime.Vector3.Lerp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Vector3.Lerp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  id: Lerp(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(Vector3, Vector3, double)
  nameWithType: Vector3.Lerp(Vector3, Vector3, double)
  fullName: Prowl.Runtime.Vector3.Lerp(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Lerp
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 323
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Linearly interpolates between two vectors based on the given weighting.
  example: []
  syntax:
    content: public static Vector3 Lerp(Vector3 value1, Vector3 value2, double amount)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: value2
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    - id: amount
      type: System.Double
      description: Value between 0 and 1 indicating the weight of the second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The interpolated vector.
    content.vb: Public Shared Function Lerp(value1 As Vector3, value2 As Vector3, amount As Double) As Vector3
  overload: Prowl.Runtime.Vector3.Lerp*
  nameWithType.vb: Vector3.Lerp(Vector3, Vector3, Double)
  fullName.vb: Prowl.Runtime.Vector3.Lerp(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Double)
  name.vb: Lerp(Vector3, Vector3, Double)
- uid: Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  commentId: M:Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  id: Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Matrix4x4)
  nameWithType: Vector3.Transform(Vector3, Matrix4x4)
  fullName: Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3, Prowl.Runtime.Matrix4x4)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Transform
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 338
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Transforms a vector by the given matrix.
  example: []
  syntax:
    content: public static Vector3 Transform(Vector3 position, Matrix4x4 matrix)
    parameters:
    - id: position
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: matrix
      type: Prowl.Runtime.Matrix4x4
      description: The transformation matrix.
    return:
      type: Prowl.Runtime.Vector3
      description: The transformed vector.
    content.vb: Public Shared Function Transform(position As Vector3, matrix As Matrix4x4) As Vector3
  overload: Prowl.Runtime.Vector3.Transform*
- uid: Prowl.Runtime.Vector3.TransformNormal(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  commentId: M:Prowl.Runtime.Vector3.TransformNormal(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  id: TransformNormal(Prowl.Runtime.Vector3,Prowl.Runtime.Matrix4x4)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector3, Matrix4x4)
  nameWithType: Vector3.TransformNormal(Vector3, Matrix4x4)
  fullName: Prowl.Runtime.Vector3.TransformNormal(Prowl.Runtime.Vector3, Prowl.Runtime.Matrix4x4)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: TransformNormal
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 353
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Transforms a vector normal by the given matrix.
  example: []
  syntax:
    content: public static Vector3 TransformNormal(Vector3 normal, Matrix4x4 matrix)
    parameters:
    - id: normal
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: matrix
      type: Prowl.Runtime.Matrix4x4
      description: The transformation matrix.
    return:
      type: Prowl.Runtime.Vector3
      description: The transformed vector.
    content.vb: Public Shared Function TransformNormal(normal As Vector3, matrix As Matrix4x4) As Vector3
  overload: Prowl.Runtime.Vector3.TransformNormal*
- uid: Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Quaternion)
  commentId: M:Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Quaternion)
  id: Transform(Prowl.Runtime.Vector3,Prowl.Runtime.Quaternion)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion)
  nameWithType: Vector3.Transform(Vector3, Quaternion)
  fullName: Prowl.Runtime.Vector3.Transform(Prowl.Runtime.Vector3, Prowl.Runtime.Quaternion)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Transform
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 368
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Transforms a vector by the given Quaternion rotation value.
  example: []
  syntax:
    content: public static Vector3 Transform(Vector3 value, Quaternion rotation)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
      description: The source vector to be rotated.
    - id: rotation
      type: Prowl.Runtime.Quaternion
      description: The rotation to apply.
    return:
      type: Prowl.Runtime.Vector3
      description: The transformed vector.
    content.vb: Public Shared Function Transform(value As Vector3, rotation As Quaternion) As Vector3
  overload: Prowl.Runtime.Vector3.Transform*
- uid: Prowl.Runtime.Vector3.Dot(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Dot(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Dot(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Vector3)
  nameWithType: Vector3.Dot(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Dot(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Dot
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 397
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the dot product of two vectors.
  example: []
  syntax:
    content: public static double Dot(Vector3 vector1, Vector3 vector2)
    parameters:
    - id: vector1
      type: Prowl.Runtime.Vector3
      description: The first vector.
    - id: vector2
      type: Prowl.Runtime.Vector3
      description: The second vector.
    return:
      type: System.Double
      description: The dot product.
    content.vb: Public Shared Function Dot(vector1 As Vector3, vector2 As Vector3) As Double
  overload: Prowl.Runtime.Vector3.Dot*
- uid: Prowl.Runtime.Vector3.Min(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Min(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Min(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Min(Vector3, Vector3)
  nameWithType: Vector3.Min(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Min(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Min
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 411
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the minimum of each of the pairs of elements in the two source vectors.
  example: []
  syntax:
    content: public static Vector3 Min(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: value2
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The minimized vector.
    content.vb: Public Shared Function Min(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Min*
- uid: Prowl.Runtime.Vector3.Max(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Max(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Max(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Max(Vector3, Vector3)
  nameWithType: Vector3.Max(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.Max(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Max
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 425
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the maximum of each of the pairs of elements in the two source vectors.
  example: []
  syntax:
    content: public static Vector3 Max(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: value2
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The maximized vector.
    content.vb: Public Shared Function Max(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Max*
- uid: Prowl.Runtime.Vector3.Abs(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.Abs(Prowl.Runtime.Vector3)
  id: Abs(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: Prowl.Runtime.Vector3.Abs(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Abs
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 439
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the absolute values of each of the source vector's elements.
  example: []
  syntax:
    content: public static Vector3 Abs(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The absolute value vector.
    content.vb: Public Shared Function Abs(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.Abs*
- uid: Prowl.Runtime.Vector3.SquareRoot(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.SquareRoot(Prowl.Runtime.Vector3)
  id: SquareRoot(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: SquareRoot(Vector3)
  nameWithType: Vector3.SquareRoot(Vector3)
  fullName: Prowl.Runtime.Vector3.SquareRoot(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SquareRoot
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 450
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the square root of each of the source vector's elements.
  example: []
  syntax:
    content: public static Vector3 SquareRoot(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The square root vector.
    content.vb: Public Shared Function SquareRoot(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.SquareRoot*
- uid: Prowl.Runtime.Vector3.ProjectOnPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.ProjectOnPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: ProjectOnPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: ProjectOnPlane(Vector3, Vector3)
  nameWithType: Vector3.ProjectOnPlane(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.ProjectOnPlane(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ProjectOnPlane
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 456
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector3 ProjectOnPlane(Vector3 vector, Vector3 planeNormal)
    parameters:
    - id: vector
      type: Prowl.Runtime.Vector3
    - id: planeNormal
      type: Prowl.Runtime.Vector3
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Function ProjectOnPlane(vector As Vector3, planeNormal As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.ProjectOnPlane*
- uid: Prowl.Runtime.Vector3.op_Addition(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Addition(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Addition(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator +(Vector3, Vector3)
  nameWithType: Vector3.operator +(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator +(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Addition
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 479
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Adds two vectors together.
  example: []
  syntax:
    content: public static Vector3 operator +(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The summed vector.
    content.vb: Public Shared Operator +(left As Vector3, right As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Addition*
  nameWithType.vb: Vector3.+(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.+(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: +(Vector3, Vector3)
- uid: Prowl.Runtime.Vector3.op_Subtraction(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Subtraction(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Subtraction(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator -(Vector3, Vector3)
  nameWithType: Vector3.operator -(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator -(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Subtraction
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 491
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Subtracts the second vector from the first.
  example: []
  syntax:
    content: public static Vector3 operator -(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The difference vector.
    content.vb: Public Shared Operator -(left As Vector3, right As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Subtraction*
  nameWithType.vb: Vector3.-(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.-(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: -(Vector3, Vector3)
- uid: Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Multiply(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Vector3, Vector3)
  nameWithType: Vector3.operator *(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator *(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 503
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies two vectors together.
  example: []
  syntax:
    content: public static Vector3 operator *(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The product vector.
    content.vb: Public Shared Operator *(left As Vector3, right As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Multiply*
  nameWithType.vb: Vector3.*(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.*(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: '*(Vector3, Vector3)'
- uid: Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Vector3.op_Multiply(Prowl.Runtime.Vector3,System.Double)
  id: op_Multiply(Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Vector3, double)
  nameWithType: Vector3.operator *(Vector3, double)
  fullName: Prowl.Runtime.Vector3.operator *(Prowl.Runtime.Vector3, double)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 515
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies a vector by the given scalar.
  example: []
  syntax:
    content: public static Vector3 operator *(Vector3 left, double right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: right
      type: System.Double
      description: The scalar value.
    return:
      type: Prowl.Runtime.Vector3
      description: The scaled vector.
    content.vb: Public Shared Operator *(left As Vector3, right As Double) As Vector3
  overload: Prowl.Runtime.Vector3.op_Multiply*
  nameWithType.vb: Vector3.*(Vector3, Double)
  fullName.vb: Prowl.Runtime.Vector3.*(Prowl.Runtime.Vector3, Double)
  name.vb: '*(Vector3, Double)'
- uid: Prowl.Runtime.Vector3.op_Multiply(System.Double,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Multiply(System.Double,Prowl.Runtime.Vector3)
  id: op_Multiply(System.Double,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator *(double, Vector3)
  nameWithType: Vector3.operator *(double, Vector3)
  fullName: Prowl.Runtime.Vector3.operator *(double, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 527
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies a vector by the given scalar.
  example: []
  syntax:
    content: public static Vector3 operator *(double left, Vector3 right)
    parameters:
    - id: left
      type: System.Double
      description: The scalar value.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The scaled vector.
    content.vb: Public Shared Operator *(left As Double, right As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Multiply*
  nameWithType.vb: Vector3.*(Double, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.*(Double, Prowl.Runtime.Vector3)
  name.vb: '*(Double, Vector3)'
- uid: Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Division(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator /(Vector3, Vector3)
  nameWithType: Vector3.operator /(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator /(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Division
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 539
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Divides the first vector by the second.
  example: []
  syntax:
    content: public static Vector3 operator /(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The vector resulting from the division.
    content.vb: Public Shared Operator /(left As Vector3, right As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Division*
  nameWithType.vb: Vector3./(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3./(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: /(Vector3, Vector3)
- uid: Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Vector3.op_Division(Prowl.Runtime.Vector3,System.Double)
  id: op_Division(Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator /(Vector3, double)
  nameWithType: Vector3.operator /(Vector3, double)
  fullName: Prowl.Runtime.Vector3.operator /(Prowl.Runtime.Vector3, double)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Division
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 551
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Divides the vector by the given scalar.
  example: []
  syntax:
    content: public static Vector3 operator /(Vector3 value1, double value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector3
      description: The source vector.
    - id: value2
      type: System.Double
      description: The scalar value.
    return:
      type: Prowl.Runtime.Vector3
      description: The result of the division.
    content.vb: Public Shared Operator /(value1 As Vector3, value2 As Double) As Vector3
  overload: Prowl.Runtime.Vector3.op_Division*
  nameWithType.vb: Vector3./(Vector3, Double)
  fullName.vb: Prowl.Runtime.Vector3./(Prowl.Runtime.Vector3, Double)
  name.vb: /(Vector3, Double)
- uid: Prowl.Runtime.Vector3.op_UnaryNegation(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_UnaryNegation(Prowl.Runtime.Vector3)
  id: op_UnaryNegation(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator -(Vector3)
  nameWithType: Vector3.operator -(Vector3)
  fullName: Prowl.Runtime.Vector3.operator -(Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_UnaryNegation
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 567
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Negates a given vector.
  example: []
  syntax:
    content: public static Vector3 operator -(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector3
      description: The negated vector.
    content.vb: Public Shared Operator -(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_UnaryNegation*
  nameWithType.vb: Vector3.-(Vector3)
  fullName.vb: Prowl.Runtime.Vector3.-(Prowl.Runtime.Vector3)
  name.vb: -(Vector3)
- uid: Prowl.Runtime.Vector3.op_Equality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Equality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Equality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator ==(Vector3, Vector3)
  nameWithType: Vector3.operator ==(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator ==(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Equality
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 579
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the two given vectors are equal.
  example: []
  syntax:
    content: public static bool operator ==(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first vector to compare.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second vector to compare.
    return:
      type: System.Boolean
      description: True if the vectors are equal; False otherwise.
    content.vb: Public Shared Operator =(left As Vector3, right As Vector3) As Boolean
  overload: Prowl.Runtime.Vector3.op_Equality*
  nameWithType.vb: Vector3.=(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.=(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: =(Vector3, Vector3)
- uid: Prowl.Runtime.Vector3.op_Inequality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Vector3.op_Inequality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: op_Inequality(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: operator !=(Vector3, Vector3)
  nameWithType: Vector3.operator !=(Vector3, Vector3)
  fullName: Prowl.Runtime.Vector3.operator !=(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Inequality
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 591
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the two given vectors are not equal.
  example: []
  syntax:
    content: public static bool operator !=(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector3
      description: The first vector to compare.
    - id: right
      type: Prowl.Runtime.Vector3
      description: The second vector to compare.
    return:
      type: System.Boolean
      description: True if the vectors are not equal; False if they are equal.
    content.vb: Public Shared Operator <>(left As Vector3, right As Vector3) As Boolean
  overload: Prowl.Runtime.Vector3.op_Inequality*
  nameWithType.vb: Vector3.<>(Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Vector3.<>(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: <>(Vector3, Vector3)
- uid: Prowl.Runtime.Vector3.op_Implicit(Prowl.Runtime.Vector3)~System.Numerics.Vector3
  commentId: M:Prowl.Runtime.Vector3.op_Implicit(Prowl.Runtime.Vector3)~System.Numerics.Vector3
  id: op_Implicit(Prowl.Runtime.Vector3)~System.Numerics.Vector3
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector3)
  nameWithType: Vector3.implicit operator Vector3(Vector3)
  fullName: Prowl.Runtime.Vector3.implicit operator System.Numerics.Vector3(Prowl.Runtime.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Implicit
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 597
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static implicit operator Vector3(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Widening Operator CType(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Implicit*
  nameWithType.vb: Vector3.CType(Vector3)
  fullName.vb: Prowl.Runtime.Vector3.CType(Prowl.Runtime.Vector3)
  name.vb: CType(Vector3)
- uid: Prowl.Runtime.Vector3.op_Implicit(System.Numerics.Vector3)~Prowl.Runtime.Vector3
  commentId: M:Prowl.Runtime.Vector3.op_Implicit(System.Numerics.Vector3)~Prowl.Runtime.Vector3
  id: op_Implicit(System.Numerics.Vector3)~Prowl.Runtime.Vector3
  parent: Prowl.Runtime.Vector3
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector3)
  nameWithType: Vector3.implicit operator Vector3(Vector3)
  fullName: Prowl.Runtime.Vector3.implicit operator Prowl.Runtime.Vector3(System.Numerics.Vector3)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector3.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Implicit
    path: ../Prowl/Prowl.Runtime/Math/Vector3.cs
    startLine: 603
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static implicit operator Vector3(Vector3 value)
    parameters:
    - id: value
      type: System.Numerics.Vector3
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public Shared Widening Operator CType(value As Vector3) As Vector3
  overload: Prowl.Runtime.Vector3.op_Implicit*
  nameWithType.vb: Vector3.CType(Vector3)
  fullName.vb: Prowl.Runtime.Vector3.CType(System.Numerics.Vector3)
  name.vb: CType(Vector3)
references:
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: System.IEquatable{Prowl.Runtime.Vector3}
  commentId: T:System.IEquatable{Prowl.Runtime.Vector3}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector3>
  nameWithType: IEquatable<Vector3>
  fullName: System.IEquatable<Prowl.Runtime.Vector3>
  nameWithType.vb: IEquatable(Of Vector3)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Vector3)
  name.vb: IEquatable(Of Vector3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.Vector3.Prowl.Runtime.MathD.GetQuaternion
  commentId: M:Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.MathD
  definition: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  name: GetQuaternion(Vector3)
  nameWithType: MathD.GetQuaternion(Vector3)
  fullName: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
    name: GetQuaternion
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
    name: GetQuaternion
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.Vector3.Prowl.Runtime.MathD.NormalizeEulerAngleDegrees
  commentId: M:Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.MathD
  definition: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  name: NormalizeEulerAngleDegrees(Vector3)
  nameWithType: MathD.NormalizeEulerAngleDegrees(Vector3)
  fullName: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
    name: NormalizeEulerAngleDegrees
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
    name: NormalizeEulerAngleDegrees
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.Vector3.Prowl.Runtime.MathD.ToDeg
  commentId: M:Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.MathD
  definition: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  name: ToDeg(Vector3)
  nameWithType: MathD.ToDeg(Vector3)
  fullName: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
    name: ToDeg
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
    name: ToDeg
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.Vector3.Prowl.Runtime.MathD.ToRad
  commentId: M:Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.MathD
  definition: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  name: ToRad(Vector3)
  nameWithType: MathD.ToRad(Vector3)
  fullName: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
    name: ToRad
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
    name: ToRad
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  name: GetQuaternion(Vector3)
  nameWithType: MathD.GetQuaternion(Vector3)
  fullName: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
    name: GetQuaternion
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.GetQuaternion(Prowl.Runtime.Vector3)
    name: GetQuaternion
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_GetQuaternion_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.MathD
  commentId: T:Prowl.Runtime.MathD
  parent: Prowl.Runtime
  href: Prowl.Runtime.MathD.html
  name: MathD
  nameWithType: MathD
  fullName: Prowl.Runtime.MathD
- uid: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  name: NormalizeEulerAngleDegrees(Vector3)
  nameWithType: MathD.NormalizeEulerAngleDegrees(Vector3)
  fullName: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
    name: NormalizeEulerAngleDegrees
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.NormalizeEulerAngleDegrees(Prowl.Runtime.Vector3)
    name: NormalizeEulerAngleDegrees
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_NormalizeEulerAngleDegrees_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  name: ToDeg(Vector3)
  nameWithType: MathD.ToDeg(Vector3)
  fullName: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
    name: ToDeg
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.ToDeg(Prowl.Runtime.Vector3)
    name: ToDeg
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToDeg_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  name: ToRad(Vector3)
  nameWithType: MathD.ToRad(Vector3)
  fullName: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
    name: ToRad
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.MathD.ToRad(Prowl.Runtime.Vector3)
    name: ToRad
    href: Prowl.Runtime.MathD.html#Prowl_Runtime_MathD_ToRad_Prowl_Runtime_Vector3_
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Prowl.Runtime.Vector3.#ctor*
  commentId: Overload:Prowl.Runtime.Vector3.#ctor
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3__ctor_System_Double_
  name: Vector3
  nameWithType: Vector3.Vector3
  fullName: Prowl.Runtime.Vector3.Vector3
  nameWithType.vb: Vector3.New
  fullName.vb: Prowl.Runtime.Vector3.New
  name.vb: New
- uid: Prowl.Runtime.Vector2
  commentId: T:Prowl.Runtime.Vector2
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: Prowl.Runtime.Vector2
- uid: Prowl.Runtime.Vector3.normalized*
  commentId: Overload:Prowl.Runtime.Vector3.normalized
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_normalized
  name: normalized
  nameWithType: Vector3.normalized
  fullName: Prowl.Runtime.Vector3.normalized
- uid: Prowl.Runtime.Vector3
  commentId: T:Prowl.Runtime.Vector3
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: Prowl.Runtime.Vector3
- uid: Prowl.Runtime.Vector3.magnitude*
  commentId: Overload:Prowl.Runtime.Vector3.magnitude
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_magnitude
  name: magnitude
  nameWithType: Vector3.magnitude
  fullName: Prowl.Runtime.Vector3.magnitude
- uid: Prowl.Runtime.Vector3.sqrMagnitude*
  commentId: Overload:Prowl.Runtime.Vector3.sqrMagnitude
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_sqrMagnitude
  name: sqrMagnitude
  nameWithType: Vector3.sqrMagnitude
  fullName: Prowl.Runtime.Vector3.sqrMagnitude
- uid: Prowl.Runtime.Vector3.Item*
  commentId: Overload:Prowl.Runtime.Vector3.Item
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Item_System_Int32_
  name: this
  nameWithType: Vector3.this
  fullName: Prowl.Runtime.Vector3.this
  nameWithType.vb: Vector3.this[]
  fullName.vb: Prowl.Runtime.Vector3.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Prowl.Runtime.Vector3.ToFloat*
  commentId: Overload:Prowl.Runtime.Vector3.ToFloat
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_ToFloat
  name: ToFloat
  nameWithType: Vector3.ToFloat
  fullName: Prowl.Runtime.Vector3.ToFloat
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Prowl.Runtime.Vector3.Scale*
  commentId: Overload:Prowl.Runtime.Vector3.Scale
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Scale_Prowl_Runtime_Vector3_
  name: Scale
  nameWithType: Vector3.Scale
  fullName: Prowl.Runtime.Vector3.Scale
- uid: Prowl.Runtime.Vector3.Normalize*
  commentId: Overload:Prowl.Runtime.Vector3.Normalize
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Normalize
  name: Normalize
  nameWithType: Vector3.Normalize
  fullName: Prowl.Runtime.Vector3.Normalize
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Prowl.Runtime.Vector3.GetHashCode*
  commentId: Overload:Prowl.Runtime.Vector3.GetHashCode
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_GetHashCode
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
  fullName: Prowl.Runtime.Vector3.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.Vector3.Equals*
  commentId: Overload:Prowl.Runtime.Vector3.Equals
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Equals_System_Object_
  name: Equals
  nameWithType: Vector3.Equals
  fullName: Prowl.Runtime.Vector3.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Prowl.Runtime.Vector3}.Equals(Prowl.Runtime.Vector3)
  commentId: M:System.IEquatable{Prowl.Runtime.Vector3}.Equals(Prowl.Runtime.Vector3)
  parent: System.IEquatable{Prowl.Runtime.Vector3}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector3)
  nameWithType: IEquatable<Vector3>.Equals(Vector3)
  fullName: System.IEquatable<Prowl.Runtime.Vector3>.Equals(Prowl.Runtime.Vector3)
  nameWithType.vb: IEquatable(Of Vector3).Equals(Vector3)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Vector3).Equals(Prowl.Runtime.Vector3)
  spec.csharp:
  - uid: System.IEquatable{Prowl.Runtime.Vector3}.Equals(Prowl.Runtime.Vector3)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Prowl.Runtime.Vector3}.Equals(Prowl.Runtime.Vector3)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Vector3
    name: Vector3
    href: Prowl.Runtime.Vector3.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Prowl.Runtime.Vector3.ToString*
  commentId: Overload:Prowl.Runtime.Vector3.ToString
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_ToString
  name: ToString
  nameWithType: Vector3.ToString
  fullName: Prowl.Runtime.Vector3.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Prowl.Runtime.Vector3.IsFinate*
  commentId: Overload:Prowl.Runtime.Vector3.IsFinate
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_IsFinate
  name: IsFinate
  nameWithType: Vector3.IsFinate
  fullName: Prowl.Runtime.Vector3.IsFinate
- uid: Prowl.Runtime.Vector3.zero*
  commentId: Overload:Prowl.Runtime.Vector3.zero
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_zero
  name: zero
  nameWithType: Vector3.zero
  fullName: Prowl.Runtime.Vector3.zero
- uid: Prowl.Runtime.Vector3.one*
  commentId: Overload:Prowl.Runtime.Vector3.one
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_one
  name: one
  nameWithType: Vector3.one
  fullName: Prowl.Runtime.Vector3.one
- uid: Prowl.Runtime.Vector3.right*
  commentId: Overload:Prowl.Runtime.Vector3.right
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_right
  name: right
  nameWithType: Vector3.right
  fullName: Prowl.Runtime.Vector3.right
- uid: Prowl.Runtime.Vector3.left*
  commentId: Overload:Prowl.Runtime.Vector3.left
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_left
  name: left
  nameWithType: Vector3.left
  fullName: Prowl.Runtime.Vector3.left
- uid: Prowl.Runtime.Vector3.up*
  commentId: Overload:Prowl.Runtime.Vector3.up
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_up
  name: up
  nameWithType: Vector3.up
  fullName: Prowl.Runtime.Vector3.up
- uid: Prowl.Runtime.Vector3.down*
  commentId: Overload:Prowl.Runtime.Vector3.down
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_down
  name: down
  nameWithType: Vector3.down
  fullName: Prowl.Runtime.Vector3.down
- uid: Prowl.Runtime.Vector3.forward*
  commentId: Overload:Prowl.Runtime.Vector3.forward
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_forward
  name: forward
  nameWithType: Vector3.forward
  fullName: Prowl.Runtime.Vector3.forward
- uid: Prowl.Runtime.Vector3.backward*
  commentId: Overload:Prowl.Runtime.Vector3.backward
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_backward
  name: backward
  nameWithType: Vector3.backward
  fullName: Prowl.Runtime.Vector3.backward
- uid: Prowl.Runtime.Vector3.AngleBetween*
  commentId: Overload:Prowl.Runtime.Vector3.AngleBetween
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_AngleBetween_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: AngleBetween
  nameWithType: Vector3.AngleBetween
  fullName: Prowl.Runtime.Vector3.AngleBetween
- uid: Prowl.Runtime.Vector3.Distance*
  commentId: Overload:Prowl.Runtime.Vector3.Distance
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Distance_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Distance
  nameWithType: Vector3.Distance
  fullName: Prowl.Runtime.Vector3.Distance
- uid: Prowl.Runtime.Vector3.MoveTowards*
  commentId: Overload:Prowl.Runtime.Vector3.MoveTowards
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_MoveTowards_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_System_Double_
  name: MoveTowards
  nameWithType: Vector3.MoveTowards
  fullName: Prowl.Runtime.Vector3.MoveTowards
- uid: Prowl.Runtime.Vector3.SmoothDamp*
  commentId: Overload:Prowl.Runtime.Vector3.SmoothDamp
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_SmoothDamp_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3__System_Double_System_Double_System_Double_
  name: SmoothDamp
  nameWithType: Vector3.SmoothDamp
  fullName: Prowl.Runtime.Vector3.SmoothDamp
- uid: Prowl.Runtime.Vector3.ClampMagnitude*
  commentId: Overload:Prowl.Runtime.Vector3.ClampMagnitude
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_ClampMagnitude_Prowl_Runtime_Vector3_System_Double_
  name: ClampMagnitude
  nameWithType: Vector3.ClampMagnitude
  fullName: Prowl.Runtime.Vector3.ClampMagnitude
- uid: Prowl.Runtime.Vector3.Cross*
  commentId: Overload:Prowl.Runtime.Vector3.Cross
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Cross_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Cross
  nameWithType: Vector3.Cross
  fullName: Prowl.Runtime.Vector3.Cross
- uid: Prowl.Runtime.Vector3.Reflect*
  commentId: Overload:Prowl.Runtime.Vector3.Reflect
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Reflect_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Reflect
  nameWithType: Vector3.Reflect
  fullName: Prowl.Runtime.Vector3.Reflect
- uid: Prowl.Runtime.Vector3.Clamp*
  commentId: Overload:Prowl.Runtime.Vector3.Clamp
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Clamp_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Clamp
  nameWithType: Vector3.Clamp
  fullName: Prowl.Runtime.Vector3.Clamp
- uid: Prowl.Runtime.Vector3.Lerp*
  commentId: Overload:Prowl.Runtime.Vector3.Lerp
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Lerp_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_System_Double_
  name: Lerp
  nameWithType: Vector3.Lerp
  fullName: Prowl.Runtime.Vector3.Lerp
- uid: Prowl.Runtime.Vector3.Transform*
  commentId: Overload:Prowl.Runtime.Vector3.Transform
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Transform_Prowl_Runtime_Vector3_Prowl_Runtime_Matrix4x4_
  name: Transform
  nameWithType: Vector3.Transform
  fullName: Prowl.Runtime.Vector3.Transform
- uid: Prowl.Runtime.Matrix4x4
  commentId: T:Prowl.Runtime.Matrix4x4
  parent: Prowl.Runtime
  href: Prowl.Runtime.Matrix4x4.html
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: Prowl.Runtime.Matrix4x4
- uid: Prowl.Runtime.Vector3.TransformNormal*
  commentId: Overload:Prowl.Runtime.Vector3.TransformNormal
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_TransformNormal_Prowl_Runtime_Vector3_Prowl_Runtime_Matrix4x4_
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
  fullName: Prowl.Runtime.Vector3.TransformNormal
- uid: Prowl.Runtime.Quaternion
  commentId: T:Prowl.Runtime.Quaternion
  parent: Prowl.Runtime
  href: Prowl.Runtime.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: Prowl.Runtime.Quaternion
- uid: Prowl.Runtime.Vector3.Dot*
  commentId: Overload:Prowl.Runtime.Vector3.Dot
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Dot_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Dot
  nameWithType: Vector3.Dot
  fullName: Prowl.Runtime.Vector3.Dot
- uid: Prowl.Runtime.Vector3.Min*
  commentId: Overload:Prowl.Runtime.Vector3.Min
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Min_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Min
  nameWithType: Vector3.Min
  fullName: Prowl.Runtime.Vector3.Min
- uid: Prowl.Runtime.Vector3.Max*
  commentId: Overload:Prowl.Runtime.Vector3.Max
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Max_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Max
  nameWithType: Vector3.Max
  fullName: Prowl.Runtime.Vector3.Max
- uid: Prowl.Runtime.Vector3.Abs*
  commentId: Overload:Prowl.Runtime.Vector3.Abs
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_Abs_Prowl_Runtime_Vector3_
  name: Abs
  nameWithType: Vector3.Abs
  fullName: Prowl.Runtime.Vector3.Abs
- uid: Prowl.Runtime.Vector3.SquareRoot*
  commentId: Overload:Prowl.Runtime.Vector3.SquareRoot
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_SquareRoot_Prowl_Runtime_Vector3_
  name: SquareRoot
  nameWithType: Vector3.SquareRoot
  fullName: Prowl.Runtime.Vector3.SquareRoot
- uid: Prowl.Runtime.Vector3.ProjectOnPlane*
  commentId: Overload:Prowl.Runtime.Vector3.ProjectOnPlane
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_ProjectOnPlane_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: ProjectOnPlane
  nameWithType: Vector3.ProjectOnPlane
  fullName: Prowl.Runtime.Vector3.ProjectOnPlane
- uid: Prowl.Runtime.Vector3.op_Addition*
  commentId: Overload:Prowl.Runtime.Vector3.op_Addition
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Addition_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator +
  nameWithType: Vector3.operator +
  fullName: Prowl.Runtime.Vector3.operator +
  nameWithType.vb: Vector3.+
  fullName.vb: Prowl.Runtime.Vector3.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Addition*
    name: +
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Addition_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Subtraction*
  commentId: Overload:Prowl.Runtime.Vector3.op_Subtraction
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Subtraction_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator -
  nameWithType: Vector3.operator -
  fullName: Prowl.Runtime.Vector3.operator -
  nameWithType.vb: Vector3.-
  fullName.vb: Prowl.Runtime.Vector3.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Subtraction*
    name: '-'
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Subtraction_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Multiply*
  commentId: Overload:Prowl.Runtime.Vector3.op_Multiply
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Multiply_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator *
  nameWithType: Vector3.operator *
  fullName: Prowl.Runtime.Vector3.operator *
  nameWithType.vb: Vector3.*
  fullName.vb: Prowl.Runtime.Vector3.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Multiply*
    name: '*'
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Multiply_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Division*
  commentId: Overload:Prowl.Runtime.Vector3.op_Division
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Division_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator /
  nameWithType: Vector3.operator /
  fullName: Prowl.Runtime.Vector3.operator /
  nameWithType.vb: Vector3./
  fullName.vb: Prowl.Runtime.Vector3./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Division*
    name: /
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Division_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_UnaryNegation*
  commentId: Overload:Prowl.Runtime.Vector3.op_UnaryNegation
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_UnaryNegation_Prowl_Runtime_Vector3_
  name: operator -
  nameWithType: Vector3.operator -
  fullName: Prowl.Runtime.Vector3.operator -
  nameWithType.vb: Vector3.-
  fullName.vb: Prowl.Runtime.Vector3.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_UnaryNegation*
    name: '-'
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_UnaryNegation_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Equality*
  commentId: Overload:Prowl.Runtime.Vector3.op_Equality
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Equality_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator ==
  nameWithType: Vector3.operator ==
  fullName: Prowl.Runtime.Vector3.operator ==
  nameWithType.vb: Vector3.=
  fullName.vb: Prowl.Runtime.Vector3.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Equality*
    name: ==
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Equality_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Inequality*
  commentId: Overload:Prowl.Runtime.Vector3.op_Inequality
  href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Inequality_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: operator !=
  nameWithType: Vector3.operator !=
  fullName: Prowl.Runtime.Vector3.operator !=
  nameWithType.vb: Vector3.<>
  fullName.vb: Prowl.Runtime.Vector3.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector3.op_Inequality*
    name: '!='
    href: Prowl.Runtime.Vector3.html#Prowl_Runtime_Vector3_op_Inequality_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
- uid: Prowl.Runtime.Vector3.op_Implicit*
  commentId: Overload:Prowl.Runtime.Vector3.op_Implicit
  name: implicit operator
  nameWithType: Vector3.implicit operator
  fullName: Prowl.Runtime.Vector3.implicit operator
  nameWithType.vb: Vector3.CType
  fullName.vb: Prowl.Runtime.Vector3.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
