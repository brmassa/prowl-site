### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.SceneManagement.SceneManager
  commentId: T:Prowl.Runtime.SceneManagement.SceneManager
  id: SceneManager
  parent: Prowl.Runtime.SceneManagement
  children:
  - Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
  - Prowl.Runtime.SceneManagement.SceneManager.AllowGameObjectConstruction
  - Prowl.Runtime.SceneManagement.SceneManager.Clear
  - Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene
  - Prowl.Runtime.SceneManagement.SceneManager.Draw(Prowl.Runtime.RenderTexture)
  - Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent(System.Action{Prowl.Runtime.MonoBehaviour})
  - Prowl.Runtime.SceneManagement.SceneManager.Has(Prowl.Runtime.GameObject)
  - Prowl.Runtime.SceneManagement.SceneManager.Initialize
  - Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene
  - Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.AssetRef{Prowl.Runtime.Scene})
  - Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.Scene)
  - Prowl.Runtime.SceneManagement.SceneManager.MainScene
  - Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate
  - Prowl.Runtime.SceneManagement.SceneManager.PostFixedUpdate
  - Prowl.Runtime.SceneManagement.SceneManager.PreFixedUpdate
  - Prowl.Runtime.SceneManagement.SceneManager.RestoreScene
  - Prowl.Runtime.SceneManagement.SceneManager.StoreScene
  - Prowl.Runtime.SceneManagement.SceneManager.Update
  langs:
  - csharp
  - vb
  name: SceneManager
  nameWithType: SceneManager
  fullName: Prowl.Runtime.SceneManagement.SceneManager
  type: Class
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SceneManager
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 11
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static class SceneManager
    content.vb: Public Module SceneManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Prowl.Runtime.SceneManagement.SceneManager.MainScene
  commentId: P:Prowl.Runtime.SceneManagement.SceneManager.MainScene
  id: MainScene
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: MainScene
  nameWithType: SceneManager.MainScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.MainScene
  type: Property
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: MainScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 16
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static Scene MainScene { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Scene
    content.vb: Public Shared Property MainScene As Scene
  overload: Prowl.Runtime.SceneManagement.SceneManager.MainScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
  commentId: P:Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
  id: AllGameObjects
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: AllGameObjects
  nameWithType: SceneManager.AllGameObjects
  fullName: Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
  type: Property
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AllGameObjects
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 18
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static List<GameObject> AllGameObjects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Prowl.Runtime.GameObject}
    content.vb: Public Shared ReadOnly Property AllGameObjects As List(Of GameObject)
  overload: Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects*
- uid: Prowl.Runtime.SceneManagement.SceneManager.AllowGameObjectConstruction
  commentId: F:Prowl.Runtime.SceneManagement.SceneManager.AllowGameObjectConstruction
  id: AllowGameObjectConstruction
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: AllowGameObjectConstruction
  nameWithType: SceneManager.AllowGameObjectConstruction
  fullName: Prowl.Runtime.SceneManagement.SceneManager.AllowGameObjectConstruction
  type: Field
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AllowGameObjectConstruction
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 20
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static bool AllowGameObjectConstruction
    return:
      type: System.Boolean
    content.vb: Public Shared AllowGameObjectConstruction As Boolean
- uid: Prowl.Runtime.SceneManagement.SceneManager.PreFixedUpdate
  commentId: E:Prowl.Runtime.SceneManagement.SceneManager.PreFixedUpdate
  id: PreFixedUpdate
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: PreFixedUpdate
  nameWithType: SceneManager.PreFixedUpdate
  fullName: Prowl.Runtime.SceneManagement.SceneManager.PreFixedUpdate
  type: Event
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: PreFixedUpdate
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 22
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static event Action PreFixedUpdate
    return:
      type: System.Action
    content.vb: Public Shared Event PreFixedUpdate As Action
- uid: Prowl.Runtime.SceneManagement.SceneManager.PostFixedUpdate
  commentId: E:Prowl.Runtime.SceneManagement.SceneManager.PostFixedUpdate
  id: PostFixedUpdate
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: PostFixedUpdate
  nameWithType: SceneManager.PostFixedUpdate
  fullName: Prowl.Runtime.SceneManagement.SceneManager.PostFixedUpdate
  type: Event
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: PostFixedUpdate
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 23
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static event Action PostFixedUpdate
    return:
      type: System.Action
    content.vb: Public Shared Event PostFixedUpdate As Action
- uid: Prowl.Runtime.SceneManagement.SceneManager.Initialize
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.Initialize
  id: Initialize
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: SceneManager.Initialize()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Initialize()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Initialize
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 28
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void Initialize()
    content.vb: Public Shared Sub Initialize()
  overload: Prowl.Runtime.SceneManagement.SceneManager.Initialize*
- uid: Prowl.Runtime.SceneManagement.SceneManager.StoreScene
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.StoreScene
  id: StoreScene
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: StoreScene()
  nameWithType: SceneManager.StoreScene()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.StoreScene()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: StoreScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 34
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void StoreScene()
    content.vb: Public Shared Sub StoreScene()
  overload: Prowl.Runtime.SceneManagement.SceneManager.StoreScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.RestoreScene
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.RestoreScene
  id: RestoreScene
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: RestoreScene()
  nameWithType: SceneManager.RestoreScene()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.RestoreScene()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: RestoreScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 44
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void RestoreScene()
    content.vb: Public Shared Sub RestoreScene()
  overload: Prowl.Runtime.SceneManagement.SceneManager.RestoreScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene
  id: ClearStoredScene
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: ClearStoredScene()
  nameWithType: SceneManager.ClearStoredScene()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ClearStoredScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 52
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void ClearStoredScene()
    content.vb: Public Shared Sub ClearStoredScene()
  overload: Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene
  id: InstantiateNewScene
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: InstantiateNewScene()
  nameWithType: SceneManager.InstantiateNewScene()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: InstantiateNewScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 58
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void InstantiateNewScene()
    content.vb: Public Shared Sub InstantiateNewScene()
  overload: Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.Clear
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.Clear
  id: Clear
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SceneManager.Clear()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Clear()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Clear
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 86
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: >-
      [OnAssemblyUnload]

      public static void Clear()
    content.vb: >-
      <OnAssemblyUnload>

      Public Shared Sub Clear()
  overload: Prowl.Runtime.SceneManagement.SceneManager.Clear*
  attributes:
  - type: Prowl.Runtime.Utils.OnAssemblyUnloadAttribute
    ctor: Prowl.Runtime.Utils.OnAssemblyUnloadAttribute.#ctor
    arguments: []
- uid: Prowl.Runtime.SceneManagement.SceneManager.Update
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.Update
  id: Update
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SceneManager.Update()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Update()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Update
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 107
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void Update()
    content.vb: Public Shared Sub Update()
  overload: Prowl.Runtime.SceneManagement.SceneManager.Update*
- uid: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent(System.Action{Prowl.Runtime.MonoBehaviour})
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent(System.Action{Prowl.Runtime.MonoBehaviour})
  id: ForeachComponent(System.Action{Prowl.Runtime.MonoBehaviour})
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: ForeachComponent(Action<MonoBehaviour>)
  nameWithType: SceneManager.ForeachComponent(Action<MonoBehaviour>)
  fullName: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent(System.Action<Prowl.Runtime.MonoBehaviour>)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ForeachComponent
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 129
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void ForeachComponent(Action<MonoBehaviour> action)
    parameters:
    - id: action
      type: System.Action{Prowl.Runtime.MonoBehaviour}
    content.vb: Public Shared Sub ForeachComponent(action As Action(Of MonoBehaviour))
  overload: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent*
  nameWithType.vb: SceneManager.ForeachComponent(Action(Of MonoBehaviour))
  fullName.vb: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent(System.Action(Of Prowl.Runtime.MonoBehaviour))
  name.vb: ForeachComponent(Action(Of MonoBehaviour))
- uid: Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate
  id: PhysicsUpdate
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: PhysicsUpdate()
  nameWithType: SceneManager.PhysicsUpdate()
  fullName: Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: PhysicsUpdate
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 138
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void PhysicsUpdate()
    content.vb: Public Shared Sub PhysicsUpdate()
  overload: Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate*
- uid: Prowl.Runtime.SceneManagement.SceneManager.Draw(Prowl.Runtime.RenderTexture)
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.Draw(Prowl.Runtime.RenderTexture)
  id: Draw(Prowl.Runtime.RenderTexture)
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Draw(RenderTexture?)
  nameWithType: SceneManager.Draw(RenderTexture?)
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Draw(Prowl.Runtime.RenderTexture?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Draw
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 149
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static bool Draw(RenderTexture? target = null)
    parameters:
    - id: target
      type: Prowl.Runtime.RenderTexture
    return:
      type: System.Boolean
    content.vb: Public Shared Function Draw(target As RenderTexture = Nothing) As Boolean
  overload: Prowl.Runtime.SceneManagement.SceneManager.Draw*
  nameWithType.vb: SceneManager.Draw(RenderTexture)
  fullName.vb: Prowl.Runtime.SceneManagement.SceneManager.Draw(Prowl.Runtime.RenderTexture)
  name.vb: Draw(RenderTexture)
- uid: Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.Scene)
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.Scene)
  id: LoadScene(Prowl.Runtime.Scene)
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: LoadScene(Scene)
  nameWithType: SceneManager.LoadScene(Scene)
  fullName: Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.Scene)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: LoadScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 173
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void LoadScene(Scene scene)
    parameters:
    - id: scene
      type: Prowl.Runtime.Scene
    content.vb: Public Shared Sub LoadScene(scene As Scene)
  overload: Prowl.Runtime.SceneManagement.SceneManager.LoadScene*
- uid: Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.AssetRef{Prowl.Runtime.Scene})
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.AssetRef{Prowl.Runtime.Scene})
  id: LoadScene(Prowl.Runtime.AssetRef{Prowl.Runtime.Scene})
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: LoadScene(AssetRef<Scene>)
  nameWithType: SceneManager.LoadScene(AssetRef<Scene>)
  fullName: Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.AssetRef<Prowl.Runtime.Scene>)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: LoadScene
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 181
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  syntax:
    content: public static void LoadScene(AssetRef<Scene> scene)
    parameters:
    - id: scene
      type: Prowl.Runtime.AssetRef{Prowl.Runtime.Scene}
    content.vb: Public Shared Sub LoadScene(scene As AssetRef(Of Scene))
  overload: Prowl.Runtime.SceneManagement.SceneManager.LoadScene*
  nameWithType.vb: SceneManager.LoadScene(AssetRef(Of Scene))
  fullName.vb: Prowl.Runtime.SceneManagement.SceneManager.LoadScene(Prowl.Runtime.AssetRef(Of Prowl.Runtime.Scene))
  name.vb: LoadScene(AssetRef(Of Scene))
- uid: Prowl.Runtime.SceneManagement.SceneManager.Has(Prowl.Runtime.GameObject)
  commentId: M:Prowl.Runtime.SceneManagement.SceneManager.Has(Prowl.Runtime.GameObject)
  id: Has(Prowl.Runtime.GameObject)
  parent: Prowl.Runtime.SceneManagement.SceneManager
  langs:
  - csharp
  - vb
  name: Has(GameObject)
  nameWithType: SceneManager.Has(GameObject)
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Has(Prowl.Runtime.GameObject)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/SceneManager.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Has
    path: ../Prowl/Prowl.Runtime/SceneManager.cs
    startLine: 193
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.SceneManagement
  summary: Search all GameObjects in the scene for the specified one recursively
  example: []
  syntax:
    content: public static bool Has(GameObject original)
    parameters:
    - id: original
      type: Prowl.Runtime.GameObject
    return:
      type: System.Boolean
    content.vb: Public Shared Function Has(original As GameObject) As Boolean
  overload: Prowl.Runtime.SceneManagement.SceneManager.Has*
references:
- uid: Prowl.Runtime.SceneManagement
  commentId: N:Prowl.Runtime.SceneManagement
  href: Prowl.html
  name: Prowl.Runtime.SceneManagement
  nameWithType: Prowl.Runtime.SceneManagement
  fullName: Prowl.Runtime.SceneManagement
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.SceneManagement
    name: SceneManagement
    href: Prowl.Runtime.SceneManagement.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.SceneManagement
    name: SceneManagement
    href: Prowl.Runtime.SceneManagement.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Prowl.Runtime.SceneManagement.SceneManager.MainScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.MainScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_MainScene
  name: MainScene
  nameWithType: SceneManager.MainScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.MainScene
- uid: Prowl.Runtime.Scene
  commentId: T:Prowl.Runtime.Scene
  parent: Prowl.Runtime
  href: Prowl.Runtime.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Prowl.Runtime.Scene
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_AllGameObjects
  name: AllGameObjects
  nameWithType: SceneManager.AllGameObjects
  fullName: Prowl.Runtime.SceneManagement.SceneManager.AllGameObjects
- uid: System.Collections.Generic.List{Prowl.Runtime.GameObject}
  commentId: T:System.Collections.Generic.List{Prowl.Runtime.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<Prowl.Runtime.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of Prowl.Runtime.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Prowl.Runtime.GameObject
    name: GameObject
    href: Prowl.Runtime.GameObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.GameObject
    name: GameObject
    href: Prowl.Runtime.GameObject.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Prowl.Runtime.SceneManagement.SceneManager.Initialize*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.Initialize
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_Initialize
  name: Initialize
  nameWithType: SceneManager.Initialize
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Initialize
- uid: Prowl.Runtime.SceneManagement.SceneManager.StoreScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.StoreScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_StoreScene
  name: StoreScene
  nameWithType: SceneManager.StoreScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.StoreScene
- uid: Prowl.Runtime.SceneManagement.SceneManager.RestoreScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.RestoreScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_RestoreScene
  name: RestoreScene
  nameWithType: SceneManager.RestoreScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.RestoreScene
- uid: Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_ClearStoredScene
  name: ClearStoredScene
  nameWithType: SceneManager.ClearStoredScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.ClearStoredScene
- uid: Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_InstantiateNewScene
  name: InstantiateNewScene
  nameWithType: SceneManager.InstantiateNewScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.InstantiateNewScene
- uid: Prowl.Runtime.SceneManagement.SceneManager.Clear*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.Clear
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_Clear
  name: Clear
  nameWithType: SceneManager.Clear
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Clear
- uid: Prowl.Runtime.SceneManagement.SceneManager.Update*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.Update
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_Update
  name: Update
  nameWithType: SceneManager.Update
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Update
- uid: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_ForeachComponent_System_Action_Prowl_Runtime_MonoBehaviour__
  name: ForeachComponent
  nameWithType: SceneManager.ForeachComponent
  fullName: Prowl.Runtime.SceneManagement.SceneManager.ForeachComponent
- uid: System.Action{Prowl.Runtime.MonoBehaviour}
  commentId: T:System.Action{Prowl.Runtime.MonoBehaviour}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MonoBehaviour>
  nameWithType: Action<MonoBehaviour>
  fullName: System.Action<Prowl.Runtime.MonoBehaviour>
  nameWithType.vb: Action(Of MonoBehaviour)
  fullName.vb: System.Action(Of Prowl.Runtime.MonoBehaviour)
  name.vb: Action(Of MonoBehaviour)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Prowl.Runtime.MonoBehaviour
    name: MonoBehaviour
    href: Prowl.Runtime.MonoBehaviour.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.MonoBehaviour
    name: MonoBehaviour
    href: Prowl.Runtime.MonoBehaviour.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_PhysicsUpdate
  name: PhysicsUpdate
  nameWithType: SceneManager.PhysicsUpdate
  fullName: Prowl.Runtime.SceneManagement.SceneManager.PhysicsUpdate
- uid: Prowl.Runtime.SceneManagement.SceneManager.Draw*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.Draw
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_Draw_Prowl_Runtime_RenderTexture_
  name: Draw
  nameWithType: SceneManager.Draw
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Draw
- uid: Prowl.Runtime.RenderTexture
  commentId: T:Prowl.Runtime.RenderTexture
  parent: Prowl.Runtime
  href: Prowl.Runtime.RenderTexture.html
  name: RenderTexture
  nameWithType: RenderTexture
  fullName: Prowl.Runtime.RenderTexture
- uid: Prowl.Runtime.SceneManagement.SceneManager.LoadScene*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.LoadScene
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_LoadScene_Prowl_Runtime_Scene_
  name: LoadScene
  nameWithType: SceneManager.LoadScene
  fullName: Prowl.Runtime.SceneManagement.SceneManager.LoadScene
- uid: Prowl.Runtime.AssetRef{Prowl.Runtime.Scene}
  commentId: T:Prowl.Runtime.AssetRef{Prowl.Runtime.Scene}
  parent: Prowl.Runtime
  definition: Prowl.Runtime.AssetRef`1
  href: Prowl.Runtime.AssetRef-1.html
  name: AssetRef<Scene>
  nameWithType: AssetRef<Scene>
  fullName: Prowl.Runtime.AssetRef<Prowl.Runtime.Scene>
  nameWithType.vb: AssetRef(Of Scene)
  fullName.vb: Prowl.Runtime.AssetRef(Of Prowl.Runtime.Scene)
  name.vb: AssetRef(Of Scene)
  spec.csharp:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: <
  - uid: Prowl.Runtime.Scene
    name: Scene
    href: Prowl.Runtime.Scene.html
  - name: '>'
  spec.vb:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.Scene
    name: Scene
    href: Prowl.Runtime.Scene.html
  - name: )
- uid: Prowl.Runtime.AssetRef`1
  commentId: T:Prowl.Runtime.AssetRef`1
  parent: Prowl.Runtime
  href: Prowl.Runtime.AssetRef-1.html
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Prowl.Runtime.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Prowl.Runtime.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Prowl.Runtime.SceneManagement.SceneManager.Has*
  commentId: Overload:Prowl.Runtime.SceneManagement.SceneManager.Has
  href: Prowl.Runtime.SceneManagement.SceneManager.html#Prowl_Runtime_SceneManagement_SceneManager_Has_Prowl_Runtime_GameObject_
  name: Has
  nameWithType: SceneManager.Has
  fullName: Prowl.Runtime.SceneManagement.SceneManager.Has
- uid: Prowl.Runtime.GameObject
  commentId: T:Prowl.Runtime.GameObject
  parent: Prowl.Runtime
  href: Prowl.Runtime.GameObject.html
  name: GameObject
  nameWithType: GameObject
  fullName: Prowl.Runtime.GameObject
