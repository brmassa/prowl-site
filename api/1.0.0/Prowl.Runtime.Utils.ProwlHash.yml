### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.Utils.ProwlHash
  commentId: T:Prowl.Runtime.Utils.ProwlHash
  id: ProwlHash
  parent: Prowl.Runtime.Utils
  children:
  - Prowl.Runtime.Utils.ProwlHash.Combine``1(``0)
  - Prowl.Runtime.Utils.ProwlHash.Combine``2(``0,``1)
  - Prowl.Runtime.Utils.ProwlHash.Combine``3(``0,``1,``2)
  - Prowl.Runtime.Utils.ProwlHash.Combine``4(``0,``1,``2,``3)
  - Prowl.Runtime.Utils.ProwlHash.Combine``5(``0,``1,``2,``3,``4)
  - Prowl.Runtime.Utils.ProwlHash.Combine``6(``0,``1,``2,``3,``4,``5)
  - Prowl.Runtime.Utils.ProwlHash.Combine``7(``0,``1,``2,``3,``4,``5,``6)
  - Prowl.Runtime.Utils.ProwlHash.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)
  - Prowl.Runtime.Utils.ProwlHash.OrderlessHash``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  langs:
  - csharp
  - vb
  name: ProwlHash
  nameWithType: ProwlHash
  fullName: Prowl.Runtime.Utils.ProwlHash
  type: Class
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ProwlHash
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 14
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static class ProwlHash
    content.vb: Public Module ProwlHash
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``1(``0)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``1(``0)
  id: Combine``1(``0)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1>(T1)
  nameWithType: ProwlHash.Combine<T1>(T1)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1>(T1)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 24
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1>(T1 value1)
    parameters:
    - id: value1
      type: '{T1}'
    typeParameters:
    - id: T1
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1)(value1 As T1) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1)(T1)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1)(T1)
  name.vb: Combine(Of T1)(T1)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``2(``0,``1)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``2(``0,``1)
  id: Combine``2(``0,``1)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2>(T1, T2)
  nameWithType: ProwlHash.Combine<T1, T2>(T1, T2)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2>(T1, T2)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 44
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2>(T1 value1, T2 value2)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    typeParameters:
    - id: T1
    - id: T2
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2)(value1 As T1, value2 As T2) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2)(T1, T2)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2)(T1, T2)
  name.vb: Combine(Of T1, T2)(T1, T2)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``3(``0,``1,``2)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``3(``0,``1,``2)
  id: Combine``3(``0,``1,``2)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3>(T1, T2, T3)
  nameWithType: ProwlHash.Combine<T1, T2, T3>(T1, T2, T3)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3>(T1, T2, T3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 59
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3>(T1 value1, T2 value2, T3 value3)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3)(value1 As T1, value2 As T2, value3 As T3) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3)(T1, T2, T3)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3)(T1, T2, T3)
  name.vb: Combine(Of T1, T2, T3)(T1, T2, T3)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``4(``0,``1,``2,``3)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``4(``0,``1,``2,``3)
  id: Combine``4(``0,``1,``2,``3)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3, T4>(T1, T2, T3, T4)
  nameWithType: ProwlHash.Combine<T1, T2, T3, T4>(T1, T2, T3, T4)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3, T4>(T1, T2, T3, T4)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 76
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3, T4>(T1 value1, T2 value2, T3 value3, T4 value4)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3, T4)(value1 As T1, value2 As T2, value3 As T3, value4 As T4) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3, T4)(T1, T2, T3, T4)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3, T4)(T1, T2, T3, T4)
  name.vb: Combine(Of T1, T2, T3, T4)(T1, T2, T3, T4)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``5(``0,``1,``2,``3,``4)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``5(``0,``1,``2,``3,``4)
  id: Combine``5(``0,``1,``2,``3,``4)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5)
  nameWithType: ProwlHash.Combine<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 97
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3, T4, T5>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    - id: value5
      type: '{T5}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3, T4, T5)(value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3, T4, T5)(T1, T2, T3, T4, T5)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3, T4, T5)(T1, T2, T3, T4, T5)
  name.vb: Combine(Of T1, T2, T3, T4, T5)(T1, T2, T3, T4, T5)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``6(``0,``1,``2,``3,``4,``5)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``6(``0,``1,``2,``3,``4,``5)
  id: Combine``6(``0,``1,``2,``3,``4,``5)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6)
  nameWithType: ProwlHash.Combine<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 121
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3, T4, T5, T6>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    - id: value5
      type: '{T5}'
    - id: value6
      type: '{T6}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6)(value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6)(T1, T2, T3, T4, T5, T6)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6)(T1, T2, T3, T4, T5, T6)
  name.vb: Combine(Of T1, T2, T3, T4, T5, T6)(T1, T2, T3, T4, T5, T6)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``7(``0,``1,``2,``3,``4,``5,``6)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``7(``0,``1,``2,``3,``4,``5,``6)
  id: Combine``7(``0,``1,``2,``3,``4,``5,``6)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ProwlHash.Combine<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 147
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3, T4, T5, T6, T7>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    - id: value5
      type: '{T5}'
    - id: value6
      type: '{T6}'
    - id: value7
      type: '{T7}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7)(value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6, T7)(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6, T7)(T1, T2, T3, T4, T5, T6, T7)
  name.vb: Combine(Of T1, T2, T3, T4, T5, T6, T7)(T1, T2, T3, T4, T5, T6, T7)
- uid: Prowl.Runtime.Utils.ProwlHash.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)
  commentId: M:Prowl.Runtime.Utils.ProwlHash.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)
  id: Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ProwlHash.Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Combine
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 175
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static ulong Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8)
    parameters:
    - id: value1
      type: '{T1}'
    - id: value2
      type: '{T2}'
    - id: value3
      type: '{T3}'
    - id: value4
      type: '{T4}'
    - id: value5
      type: '{T5}'
    - id: value6
      type: '{T6}'
    - id: value7
      type: '{T7}'
    - id: value8
      type: '{T8}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    return:
      type: System.UInt64
    content.vb: Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7, T8)(value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7, value8 As T8) As ULong
  overload: Prowl.Runtime.Utils.ProwlHash.Combine*
  nameWithType.vb: ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6, T7, T8)(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.Combine(Of T1, T2, T3, T4, T5, T6, T7, T8)(T1, T2, T3, T4, T5, T6, T7, T8)
  name.vb: Combine(Of T1, T2, T3, T4, T5, T6, T7, T8)(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: Prowl.Runtime.Utils.ProwlHash.OrderlessHash``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Prowl.Runtime.Utils.ProwlHash.OrderlessHash``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: OrderlessHash``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: Prowl.Runtime.Utils.ProwlHash
  langs:
  - csharp
  - vb
  name: OrderlessHash<T>(IEnumerable<T>, IEqualityComparer<T>?)
  nameWithType: ProwlHash.OrderlessHash<T>(IEnumerable<T>, IEqualityComparer<T>?)
  fullName: Prowl.Runtime.Utils.ProwlHash.OrderlessHash<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ProwlHash.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: OrderlessHash
    path: ../Prowl/Prowl.Runtime/Utils/ProwlHash.cs
    startLine: 206
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: public static int OrderlessHash<T>(IEnumerable<T> source, IEqualityComparer<T>? comparer = null)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Int32
    content.vb: Public Shared Function OrderlessHash(Of T)(source As IEnumerable(Of T), comparer As IEqualityComparer(Of T) = Nothing) As Integer
  overload: Prowl.Runtime.Utils.ProwlHash.OrderlessHash*
  nameWithType.vb: ProwlHash.OrderlessHash(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName.vb: Prowl.Runtime.Utils.ProwlHash.OrderlessHash(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  name.vb: OrderlessHash(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
references:
- uid: Prowl.Runtime.Utils
  commentId: N:Prowl.Runtime.Utils
  href: Prowl.html
  name: Prowl.Runtime.Utils
  nameWithType: Prowl.Runtime.Utils
  fullName: Prowl.Runtime.Utils
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.Utils
    name: Utils
    href: Prowl.Runtime.Utils.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.Utils
    name: Utils
    href: Prowl.Runtime.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Prowl.Runtime.Utils.ProwlHash.Combine*
  commentId: Overload:Prowl.Runtime.Utils.ProwlHash.Combine
  href: Prowl.Runtime.Utils.ProwlHash.html#Prowl_Runtime_Utils_ProwlHash_Combine__1___0_
  name: Combine
  nameWithType: ProwlHash.Combine
  fullName: Prowl.Runtime.Utils.ProwlHash.Combine
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: '{T6}'
  commentId: '!:T6'
  definition: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: '{T7}'
  commentId: '!:T7'
  definition: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: '{T8}'
  commentId: '!:T8'
  definition: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: T8
  commentId: '!:T8'
  name: T8
  nameWithType: T8
  fullName: T8
- uid: Prowl.Runtime.Utils.ProwlHash.OrderlessHash*
  commentId: Overload:Prowl.Runtime.Utils.ProwlHash.OrderlessHash
  href: Prowl.Runtime.Utils.ProwlHash.html#Prowl_Runtime_Utils_ProwlHash_OrderlessHash__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  name: OrderlessHash
  nameWithType: ProwlHash.OrderlessHash
  fullName: Prowl.Runtime.Utils.ProwlHash.OrderlessHash
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
