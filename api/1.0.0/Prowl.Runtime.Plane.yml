### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.Plane
  commentId: T:Prowl.Runtime.Plane
  id: Plane
  parent: Prowl.Runtime
  children:
  - Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector4)
  - Prowl.Runtime.Plane.#ctor(System.Double,System.Double,System.Double,System.Double)
  - Prowl.Runtime.Plane.DoesLineIntersectPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@)
  - Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4)
  - Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4@,System.Double@)
  - Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3@,System.Double@)
  - Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3@,System.Double@)
  - Prowl.Runtime.Plane.Equals(Prowl.Runtime.Plane)
  - Prowl.Runtime.Plane.Equals(System.Object)
  - Prowl.Runtime.Plane.GetDistanceToPoint(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.GetHashCode
  - Prowl.Runtime.Plane.GetSide(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds)
  - Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds@,Prowl.Runtime.PlaneIntersectionType@)
  - Prowl.Runtime.Plane.IsOnPlane(Prowl.Runtime.Vector3,System.Double)
  - Prowl.Runtime.Plane.IsOnPositiveSide(Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.Normalize
  - Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane)
  - Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane@,Prowl.Runtime.Plane@)
  - Prowl.Runtime.Plane.Set3Points(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  - Prowl.Runtime.Plane.ToString
  - Prowl.Runtime.Plane.distance
  - Prowl.Runtime.Plane.normal
  - Prowl.Runtime.Plane.op_Equality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  - Prowl.Runtime.Plane.op_Inequality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: Plane
  fullName: Prowl.Runtime.Plane
  type: Struct
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Plane
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 45
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: 'public struct Plane : IEquatable<Plane>'
    content.vb: Public Structure Plane Implements IEquatable(Of Plane)
  implements:
  - System.IEquatable{Prowl.Runtime.Plane}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
- uid: Prowl.Runtime.Plane.distance
  commentId: F:Prowl.Runtime.Plane.distance
  id: distance
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: distance
  nameWithType: Plane.distance
  fullName: Prowl.Runtime.Plane.distance
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: distance
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 49
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double distance
    return:
      type: System.Double
    content.vb: Public distance As Double
- uid: Prowl.Runtime.Plane.normal
  commentId: F:Prowl.Runtime.Plane.normal
  id: normal
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: normal
  nameWithType: Plane.normal
  fullName: Prowl.Runtime.Plane.normal
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: normal
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 51
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Vector3 normal
    return:
      type: Prowl.Runtime.Vector3
    content.vb: Public normal As Vector3
- uid: Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector4)
  commentId: M:Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector4)
  id: '#ctor(Prowl.Runtime.Vector4)'
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector4)
  nameWithType: Plane.Plane(Vector4)
  fullName: Prowl.Runtime.Plane.Plane(Prowl.Runtime.Vector4)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 58
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Plane(Vector4 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector4
    content.vb: Public Sub New(value As Vector4)
  overload: Prowl.Runtime.Plane.#ctor*
  nameWithType.vb: Plane.New(Vector4)
  fullName.vb: Prowl.Runtime.Plane.New(Prowl.Runtime.Vector4)
  name.vb: New(Vector4)
- uid: Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,System.Double)
  id: '#ctor(Prowl.Runtime.Vector3,System.Double)'
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, double)
  nameWithType: Plane.Plane(Vector3, double)
  fullName: Prowl.Runtime.Plane.Plane(Prowl.Runtime.Vector3, double)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 64
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Plane(Vector3 normal, double d)
    parameters:
    - id: normal
      type: Prowl.Runtime.Vector3
    - id: d
      type: System.Double
    content.vb: Public Sub New(normal As Vector3, d As Double)
  overload: Prowl.Runtime.Plane.#ctor*
  nameWithType.vb: Plane.New(Vector3, Double)
  fullName.vb: Prowl.Runtime.Plane.New(Prowl.Runtime.Vector3, Double)
  name.vb: New(Vector3, Double)
- uid: Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.#ctor(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: '#ctor(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)'
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, Vector3, Vector3)
  nameWithType: Plane.Plane(Vector3, Vector3, Vector3)
  fullName: Prowl.Runtime.Plane.Plane(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 70
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Plane(Vector3 a, Vector3 b, Vector3 c)
    parameters:
    - id: a
      type: Prowl.Runtime.Vector3
    - id: b
      type: Prowl.Runtime.Vector3
    - id: c
      type: Prowl.Runtime.Vector3
    content.vb: Public Sub New(a As Vector3, b As Vector3, c As Vector3)
  overload: Prowl.Runtime.Plane.#ctor*
  nameWithType.vb: Plane.New(Vector3, Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Plane.New(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: New(Vector3, Vector3, Vector3)
- uid: Prowl.Runtime.Plane.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Prowl.Runtime.Plane.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Plane(double, double, double, double)
  nameWithType: Plane.Plane(double, double, double, double)
  fullName: Prowl.Runtime.Plane.Plane(double, double, double, double)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 78
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public Plane(double a, double b, double c, double d)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    - id: d
      type: System.Double
    content.vb: Public Sub New(a As Double, b As Double, c As Double, d As Double)
  overload: Prowl.Runtime.Plane.#ctor*
  nameWithType.vb: Plane.New(Double, Double, Double, Double)
  fullName.vb: Prowl.Runtime.Plane.New(Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double)
- uid: Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4)
  commentId: M:Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4)
  id: Dot(Prowl.Runtime.Vector4)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Dot(Vector4)
  nameWithType: Plane.Dot(Vector4)
  fullName: Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Dot
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 89
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double Dot(Vector4 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector4
    return:
      type: System.Double
    content.vb: Public Function Dot(value As Vector4) As Double
  overload: Prowl.Runtime.Plane.Dot*
- uid: Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4@,System.Double@)
  commentId: M:Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4@,System.Double@)
  id: Dot(Prowl.Runtime.Vector4@,System.Double@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Dot(ref Vector4, out double)
  nameWithType: Plane.Dot(ref Vector4, out double)
  fullName: Prowl.Runtime.Plane.Dot(ref Prowl.Runtime.Vector4, out double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Dot
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 92
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Dot(ref Vector4 value, out double result)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector4
    - id: result
      type: System.Double
    content.vb: Public Sub Dot(value As Vector4, result As Double)
  overload: Prowl.Runtime.Plane.Dot*
  nameWithType.vb: Plane.Dot(Vector4, Double)
  fullName.vb: Prowl.Runtime.Plane.Dot(Prowl.Runtime.Vector4, Double)
  name.vb: Dot(Vector4, Double)
- uid: Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3)
  id: DotCoordinate(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: DotCoordinate(Vector3)
  nameWithType: Plane.DotCoordinate(Vector3)
  fullName: Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: DotCoordinate
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 95
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double DotCoordinate(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    return:
      type: System.Double
    content.vb: Public Function DotCoordinate(value As Vector3) As Double
  overload: Prowl.Runtime.Plane.DotCoordinate*
- uid: Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3@,System.Double@)
  commentId: M:Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3@,System.Double@)
  id: DotCoordinate(Prowl.Runtime.Vector3@,System.Double@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: DotCoordinate(ref Vector3, out double)
  nameWithType: Plane.DotCoordinate(ref Vector3, out double)
  fullName: Prowl.Runtime.Plane.DotCoordinate(ref Prowl.Runtime.Vector3, out double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: DotCoordinate
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 98
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void DotCoordinate(ref Vector3 value, out double result)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    - id: result
      type: System.Double
    content.vb: Public Sub DotCoordinate(value As Vector3, result As Double)
  overload: Prowl.Runtime.Plane.DotCoordinate*
  nameWithType.vb: Plane.DotCoordinate(Vector3, Double)
  fullName.vb: Prowl.Runtime.Plane.DotCoordinate(Prowl.Runtime.Vector3, Double)
  name.vb: DotCoordinate(Vector3, Double)
- uid: Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3)
  id: DotNormal(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: DotNormal(Vector3)
  nameWithType: Plane.DotNormal(Vector3)
  fullName: Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: DotNormal
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 101
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double DotNormal(Vector3 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    return:
      type: System.Double
    content.vb: Public Function DotNormal(value As Vector3) As Double
  overload: Prowl.Runtime.Plane.DotNormal*
- uid: Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3@,System.Double@)
  commentId: M:Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3@,System.Double@)
  id: DotNormal(Prowl.Runtime.Vector3@,System.Double@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: DotNormal(ref Vector3, out double)
  nameWithType: Plane.DotNormal(ref Vector3, out double)
  fullName: Prowl.Runtime.Plane.DotNormal(ref Prowl.Runtime.Vector3, out double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: DotNormal
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 104
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void DotNormal(ref Vector3 value, out double result)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector3
    - id: result
      type: System.Double
    content.vb: Public Sub DotNormal(value As Vector3, result As Double)
  overload: Prowl.Runtime.Plane.DotNormal*
  nameWithType.vb: Plane.DotNormal(Vector3, Double)
  fullName.vb: Prowl.Runtime.Plane.DotNormal(Prowl.Runtime.Vector3, Double)
  name.vb: DotNormal(Vector3, Double)
- uid: Prowl.Runtime.Plane.GetSide(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.GetSide(Prowl.Runtime.Vector3)
  id: GetSide(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: GetSide(Vector3)
  nameWithType: Plane.GetSide(Vector3)
  fullName: Prowl.Runtime.Plane.GetSide(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetSide
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 107
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool GetSide(Vector3 inPt)
    parameters:
    - id: inPt
      type: Prowl.Runtime.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function GetSide(inPt As Vector3) As Boolean
  overload: Prowl.Runtime.Plane.GetSide*
- uid: Prowl.Runtime.Plane.IsOnPositiveSide(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.IsOnPositiveSide(Prowl.Runtime.Vector3)
  id: IsOnPositiveSide(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: IsOnPositiveSide(Vector3)
  nameWithType: Plane.IsOnPositiveSide(Vector3)
  fullName: Prowl.Runtime.Plane.IsOnPositiveSide(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsOnPositiveSide
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 110
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool IsOnPositiveSide(Vector3 point)
    parameters:
    - id: point
      type: Prowl.Runtime.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function IsOnPositiveSide(point As Vector3) As Boolean
  overload: Prowl.Runtime.Plane.IsOnPositiveSide*
- uid: Prowl.Runtime.Plane.GetDistanceToPoint(Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.GetDistanceToPoint(Prowl.Runtime.Vector3)
  id: GetDistanceToPoint(Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: GetDistanceToPoint(Vector3)
  nameWithType: Plane.GetDistanceToPoint(Vector3)
  fullName: Prowl.Runtime.Plane.GetDistanceToPoint(Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetDistanceToPoint
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 113
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public double GetDistanceToPoint(Vector3 inPt)
    parameters:
    - id: inPt
      type: Prowl.Runtime.Vector3
    return:
      type: System.Double
    content.vb: Public Function GetDistanceToPoint(inPt As Vector3) As Double
  overload: Prowl.Runtime.Plane.GetDistanceToPoint*
- uid: Prowl.Runtime.Plane.IsOnPlane(Prowl.Runtime.Vector3,System.Double)
  commentId: M:Prowl.Runtime.Plane.IsOnPlane(Prowl.Runtime.Vector3,System.Double)
  id: IsOnPlane(Prowl.Runtime.Vector3,System.Double)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: IsOnPlane(Vector3, double)
  nameWithType: Plane.IsOnPlane(Vector3, double)
  fullName: Prowl.Runtime.Plane.IsOnPlane(Prowl.Runtime.Vector3, double)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsOnPlane
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 116
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool IsOnPlane(Vector3 point, double tolerance = 0)
    parameters:
    - id: point
      type: Prowl.Runtime.Vector3
    - id: tolerance
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function IsOnPlane(point As Vector3, tolerance As Double = 0) As Boolean
  overload: Prowl.Runtime.Plane.IsOnPlane*
  nameWithType.vb: Plane.IsOnPlane(Vector3, Double)
  fullName.vb: Prowl.Runtime.Plane.IsOnPlane(Prowl.Runtime.Vector3, Double)
  name.vb: IsOnPlane(Vector3, Double)
- uid: Prowl.Runtime.Plane.Normalize
  commentId: M:Prowl.Runtime.Plane.Normalize
  id: Normalize
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Plane.Normalize()
  fullName: Prowl.Runtime.Plane.Normalize()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Normalize
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 119
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: Prowl.Runtime.Plane.Normalize*
- uid: Prowl.Runtime.Plane.Set3Points(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  commentId: M:Prowl.Runtime.Plane.Set3Points(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  id: Set3Points(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Set3Points(Vector3, Vector3, Vector3)
  nameWithType: Plane.Set3Points(Vector3, Vector3, Vector3)
  fullName: Prowl.Runtime.Plane.Set3Points(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Set3Points
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 129
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Set3Points(Vector3 a, Vector3 b, Vector3 c)
    parameters:
    - id: a
      type: Prowl.Runtime.Vector3
    - id: b
      type: Prowl.Runtime.Vector3
    - id: c
      type: Prowl.Runtime.Vector3
    content.vb: Public Sub Set3Points(a As Vector3, b As Vector3, c As Vector3)
  overload: Prowl.Runtime.Plane.Set3Points*
- uid: Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane)
  commentId: M:Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane)
  id: Normalize(Prowl.Runtime.Plane)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Normalize(Plane)
  nameWithType: Plane.Normalize(Plane)
  fullName: Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Normalize
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 135
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Plane Normalize(Plane value)
    parameters:
    - id: value
      type: Prowl.Runtime.Plane
    return:
      type: Prowl.Runtime.Plane
    content.vb: Public Shared Function Normalize(value As Plane) As Plane
  overload: Prowl.Runtime.Plane.Normalize*
- uid: Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane@,Prowl.Runtime.Plane@)
  commentId: M:Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane@,Prowl.Runtime.Plane@)
  id: Normalize(Prowl.Runtime.Plane@,Prowl.Runtime.Plane@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Normalize(ref Plane, out Plane)
  nameWithType: Plane.Normalize(ref Plane, out Plane)
  fullName: Prowl.Runtime.Plane.Normalize(ref Prowl.Runtime.Plane, out Prowl.Runtime.Plane)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Normalize
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 142
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static void Normalize(ref Plane value, out Plane result)
    parameters:
    - id: value
      type: Prowl.Runtime.Plane
    - id: result
      type: Prowl.Runtime.Plane
    content.vb: Public Shared Sub Normalize(value As Plane, result As Plane)
  overload: Prowl.Runtime.Plane.Normalize*
  nameWithType.vb: Plane.Normalize(Plane, Plane)
  fullName.vb: Prowl.Runtime.Plane.Normalize(Prowl.Runtime.Plane, Prowl.Runtime.Plane)
  name.vb: Normalize(Plane, Plane)
- uid: Prowl.Runtime.Plane.op_Inequality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  commentId: M:Prowl.Runtime.Plane.op_Inequality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  id: op_Inequality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: operator !=(Plane, Plane)
  nameWithType: Plane.operator !=(Plane, Plane)
  fullName: Prowl.Runtime.Plane.operator !=(Prowl.Runtime.Plane, Prowl.Runtime.Plane)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Inequality
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 151
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static bool operator !=(Plane plane1, Plane plane2)
    parameters:
    - id: plane1
      type: Prowl.Runtime.Plane
    - id: plane2
      type: Prowl.Runtime.Plane
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(plane1 As Plane, plane2 As Plane) As Boolean
  overload: Prowl.Runtime.Plane.op_Inequality*
  nameWithType.vb: Plane.<>(Plane, Plane)
  fullName.vb: Prowl.Runtime.Plane.<>(Prowl.Runtime.Plane, Prowl.Runtime.Plane)
  name.vb: <>(Plane, Plane)
- uid: Prowl.Runtime.Plane.op_Equality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  commentId: M:Prowl.Runtime.Plane.op_Equality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  id: op_Equality(Prowl.Runtime.Plane,Prowl.Runtime.Plane)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: operator ==(Plane, Plane)
  nameWithType: Plane.operator ==(Plane, Plane)
  fullName: Prowl.Runtime.Plane.operator ==(Prowl.Runtime.Plane, Prowl.Runtime.Plane)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Equality
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 153
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static bool operator ==(Plane plane1, Plane plane2)
    parameters:
    - id: plane1
      type: Prowl.Runtime.Plane
    - id: plane2
      type: Prowl.Runtime.Plane
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(plane1 As Plane, plane2 As Plane) As Boolean
  overload: Prowl.Runtime.Plane.op_Equality*
  nameWithType.vb: Plane.=(Plane, Plane)
  fullName.vb: Prowl.Runtime.Plane.=(Prowl.Runtime.Plane, Prowl.Runtime.Plane)
  name.vb: =(Plane, Plane)
- uid: Prowl.Runtime.Plane.Equals(System.Object)
  commentId: M:Prowl.Runtime.Plane.Equals(System.Object)
  id: Equals(System.Object)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Plane.Equals(object?)
  fullName: Prowl.Runtime.Plane.Equals(object?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 155
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Prowl.Runtime.Plane.Equals*
  nameWithType.vb: Plane.Equals(Object)
  fullName.vb: Prowl.Runtime.Plane.Equals(Object)
  name.vb: Equals(Object)
- uid: Prowl.Runtime.Plane.Equals(Prowl.Runtime.Plane)
  commentId: M:Prowl.Runtime.Plane.Equals(Prowl.Runtime.Plane)
  id: Equals(Prowl.Runtime.Plane)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Equals(Plane)
  nameWithType: Plane.Equals(Plane)
  fullName: Prowl.Runtime.Plane.Equals(Prowl.Runtime.Plane)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 157
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Plane other)
    parameters:
    - id: other
      type: Prowl.Runtime.Plane
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Plane) As Boolean
  overload: Prowl.Runtime.Plane.Equals*
  implements:
  - System.IEquatable{Prowl.Runtime.Plane}.Equals(Prowl.Runtime.Plane)
- uid: Prowl.Runtime.Plane.GetHashCode
  commentId: M:Prowl.Runtime.Plane.GetHashCode
  id: GetHashCode
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Plane.GetHashCode()
  fullName: Prowl.Runtime.Plane.GetHashCode()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetHashCode
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 159
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Prowl.Runtime.Plane.GetHashCode*
- uid: Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds)
  commentId: M:Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds)
  id: Intersects(Prowl.Runtime.Bounds)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Intersects(Bounds)
  nameWithType: Plane.Intersects(Bounds)
  fullName: Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Intersects
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 161
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public PlaneIntersectionType Intersects(Bounds box)
    parameters:
    - id: box
      type: Prowl.Runtime.Bounds
    return:
      type: Prowl.Runtime.PlaneIntersectionType
    content.vb: Public Function Intersects(box As Bounds) As PlaneIntersectionType
  overload: Prowl.Runtime.Plane.Intersects*
- uid: Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds@,Prowl.Runtime.PlaneIntersectionType@)
  commentId: M:Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds@,Prowl.Runtime.PlaneIntersectionType@)
  id: Intersects(Prowl.Runtime.Bounds@,Prowl.Runtime.PlaneIntersectionType@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: Intersects(ref Bounds, out PlaneIntersectionType)
  nameWithType: Plane.Intersects(ref Bounds, out PlaneIntersectionType)
  fullName: Prowl.Runtime.Plane.Intersects(ref Prowl.Runtime.Bounds, out Prowl.Runtime.PlaneIntersectionType)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Intersects
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 163
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public void Intersects(ref Bounds box, out PlaneIntersectionType result)
    parameters:
    - id: box
      type: Prowl.Runtime.Bounds
    - id: result
      type: Prowl.Runtime.PlaneIntersectionType
    content.vb: Public Sub Intersects(box As Bounds, result As PlaneIntersectionType)
  overload: Prowl.Runtime.Plane.Intersects*
  nameWithType.vb: Plane.Intersects(Bounds, PlaneIntersectionType)
  fullName.vb: Prowl.Runtime.Plane.Intersects(Prowl.Runtime.Bounds, Prowl.Runtime.PlaneIntersectionType)
  name.vb: Intersects(Bounds, PlaneIntersectionType)
- uid: Prowl.Runtime.Plane.DoesLineIntersectPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@)
  commentId: M:Prowl.Runtime.Plane.DoesLineIntersectPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@)
  id: DoesLineIntersectPlane(Prowl.Runtime.Vector3,Prowl.Runtime.Vector3,Prowl.Runtime.Vector3@)
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: DoesLineIntersectPlane(Vector3, Vector3, out Vector3)
  nameWithType: Plane.DoesLineIntersectPlane(Vector3, Vector3, out Vector3)
  fullName: Prowl.Runtime.Plane.DoesLineIntersectPlane(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, out Prowl.Runtime.Vector3)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: DoesLineIntersectPlane
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 179
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool DoesLineIntersectPlane(Vector3 lineStart, Vector3 lineEnd, out Vector3 result)
    parameters:
    - id: lineStart
      type: Prowl.Runtime.Vector3
    - id: lineEnd
      type: Prowl.Runtime.Vector3
    - id: result
      type: Prowl.Runtime.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function DoesLineIntersectPlane(lineStart As Vector3, lineEnd As Vector3, result As Vector3) As Boolean
  overload: Prowl.Runtime.Plane.DoesLineIntersectPlane*
  nameWithType.vb: Plane.DoesLineIntersectPlane(Vector3, Vector3, Vector3)
  fullName.vb: Prowl.Runtime.Plane.DoesLineIntersectPlane(Prowl.Runtime.Vector3, Prowl.Runtime.Vector3, Prowl.Runtime.Vector3)
  name.vb: DoesLineIntersectPlane(Vector3, Vector3, Vector3)
- uid: Prowl.Runtime.Plane.ToString
  commentId: M:Prowl.Runtime.Plane.ToString
  id: ToString
  parent: Prowl.Runtime.Plane
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Plane.ToString()
  fullName: Prowl.Runtime.Plane.ToString()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Plane.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Plane.cs
    startLine: 202
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Prowl.Runtime.Plane.ToString*
references:
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: System.IEquatable{Prowl.Runtime.Plane}
  commentId: T:System.IEquatable{Prowl.Runtime.Plane}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Plane>
  nameWithType: IEquatable<Plane>
  fullName: System.IEquatable<Prowl.Runtime.Plane>
  nameWithType.vb: IEquatable(Of Plane)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Plane)
  name.vb: IEquatable(Of Plane)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Prowl.Runtime.Plane
    name: Plane
    href: Prowl.Runtime.Plane.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.Plane
    name: Plane
    href: Prowl.Runtime.Plane.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Prowl.Runtime.Vector3
  commentId: T:Prowl.Runtime.Vector3
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: Prowl.Runtime.Vector3
- uid: Prowl.Runtime.Plane.#ctor*
  commentId: Overload:Prowl.Runtime.Plane.#ctor
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane__ctor_Prowl_Runtime_Vector4_
  name: Plane
  nameWithType: Plane.Plane
  fullName: Prowl.Runtime.Plane.Plane
  nameWithType.vb: Plane.New
  fullName.vb: Prowl.Runtime.Plane.New
  name.vb: New
- uid: Prowl.Runtime.Vector4
  commentId: T:Prowl.Runtime.Vector4
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: Prowl.Runtime.Vector4
- uid: Prowl.Runtime.Plane.Dot*
  commentId: Overload:Prowl.Runtime.Plane.Dot
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_Dot_Prowl_Runtime_Vector4_
  name: Dot
  nameWithType: Plane.Dot
  fullName: Prowl.Runtime.Plane.Dot
- uid: Prowl.Runtime.Plane.DotCoordinate*
  commentId: Overload:Prowl.Runtime.Plane.DotCoordinate
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_DotCoordinate_Prowl_Runtime_Vector3_
  name: DotCoordinate
  nameWithType: Plane.DotCoordinate
  fullName: Prowl.Runtime.Plane.DotCoordinate
- uid: Prowl.Runtime.Plane.DotNormal*
  commentId: Overload:Prowl.Runtime.Plane.DotNormal
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_DotNormal_Prowl_Runtime_Vector3_
  name: DotNormal
  nameWithType: Plane.DotNormal
  fullName: Prowl.Runtime.Plane.DotNormal
- uid: Prowl.Runtime.Plane.GetSide*
  commentId: Overload:Prowl.Runtime.Plane.GetSide
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_GetSide_Prowl_Runtime_Vector3_
  name: GetSide
  nameWithType: Plane.GetSide
  fullName: Prowl.Runtime.Plane.GetSide
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Prowl.Runtime.Plane.IsOnPositiveSide*
  commentId: Overload:Prowl.Runtime.Plane.IsOnPositiveSide
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_IsOnPositiveSide_Prowl_Runtime_Vector3_
  name: IsOnPositiveSide
  nameWithType: Plane.IsOnPositiveSide
  fullName: Prowl.Runtime.Plane.IsOnPositiveSide
- uid: Prowl.Runtime.Plane.GetDistanceToPoint*
  commentId: Overload:Prowl.Runtime.Plane.GetDistanceToPoint
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_GetDistanceToPoint_Prowl_Runtime_Vector3_
  name: GetDistanceToPoint
  nameWithType: Plane.GetDistanceToPoint
  fullName: Prowl.Runtime.Plane.GetDistanceToPoint
- uid: Prowl.Runtime.Plane.IsOnPlane*
  commentId: Overload:Prowl.Runtime.Plane.IsOnPlane
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_IsOnPlane_Prowl_Runtime_Vector3_System_Double_
  name: IsOnPlane
  nameWithType: Plane.IsOnPlane
  fullName: Prowl.Runtime.Plane.IsOnPlane
- uid: Prowl.Runtime.Plane.Normalize*
  commentId: Overload:Prowl.Runtime.Plane.Normalize
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_Normalize
  name: Normalize
  nameWithType: Plane.Normalize
  fullName: Prowl.Runtime.Plane.Normalize
- uid: Prowl.Runtime.Plane.Set3Points*
  commentId: Overload:Prowl.Runtime.Plane.Set3Points
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_Set3Points_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_
  name: Set3Points
  nameWithType: Plane.Set3Points
  fullName: Prowl.Runtime.Plane.Set3Points
- uid: Prowl.Runtime.Plane
  commentId: T:Prowl.Runtime.Plane
  parent: Prowl.Runtime
  href: Prowl.Runtime.Plane.html
  name: Plane
  nameWithType: Plane
  fullName: Prowl.Runtime.Plane
- uid: Prowl.Runtime.Plane.op_Inequality*
  commentId: Overload:Prowl.Runtime.Plane.op_Inequality
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_op_Inequality_Prowl_Runtime_Plane_Prowl_Runtime_Plane_
  name: operator !=
  nameWithType: Plane.operator !=
  fullName: Prowl.Runtime.Plane.operator !=
  nameWithType.vb: Plane.<>
  fullName.vb: Prowl.Runtime.Plane.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Plane.op_Inequality*
    name: '!='
    href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_op_Inequality_Prowl_Runtime_Plane_Prowl_Runtime_Plane_
- uid: Prowl.Runtime.Plane.op_Equality*
  commentId: Overload:Prowl.Runtime.Plane.op_Equality
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_op_Equality_Prowl_Runtime_Plane_Prowl_Runtime_Plane_
  name: operator ==
  nameWithType: Plane.operator ==
  fullName: Prowl.Runtime.Plane.operator ==
  nameWithType.vb: Plane.=
  fullName.vb: Prowl.Runtime.Plane.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Plane.op_Equality*
    name: ==
    href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_op_Equality_Prowl_Runtime_Plane_Prowl_Runtime_Plane_
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.Plane.Equals*
  commentId: Overload:Prowl.Runtime.Plane.Equals
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_Equals_System_Object_
  name: Equals
  nameWithType: Plane.Equals
  fullName: Prowl.Runtime.Plane.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Prowl.Runtime.Plane}.Equals(Prowl.Runtime.Plane)
  commentId: M:System.IEquatable{Prowl.Runtime.Plane}.Equals(Prowl.Runtime.Plane)
  parent: System.IEquatable{Prowl.Runtime.Plane}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Plane)
  nameWithType: IEquatable<Plane>.Equals(Plane)
  fullName: System.IEquatable<Prowl.Runtime.Plane>.Equals(Prowl.Runtime.Plane)
  nameWithType.vb: IEquatable(Of Plane).Equals(Plane)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Plane).Equals(Prowl.Runtime.Plane)
  spec.csharp:
  - uid: System.IEquatable{Prowl.Runtime.Plane}.Equals(Prowl.Runtime.Plane)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Plane
    name: Plane
    href: Prowl.Runtime.Plane.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Prowl.Runtime.Plane}.Equals(Prowl.Runtime.Plane)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Plane
    name: Plane
    href: Prowl.Runtime.Plane.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Prowl.Runtime.Plane.GetHashCode*
  commentId: Overload:Prowl.Runtime.Plane.GetHashCode
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_GetHashCode
  name: GetHashCode
  nameWithType: Plane.GetHashCode
  fullName: Prowl.Runtime.Plane.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Prowl.Runtime.Plane.Intersects*
  commentId: Overload:Prowl.Runtime.Plane.Intersects
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_Intersects_Prowl_Runtime_Bounds_
  name: Intersects
  nameWithType: Plane.Intersects
  fullName: Prowl.Runtime.Plane.Intersects
- uid: Prowl.Runtime.Bounds
  commentId: T:Prowl.Runtime.Bounds
  parent: Prowl.Runtime
  href: Prowl.Runtime.Bounds.html
  name: Bounds
  nameWithType: Bounds
  fullName: Prowl.Runtime.Bounds
- uid: Prowl.Runtime.PlaneIntersectionType
  commentId: T:Prowl.Runtime.PlaneIntersectionType
  parent: Prowl.Runtime
  href: Prowl.Runtime.PlaneIntersectionType.html
  name: PlaneIntersectionType
  nameWithType: PlaneIntersectionType
  fullName: Prowl.Runtime.PlaneIntersectionType
- uid: Prowl.Runtime.Plane.DoesLineIntersectPlane*
  commentId: Overload:Prowl.Runtime.Plane.DoesLineIntersectPlane
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_DoesLineIntersectPlane_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3_Prowl_Runtime_Vector3__
  name: DoesLineIntersectPlane
  nameWithType: Plane.DoesLineIntersectPlane
  fullName: Prowl.Runtime.Plane.DoesLineIntersectPlane
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Prowl.Runtime.Plane.ToString*
  commentId: Overload:Prowl.Runtime.Plane.ToString
  href: Prowl.Runtime.Plane.html#Prowl_Runtime_Plane_ToString
  name: ToString
  nameWithType: Plane.ToString
  fullName: Prowl.Runtime.Plane.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
