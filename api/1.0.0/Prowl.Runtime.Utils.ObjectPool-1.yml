### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.Utils.ObjectPool`1
  commentId: T:Prowl.Runtime.Utils.ObjectPool`1
  id: ObjectPool`1
  parent: Prowl.Runtime.Utils
  children:
  - Prowl.Runtime.Utils.ObjectPool`1.#ctor
  - Prowl.Runtime.Utils.ObjectPool`1.ActiveCount
  - Prowl.Runtime.Utils.ObjectPool`1.Get
  - Prowl.Runtime.Utils.ObjectPool`1.Get(System.Func{`0})
  - Prowl.Runtime.Utils.ObjectPool`1.InactiveCount
  - Prowl.Runtime.Utils.ObjectPool`1.PoolCount
  - Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
  - Prowl.Runtime.Utils.ObjectPool`1.poolStack
  langs:
  - csharp
  - vb
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Prowl.Runtime.Utils.ObjectPool<T>
  type: Class
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ObjectPool
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 13
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: A pool of object instances.
  example: []
  syntax:
    content: 'public class ObjectPool<T> where T : new()'
    typeParameters:
    - id: T
      description: The instance type to pool.
    content.vb: Public Class ObjectPool(Of T As New)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
- uid: Prowl.Runtime.Utils.ObjectPool`1.poolStack
  commentId: F:Prowl.Runtime.Utils.ObjectPool`1.poolStack
  id: poolStack
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: poolStack
  nameWithType: ObjectPool<T>.poolStack
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.poolStack
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: poolStack
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  syntax:
    content: protected readonly Stack<T> poolStack
    return:
      type: System.Collections.Generic.Stack{{T}}
    content.vb: Protected ReadOnly poolStack As Stack(Of T)
  nameWithType.vb: ObjectPool(Of T).poolStack
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).poolStack
- uid: Prowl.Runtime.Utils.ObjectPool`1.PoolCount
  commentId: P:Prowl.Runtime.Utils.ObjectPool`1.PoolCount
  id: PoolCount
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: PoolCount
  nameWithType: ObjectPool<T>.PoolCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.PoolCount
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: PoolCount
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 18
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: The count of objects stored in the internal pool and the instances released by <xref href="Prowl.Runtime.Utils.ObjectPool%601.Get" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected int PoolCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Property PoolCount As Integer
  overload: Prowl.Runtime.Utils.ObjectPool`1.PoolCount*
  nameWithType.vb: ObjectPool(Of T).PoolCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).PoolCount
- uid: Prowl.Runtime.Utils.ObjectPool`1.ActiveCount
  commentId: P:Prowl.Runtime.Utils.ObjectPool`1.ActiveCount
  id: ActiveCount
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: ActiveCount
  nameWithType: ObjectPool<T>.ActiveCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.ActiveCount
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ActiveCount
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 21
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: The count of active and released objects the pool contains.
  example: []
  syntax:
    content: protected int ActiveCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property ActiveCount As Integer
  overload: Prowl.Runtime.Utils.ObjectPool`1.ActiveCount*
  nameWithType.vb: ObjectPool(Of T).ActiveCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).ActiveCount
- uid: Prowl.Runtime.Utils.ObjectPool`1.InactiveCount
  commentId: P:Prowl.Runtime.Utils.ObjectPool`1.InactiveCount
  id: InactiveCount
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: InactiveCount
  nameWithType: ObjectPool<T>.InactiveCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.InactiveCount
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: InactiveCount
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 24
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: The count of inactive objects the pool contains.
  example: []
  syntax:
    content: protected int InactiveCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property InactiveCount As Integer
  overload: Prowl.Runtime.Utils.ObjectPool`1.InactiveCount*
  nameWithType.vb: ObjectPool(Of T).InactiveCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).InactiveCount
- uid: Prowl.Runtime.Utils.ObjectPool`1.#ctor
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.#ctor
  id: '#ctor'
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: ObjectPool()
  nameWithType: ObjectPool<T>.ObjectPool()
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.ObjectPool()
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 29
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: Creates a new <xref href="Prowl.Runtime.Utils.ObjectPool%601" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public ObjectPool()
    content.vb: Public Sub New()
  overload: Prowl.Runtime.Utils.ObjectPool`1.#ctor*
  nameWithType.vb: ObjectPool(Of T).New()
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).New()
  name.vb: New()
- uid: Prowl.Runtime.Utils.ObjectPool`1.Get
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.Get
  id: Get
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Get()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Get
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 38
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: >-
    <p>

    Get an object from the pool. If no object is available, creates a new instance.

    </p>

    Once this object has been created and given back to the caller, the caller does not truly need to call <xref href="Prowl.Runtime.Utils.ObjectPool%601.Release(%600)" data-throw-if-not-resolved="false"></xref>.

    However, it is best practice to do so, otherwise the pool ends up as a glorified instantiator.
  example: []
  syntax:
    content: public T Get()
    return:
      type: '{T}'
    content.vb: Public Function [Get]() As T
  overload: Prowl.Runtime.Utils.ObjectPool`1.Get*
  nameWithType.vb: ObjectPool(Of T).Get()
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Get()
- uid: Prowl.Runtime.Utils.ObjectPool`1.Get(System.Func{`0})
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.Get(System.Func{`0})
  id: Get(System.Func{`0})
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Get(Func<T>)
  nameWithType: ObjectPool<T>.Get(Func<T>)
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Get(System.Func<T>)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Get
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 61
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: >-
    <p>

    Get an object from the pool with an instantiator to use if none exists.

    </p>

    Once this object has been created and given back to the caller, the caller does not truly need to call <xref href="Prowl.Runtime.Utils.ObjectPool%601.Release(%600)" data-throw-if-not-resolved="false"></xref>.

    However, it is best practice to do so, otherwise the pool ends up as a glorified instantiator.
  example: []
  syntax:
    content: public T Get(Func<T> instantiator)
    parameters:
    - id: instantiator
      type: System.Func{{T}}
    return:
      type: '{T}'
    content.vb: Public Function [Get](instantiator As Func(Of T)) As T
  overload: Prowl.Runtime.Utils.ObjectPool`1.Get*
  nameWithType.vb: ObjectPool(Of T).Get(Func(Of T))
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Get(System.Func(Of T))
  name.vb: Get(Func(Of T))
- uid: Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
  id: Release(`0)
  parent: Prowl.Runtime.Utils.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Release(T)
  nameWithType: ObjectPool<T>.Release(T)
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Release(T)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Utils/ObjectPool.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Release
    path: ../Prowl/Prowl.Runtime/Utils/ObjectPool.cs
    startLine: 81
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime.Utils
  summary: Release an object back into the pool.
  example: []
  syntax:
    content: public void Release(T element)
    parameters:
    - id: element
      type: '{T}'
      description: Object to release.
    content.vb: Public Sub Release(element As T)
  overload: Prowl.Runtime.Utils.ObjectPool`1.Release*
  nameWithType.vb: ObjectPool(Of T).Release(T)
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Release(T)
references:
- uid: Prowl.Runtime.Utils
  commentId: N:Prowl.Runtime.Utils
  href: Prowl.html
  name: Prowl.Runtime.Utils
  nameWithType: Prowl.Runtime.Utils
  fullName: Prowl.Runtime.Utils
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.Utils
    name: Utils
    href: Prowl.Runtime.Utils.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  - name: .
  - uid: Prowl.Runtime.Utils
    name: Utils
    href: Prowl.Runtime.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: System.Collections.Generic.Stack{{T}}
  commentId: T:System.Collections.Generic.Stack{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Prowl.Runtime.Utils.ObjectPool`1.Get
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.Get
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Get
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Get()
  nameWithType.vb: ObjectPool(Of T).Get()
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Get()
  spec.csharp:
  - uid: Prowl.Runtime.Utils.ObjectPool`1.Get
    name: Get
    href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Get
  - name: (
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.Utils.ObjectPool`1.Get
    name: Get
    href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Get
  - name: (
  - name: )
- uid: Prowl.Runtime.Utils.ObjectPool`1.PoolCount*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.PoolCount
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_PoolCount
  name: PoolCount
  nameWithType: ObjectPool<T>.PoolCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.PoolCount
  nameWithType.vb: ObjectPool(Of T).PoolCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).PoolCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Prowl.Runtime.Utils.ObjectPool`1.ActiveCount*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.ActiveCount
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_ActiveCount
  name: ActiveCount
  nameWithType: ObjectPool<T>.ActiveCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.ActiveCount
  nameWithType.vb: ObjectPool(Of T).ActiveCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).ActiveCount
- uid: Prowl.Runtime.Utils.ObjectPool`1.InactiveCount*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.InactiveCount
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_InactiveCount
  name: InactiveCount
  nameWithType: ObjectPool<T>.InactiveCount
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.InactiveCount
  nameWithType.vb: ObjectPool(Of T).InactiveCount
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).InactiveCount
- uid: Prowl.Runtime.Utils.ObjectPool`1
  commentId: T:Prowl.Runtime.Utils.ObjectPool`1
  href: Prowl.Runtime.Utils.ObjectPool-1.html
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Prowl.Runtime.Utils.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: Prowl.Runtime.Utils.ObjectPool`1
    name: ObjectPool
    href: Prowl.Runtime.Utils.ObjectPool-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Prowl.Runtime.Utils.ObjectPool`1
    name: ObjectPool
    href: Prowl.Runtime.Utils.ObjectPool-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Prowl.Runtime.Utils.ObjectPool`1.#ctor*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.#ctor
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1__ctor
  name: ObjectPool
  nameWithType: ObjectPool<T>.ObjectPool
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.ObjectPool
  nameWithType.vb: ObjectPool(Of T).New
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).New
  name.vb: New
- uid: Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
  commentId: M:Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Release__0_
  name: Release(T)
  nameWithType: ObjectPool<T>.Release(T)
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Release(T)
  nameWithType.vb: ObjectPool(Of T).Release(T)
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Release(T)
  spec.csharp:
  - uid: Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
    name: Release
    href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Release__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.Utils.ObjectPool`1.Release(`0)
    name: Release
    href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Release__0_
  - name: (
  - name: T
  - name: )
- uid: Prowl.Runtime.Utils.ObjectPool`1.Get*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.Get
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Get
  name: Get
  nameWithType: ObjectPool<T>.Get
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Get
  nameWithType.vb: ObjectPool(Of T).Get
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Prowl.Runtime.Utils.ObjectPool`1.Release*
  commentId: Overload:Prowl.Runtime.Utils.ObjectPool`1.Release
  href: Prowl.Runtime.Utils.ObjectPool-1.html#Prowl_Runtime_Utils_ObjectPool_1_Release__0_
  name: Release
  nameWithType: ObjectPool<T>.Release
  fullName: Prowl.Runtime.Utils.ObjectPool<T>.Release
  nameWithType.vb: ObjectPool(Of T).Release
  fullName.vb: Prowl.Runtime.Utils.ObjectPool(Of T).Release
