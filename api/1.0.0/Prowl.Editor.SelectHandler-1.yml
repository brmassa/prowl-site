### YamlMime:ManagedReference
items:
- uid: Prowl.Editor.SelectHandler`1
  commentId: T:Prowl.Editor.SelectHandler`1
  id: SelectHandler`1
  parent: Prowl.Editor
  children:
  - Prowl.Editor.SelectHandler`1.#ctor(System.Func{`0,System.Boolean},System.Func{`0,`0,System.Boolean})
  - Prowl.Editor.SelectHandler`1.AddSelectableAtIndex(System.Int32,`0)
  - Prowl.Editor.SelectHandler`1.Clear
  - Prowl.Editor.SelectHandler`1.Count
  - Prowl.Editor.SelectHandler`1.Foreach(System.Action{`0})
  - Prowl.Editor.SelectHandler`1.IsSelected(`0)
  - Prowl.Editor.SelectHandler`1.OnDeselectObject
  - Prowl.Editor.SelectHandler`1.OnSelectObject
  - Prowl.Editor.SelectHandler`1.Select(System.Int32,`0)
  - Prowl.Editor.SelectHandler`1.Select(`0,System.Boolean)
  - Prowl.Editor.SelectHandler`1.SelectIfNot(`0,System.Boolean)
  - Prowl.Editor.SelectHandler`1.Selected
  - Prowl.Editor.SelectHandler`1.SelectedThisFrame
  - Prowl.Editor.SelectHandler`1.SetSelection(`0)
  - Prowl.Editor.SelectHandler`1.SetSelection(`0[])
  - Prowl.Editor.SelectHandler`1.StartFrame
  langs:
  - csharp
  - vb
  name: SelectHandler<T>
  nameWithType: SelectHandler<T>
  fullName: Prowl.Editor.SelectHandler<T>
  type: Class
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SelectHandler
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 21
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  summary: A General Purpose Selection Handler for the Editor
  example: []
  syntax:
    content: 'public class SelectHandler<T> where T : class'
    typeParameters:
    - id: T
      description: The Type you want to select, Must be of type 'Class'
    content.vb: Public Class SelectHandler(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  nameWithType.vb: SelectHandler(Of T)
  fullName.vb: Prowl.Editor.SelectHandler(Of T)
  name.vb: SelectHandler(Of T)
- uid: Prowl.Editor.SelectHandler`1.SelectedThisFrame
  commentId: P:Prowl.Editor.SelectHandler`1.SelectedThisFrame
  id: SelectedThisFrame
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: SelectedThisFrame
  nameWithType: SelectHandler<T>.SelectedThisFrame
  fullName: Prowl.Editor.SelectHandler<T>.SelectedThisFrame
  type: Property
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SelectedThisFrame
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 29
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public bool SelectedThisFrame { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SelectedThisFrame As Boolean
  overload: Prowl.Editor.SelectHandler`1.SelectedThisFrame*
  nameWithType.vb: SelectHandler(Of T).SelectedThisFrame
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SelectedThisFrame
- uid: Prowl.Editor.SelectHandler`1.Selected
  commentId: P:Prowl.Editor.SelectHandler`1.Selected
  id: Selected
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Selected
  nameWithType: SelectHandler<T>.Selected
  fullName: Prowl.Editor.SelectHandler<T>.Selected
  type: Property
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Selected
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 30
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public List<T> Selected { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public ReadOnly Property Selected As List(Of T)
  overload: Prowl.Editor.SelectHandler`1.Selected*
  nameWithType.vb: SelectHandler(Of T).Selected
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Selected
- uid: Prowl.Editor.SelectHandler`1.Count
  commentId: P:Prowl.Editor.SelectHandler`1.Count
  id: Count
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SelectHandler<T>.Count
  fullName: Prowl.Editor.SelectHandler<T>.Count
  type: Property
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Count
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 31
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Prowl.Editor.SelectHandler`1.Count*
  nameWithType.vb: SelectHandler(Of T).Count
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Count
- uid: Prowl.Editor.SelectHandler`1.OnSelectObject
  commentId: E:Prowl.Editor.SelectHandler`1.OnSelectObject
  id: OnSelectObject
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: OnSelectObject
  nameWithType: SelectHandler<T>.OnSelectObject
  fullName: Prowl.Editor.SelectHandler<T>.OnSelectObject
  type: Event
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: OnSelectObject
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 33
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public event Action<T>? OnSelectObject
    return:
      type: System.Action{{T}}
    content.vb: Public Event OnSelectObject As Action(Of T)
  nameWithType.vb: SelectHandler(Of T).OnSelectObject
  fullName.vb: Prowl.Editor.SelectHandler(Of T).OnSelectObject
- uid: Prowl.Editor.SelectHandler`1.OnDeselectObject
  commentId: E:Prowl.Editor.SelectHandler`1.OnDeselectObject
  id: OnDeselectObject
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: OnDeselectObject
  nameWithType: SelectHandler<T>.OnDeselectObject
  fullName: Prowl.Editor.SelectHandler<T>.OnDeselectObject
  type: Event
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: OnDeselectObject
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 34
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public event Action<T>? OnDeselectObject
    return:
      type: System.Action{{T}}
    content.vb: Public Event OnDeselectObject As Action(Of T)
  nameWithType.vb: SelectHandler(Of T).OnDeselectObject
  fullName.vb: Prowl.Editor.SelectHandler(Of T).OnDeselectObject
- uid: Prowl.Editor.SelectHandler`1.#ctor(System.Func{`0,System.Boolean},System.Func{`0,`0,System.Boolean})
  commentId: M:Prowl.Editor.SelectHandler`1.#ctor(System.Func{`0,System.Boolean},System.Func{`0,`0,System.Boolean})
  id: '#ctor(System.Func{`0,System.Boolean},System.Func{`0,`0,System.Boolean})'
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: SelectHandler(Func<T, bool>, Func<T, T, bool>)
  nameWithType: SelectHandler<T>.SelectHandler(Func<T, bool>, Func<T, T, bool>)
  fullName: Prowl.Editor.SelectHandler<T>.SelectHandler(System.Func<T, bool>, System.Func<T, T, bool>)
  type: Constructor
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 39
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public SelectHandler(Func<T, bool> checkIsDestroyed, Func<T, T, bool> equals)
    parameters:
    - id: checkIsDestroyed
      type: System.Func{{T},System.Boolean}
    - id: equals
      type: System.Func{{T},{T},System.Boolean}
    content.vb: Public Sub New(checkIsDestroyed As Func(Of T, Boolean), equals As Func(Of T, T, Boolean))
  overload: Prowl.Editor.SelectHandler`1.#ctor*
  nameWithType.vb: SelectHandler(Of T).New(Func(Of T, Boolean), Func(Of T, T, Boolean))
  fullName.vb: Prowl.Editor.SelectHandler(Of T).New(System.Func(Of T, Boolean), System.Func(Of T, T, Boolean))
  name.vb: New(Func(Of T, Boolean), Func(Of T, T, Boolean))
- uid: Prowl.Editor.SelectHandler`1.StartFrame
  commentId: M:Prowl.Editor.SelectHandler`1.StartFrame
  id: StartFrame
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: StartFrame()
  nameWithType: SelectHandler<T>.StartFrame()
  fullName: Prowl.Editor.SelectHandler<T>.StartFrame()
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: StartFrame
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 45
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void StartFrame()
    content.vb: Public Sub StartFrame()
  overload: Prowl.Editor.SelectHandler`1.StartFrame*
  nameWithType.vb: SelectHandler(Of T).StartFrame()
  fullName.vb: Prowl.Editor.SelectHandler(Of T).StartFrame()
- uid: Prowl.Editor.SelectHandler`1.SetSelection(`0)
  commentId: M:Prowl.Editor.SelectHandler`1.SetSelection(`0)
  id: SetSelection(`0)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: SetSelection(T)
  nameWithType: SelectHandler<T>.SetSelection(T)
  fullName: Prowl.Editor.SelectHandler<T>.SetSelection(T)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SetSelection
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 67
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void SetSelection(T obj)
    parameters:
    - id: obj
      type: '{T}'
    content.vb: Public Sub SetSelection(obj As T)
  overload: Prowl.Editor.SelectHandler`1.SetSelection*
  nameWithType.vb: SelectHandler(Of T).SetSelection(T)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SetSelection(T)
- uid: Prowl.Editor.SelectHandler`1.SetSelection(`0[])
  commentId: M:Prowl.Editor.SelectHandler`1.SetSelection(`0[])
  id: SetSelection(`0[])
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: SetSelection(T[])
  nameWithType: SelectHandler<T>.SetSelection(T[])
  fullName: Prowl.Editor.SelectHandler<T>.SetSelection(T[])
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SetSelection
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 78
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void SetSelection(T[] objs)
    parameters:
    - id: objs
      type: '{T}[]'
    content.vb: Public Sub SetSelection(objs As T())
  overload: Prowl.Editor.SelectHandler`1.SetSelection*
  nameWithType.vb: SelectHandler(Of T).SetSelection(T())
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SetSelection(T())
  name.vb: SetSelection(T())
- uid: Prowl.Editor.SelectHandler`1.IsSelected(`0)
  commentId: M:Prowl.Editor.SelectHandler`1.IsSelected(`0)
  id: IsSelected(`0)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: IsSelected(T)
  nameWithType: SelectHandler<T>.IsSelected(T)
  fullName: Prowl.Editor.SelectHandler<T>.IsSelected(T)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsSelected
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 92
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public bool IsSelected(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function IsSelected(obj As T) As Boolean
  overload: Prowl.Editor.SelectHandler`1.IsSelected*
  nameWithType.vb: SelectHandler(Of T).IsSelected(T)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).IsSelected(T)
- uid: Prowl.Editor.SelectHandler`1.Foreach(System.Action{`0})
  commentId: M:Prowl.Editor.SelectHandler`1.Foreach(System.Action{`0})
  id: Foreach(System.Action{`0})
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Foreach(Action<T>)
  nameWithType: SelectHandler<T>.Foreach(Action<T>)
  fullName: Prowl.Editor.SelectHandler<T>.Foreach(System.Action<T>)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Foreach
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 102
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void Foreach(Action<T> value)
    parameters:
    - id: value
      type: System.Action{{T}}
    content.vb: Public Sub Foreach(value As Action(Of T))
  overload: Prowl.Editor.SelectHandler`1.Foreach*
  nameWithType.vb: SelectHandler(Of T).Foreach(Action(Of T))
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Foreach(System.Action(Of T))
  name.vb: Foreach(Action(Of T))
- uid: Prowl.Editor.SelectHandler`1.AddSelectableAtIndex(System.Int32,`0)
  commentId: M:Prowl.Editor.SelectHandler`1.AddSelectableAtIndex(System.Int32,`0)
  id: AddSelectableAtIndex(System.Int32,`0)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: AddSelectableAtIndex(int, T)
  nameWithType: SelectHandler<T>.AddSelectableAtIndex(int, T)
  fullName: Prowl.Editor.SelectHandler<T>.AddSelectableAtIndex(int, T)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AddSelectableAtIndex
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 111
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void AddSelectableAtIndex(int index, T obj)
    parameters:
    - id: index
      type: System.Int32
    - id: obj
      type: '{T}'
    content.vb: Public Sub AddSelectableAtIndex(index As Integer, obj As T)
  overload: Prowl.Editor.SelectHandler`1.AddSelectableAtIndex*
  nameWithType.vb: SelectHandler(Of T).AddSelectableAtIndex(Integer, T)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).AddSelectableAtIndex(Integer, T)
  name.vb: AddSelectableAtIndex(Integer, T)
- uid: Prowl.Editor.SelectHandler`1.Select(System.Int32,`0)
  commentId: M:Prowl.Editor.SelectHandler`1.Select(System.Int32,`0)
  id: Select(System.Int32,`0)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Select(int, T)
  nameWithType: SelectHandler<T>.Select(int, T)
  fullName: Prowl.Editor.SelectHandler<T>.Select(int, T)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Select
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 113
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void Select(int index, T obj)
    parameters:
    - id: index
      type: System.Int32
    - id: obj
      type: '{T}'
    content.vb: Public Sub [Select](index As Integer, obj As T)
  overload: Prowl.Editor.SelectHandler`1.Select*
  nameWithType.vb: SelectHandler(Of T).Select(Integer, T)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Select(Integer, T)
  name.vb: Select(Integer, T)
- uid: Prowl.Editor.SelectHandler`1.SelectIfNot(`0,System.Boolean)
  commentId: M:Prowl.Editor.SelectHandler`1.SelectIfNot(`0,System.Boolean)
  id: SelectIfNot(`0,System.Boolean)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: SelectIfNot(T, bool)
  nameWithType: SelectHandler<T>.SelectIfNot(T, bool)
  fullName: Prowl.Editor.SelectHandler<T>.SelectIfNot(T, bool)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SelectIfNot
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 141
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void SelectIfNot(T obj, bool additively = false)
    parameters:
    - id: obj
      type: '{T}'
    - id: additively
      type: System.Boolean
    content.vb: Public Sub SelectIfNot(obj As T, additively As Boolean = False)
  overload: Prowl.Editor.SelectHandler`1.SelectIfNot*
  nameWithType.vb: SelectHandler(Of T).SelectIfNot(T, Boolean)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SelectIfNot(T, Boolean)
  name.vb: SelectIfNot(T, Boolean)
- uid: Prowl.Editor.SelectHandler`1.Select(`0,System.Boolean)
  commentId: M:Prowl.Editor.SelectHandler`1.Select(`0,System.Boolean)
  id: Select(`0,System.Boolean)
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Select(T, bool)
  nameWithType: SelectHandler<T>.Select(T, bool)
  fullName: Prowl.Editor.SelectHandler<T>.Select(T, bool)
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Select
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 147
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void Select(T obj, bool additively = false)
    parameters:
    - id: obj
      type: '{T}'
    - id: additively
      type: System.Boolean
    content.vb: Public Sub [Select](obj As T, additively As Boolean = False)
  overload: Prowl.Editor.SelectHandler`1.Select*
  nameWithType.vb: SelectHandler(Of T).Select(T, Boolean)
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Select(T, Boolean)
  name.vb: Select(T, Boolean)
- uid: Prowl.Editor.SelectHandler`1.Clear
  commentId: M:Prowl.Editor.SelectHandler`1.Clear
  id: Clear
  parent: Prowl.Editor.SelectHandler`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SelectHandler<T>.Clear()
  fullName: Prowl.Editor.SelectHandler<T>.Clear()
  type: Method
  source:
    remote:
      path: Prowl.Editor/SelectHandler.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Clear
    path: ../Prowl/Prowl.Editor/SelectHandler.cs
    startLine: 192
  assemblies:
  - Prowl.Editor
  namespace: Prowl.Editor
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Prowl.Editor.SelectHandler`1.Clear*
  nameWithType.vb: SelectHandler(Of T).Clear()
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Clear()
references:
- uid: Prowl.Editor
  commentId: N:Prowl.Editor
  href: Prowl.html
  name: Prowl.Editor
  nameWithType: Prowl.Editor
  fullName: Prowl.Editor
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Editor
    name: Editor
    href: Prowl.Editor.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Editor
    name: Editor
    href: Prowl.Editor.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: Prowl.Editor.SelectHandler`1.SelectedThisFrame*
  commentId: Overload:Prowl.Editor.SelectHandler`1.SelectedThisFrame
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_SelectedThisFrame
  name: SelectedThisFrame
  nameWithType: SelectHandler<T>.SelectedThisFrame
  fullName: Prowl.Editor.SelectHandler<T>.SelectedThisFrame
  nameWithType.vb: SelectHandler(Of T).SelectedThisFrame
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SelectedThisFrame
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Prowl.Editor.SelectHandler`1.Selected*
  commentId: Overload:Prowl.Editor.SelectHandler`1.Selected
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_Selected
  name: Selected
  nameWithType: SelectHandler<T>.Selected
  fullName: Prowl.Editor.SelectHandler<T>.Selected
  nameWithType.vb: SelectHandler(Of T).Selected
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Selected
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Prowl.Editor.SelectHandler`1.Count*
  commentId: Overload:Prowl.Editor.SelectHandler`1.Count
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_Count
  name: Count
  nameWithType: SelectHandler<T>.Count
  fullName: Prowl.Editor.SelectHandler<T>.Count
  nameWithType.vb: SelectHandler(Of T).Count
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Prowl.Editor.SelectHandler`1.#ctor*
  commentId: Overload:Prowl.Editor.SelectHandler`1.#ctor
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1__ctor_System_Func__0_System_Boolean__System_Func__0__0_System_Boolean__
  name: SelectHandler
  nameWithType: SelectHandler<T>.SelectHandler
  fullName: Prowl.Editor.SelectHandler<T>.SelectHandler
  nameWithType.vb: SelectHandler(Of T).New
  fullName.vb: Prowl.Editor.SelectHandler(Of T).New
  name.vb: New
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{`0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func{{T},{T},System.Boolean}
  commentId: T:System.Func{`0,`0,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T, T, bool>
  nameWithType: Func<T, T, bool>
  fullName: System.Func<T, T, bool>
  nameWithType.vb: Func(Of T, T, Boolean)
  fullName.vb: System.Func(Of T, T, Boolean)
  name.vb: Func(Of T, T, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Prowl.Editor.SelectHandler`1.StartFrame*
  commentId: Overload:Prowl.Editor.SelectHandler`1.StartFrame
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_StartFrame
  name: StartFrame
  nameWithType: SelectHandler<T>.StartFrame
  fullName: Prowl.Editor.SelectHandler<T>.StartFrame
  nameWithType.vb: SelectHandler(Of T).StartFrame
  fullName.vb: Prowl.Editor.SelectHandler(Of T).StartFrame
- uid: Prowl.Editor.SelectHandler`1.SetSelection*
  commentId: Overload:Prowl.Editor.SelectHandler`1.SetSelection
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_SetSelection__0_
  name: SetSelection
  nameWithType: SelectHandler<T>.SetSelection
  fullName: Prowl.Editor.SelectHandler<T>.SetSelection
  nameWithType.vb: SelectHandler(Of T).SetSelection
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SetSelection
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: Prowl.Editor.SelectHandler`1.IsSelected*
  commentId: Overload:Prowl.Editor.SelectHandler`1.IsSelected
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_IsSelected__0_
  name: IsSelected
  nameWithType: SelectHandler<T>.IsSelected
  fullName: Prowl.Editor.SelectHandler<T>.IsSelected
  nameWithType.vb: SelectHandler(Of T).IsSelected
  fullName.vb: Prowl.Editor.SelectHandler(Of T).IsSelected
- uid: Prowl.Editor.SelectHandler`1.Foreach*
  commentId: Overload:Prowl.Editor.SelectHandler`1.Foreach
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_Foreach_System_Action__0__
  name: Foreach
  nameWithType: SelectHandler<T>.Foreach
  fullName: Prowl.Editor.SelectHandler<T>.Foreach
  nameWithType.vb: SelectHandler(Of T).Foreach
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Foreach
- uid: Prowl.Editor.SelectHandler`1.AddSelectableAtIndex*
  commentId: Overload:Prowl.Editor.SelectHandler`1.AddSelectableAtIndex
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_AddSelectableAtIndex_System_Int32__0_
  name: AddSelectableAtIndex
  nameWithType: SelectHandler<T>.AddSelectableAtIndex
  fullName: Prowl.Editor.SelectHandler<T>.AddSelectableAtIndex
  nameWithType.vb: SelectHandler(Of T).AddSelectableAtIndex
  fullName.vb: Prowl.Editor.SelectHandler(Of T).AddSelectableAtIndex
- uid: Prowl.Editor.SelectHandler`1.Select*
  commentId: Overload:Prowl.Editor.SelectHandler`1.Select
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_Select_System_Int32__0_
  name: Select
  nameWithType: SelectHandler<T>.Select
  fullName: Prowl.Editor.SelectHandler<T>.Select
  nameWithType.vb: SelectHandler(Of T).Select
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Select
- uid: Prowl.Editor.SelectHandler`1.SelectIfNot*
  commentId: Overload:Prowl.Editor.SelectHandler`1.SelectIfNot
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_SelectIfNot__0_System_Boolean_
  name: SelectIfNot
  nameWithType: SelectHandler<T>.SelectIfNot
  fullName: Prowl.Editor.SelectHandler<T>.SelectIfNot
  nameWithType.vb: SelectHandler(Of T).SelectIfNot
  fullName.vb: Prowl.Editor.SelectHandler(Of T).SelectIfNot
- uid: Prowl.Editor.SelectHandler`1.Clear*
  commentId: Overload:Prowl.Editor.SelectHandler`1.Clear
  href: Prowl.Editor.SelectHandler-1.html#Prowl_Editor_SelectHandler_1_Clear
  name: Clear
  nameWithType: SelectHandler<T>.Clear
  fullName: Prowl.Editor.SelectHandler<T>.Clear
  nameWithType.vb: SelectHandler(Of T).Clear
  fullName.vb: Prowl.Editor.SelectHandler(Of T).Clear
