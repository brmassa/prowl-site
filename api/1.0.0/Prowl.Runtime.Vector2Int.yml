### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.Vector2Int
  commentId: T:Prowl.Runtime.Vector2Int
  id: Vector2Int
  parent: Prowl.Runtime
  children:
  - Prowl.Runtime.Vector2Int.#ctor(System.Int32)
  - Prowl.Runtime.Vector2Int.#ctor(System.Int32,System.Int32)
  - Prowl.Runtime.Vector2Int.Abs(Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.Clamp(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.Distance(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.Equals(Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.Equals(System.Object)
  - Prowl.Runtime.Vector2Int.GetHashCode
  - Prowl.Runtime.Vector2Int.IsFinate
  - Prowl.Runtime.Vector2Int.Item(System.Int32)
  - Prowl.Runtime.Vector2Int.Max(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.Min(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.ToString
  - Prowl.Runtime.Vector2Int.ToString(System.String)
  - Prowl.Runtime.Vector2Int.ToString(System.String,System.IFormatProvider)
  - Prowl.Runtime.Vector2Int.op_Addition(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Division(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Equality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2)~Prowl.Runtime.Vector2Int
  - Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2Int)~Prowl.Runtime.Vector2
  - Prowl.Runtime.Vector2Int.op_Inequality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,System.Int32)
  - Prowl.Runtime.Vector2Int.op_Multiply(System.Int32,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.op_Subtraction(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  - Prowl.Runtime.Vector2Int.x
  - Prowl.Runtime.Vector2Int.y
  - Prowl.Runtime.Vector2Int.zero
  langs:
  - csharp
  - vb
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: Prowl.Runtime.Vector2Int
  type: Struct
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Vector2Int
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 13
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: A structure encapsulating two integar values.
  example: []
  syntax:
    content: 'public struct Vector2Int : IEquatable<Vector2Int>, IFormattable'
    content.vb: Public Structure Vector2Int Implements IEquatable(Of Vector2Int), IFormattable
  implements:
  - System.IEquatable{Prowl.Runtime.Vector2Int}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
- uid: Prowl.Runtime.Vector2Int.x
  commentId: F:Prowl.Runtime.Vector2Int.x
  id: x
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector2Int.x
  fullName: Prowl.Runtime.Vector2Int.x
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: x
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public int x
    return:
      type: System.Int32
    content.vb: Public x As Integer
- uid: Prowl.Runtime.Vector2Int.y
  commentId: F:Prowl.Runtime.Vector2Int.y
  id: y
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector2Int.y
  fullName: Prowl.Runtime.Vector2Int.y
  type: Field
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: y
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 15
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public int y
    return:
      type: System.Int32
    content.vb: Public y As Integer
- uid: Prowl.Runtime.Vector2Int.#ctor(System.Int32)
  commentId: M:Prowl.Runtime.Vector2Int.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Vector2Int(int)
  nameWithType: Vector2Int.Vector2Int(int)
  fullName: Prowl.Runtime.Vector2Int.Vector2Int(int)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 19
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Constructs a vector whose elements are all the single specified value.
  example: []
  syntax:
    content: public Vector2Int(int value)
    parameters:
    - id: value
      type: System.Int32
    content.vb: Public Sub New(value As Integer)
  overload: Prowl.Runtime.Vector2Int.#ctor*
  nameWithType.vb: Vector2Int.New(Integer)
  fullName.vb: Prowl.Runtime.Vector2Int.New(Integer)
  name.vb: New(Integer)
- uid: Prowl.Runtime.Vector2Int.#ctor(System.Int32,System.Int32)
  commentId: M:Prowl.Runtime.Vector2Int.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Vector2Int(int, int)
  nameWithType: Vector2Int.Vector2Int(int, int)
  fullName: Prowl.Runtime.Vector2Int.Vector2Int(int, int)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 22
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Constructs a vector with the given individual elements.
  example: []
  syntax:
    content: public Vector2Int(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: Prowl.Runtime.Vector2Int.#ctor*
  nameWithType.vb: Vector2Int.New(Integer, Integer)
  fullName.vb: Prowl.Runtime.Vector2Int.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: Prowl.Runtime.Vector2Int.Item(System.Int32)
  commentId: P:Prowl.Runtime.Vector2Int.Item(System.Int32)
  id: Item(System.Int32)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector2Int.this[int]
  fullName: Prowl.Runtime.Vector2Int.this[int]
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: this[]
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 31
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public int this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Default Property this[](index As Integer) As Integer
  overload: Prowl.Runtime.Vector2Int.Item*
  nameWithType.vb: Vector2Int.this[](Integer)
  fullName.vb: Prowl.Runtime.Vector2Int.this[](Integer)
  name.vb: this[](Integer)
- uid: Prowl.Runtime.Vector2Int.GetHashCode
  commentId: M:Prowl.Runtime.Vector2Int.GetHashCode
  id: GetHashCode
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2Int.GetHashCode()
  fullName: Prowl.Runtime.Vector2Int.GetHashCode()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetHashCode
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 64
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Prowl.Runtime.Vector2Int.GetHashCode*
- uid: Prowl.Runtime.Vector2Int.Equals(System.Object)
  commentId: M:Prowl.Runtime.Vector2Int.Equals(System.Object)
  id: Equals(System.Object)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Vector2Int.Equals(object?)
  fullName: Prowl.Runtime.Vector2Int.Equals(object?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 76
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the given Object is equal to this Vector2Int instance.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The Object to compare against.
    return:
      type: System.Boolean
      description: True if the Object is equal to this Vector2Int; False otherwise.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Prowl.Runtime.Vector2Int.Equals*
  nameWithType.vb: Vector2Int.Equals(Object)
  fullName.vb: Prowl.Runtime.Vector2Int.Equals(Object)
  name.vb: Equals(Object)
- uid: Prowl.Runtime.Vector2Int.Equals(Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Equals(Prowl.Runtime.Vector2Int)
  id: Equals(Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Equals(Vector2Int)
  nameWithType: Vector2Int.Equals(Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Equals(Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 89
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the given Vector2Int is equal to this Vector2Int instance.
  example: []
  syntax:
    content: public bool Equals(Vector2Int other)
    parameters:
    - id: other
      type: Prowl.Runtime.Vector2Int
      description: The Vector2Int to compare this instance to.
    return:
      type: System.Boolean
      description: True if the other Vector2Int is equal to this instance; False otherwise.
    content.vb: Public Function Equals(other As Vector2Int) As Boolean
  overload: Prowl.Runtime.Vector2Int.Equals*
  implements:
  - System.IEquatable{Prowl.Runtime.Vector2Int}.Equals(Prowl.Runtime.Vector2Int)
- uid: Prowl.Runtime.Vector2Int.ToString
  commentId: M:Prowl.Runtime.Vector2Int.ToString
  id: ToString
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2Int.ToString()
  fullName: Prowl.Runtime.Vector2Int.ToString()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 99
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a String representing this Vector2Int instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Prowl.Runtime.Vector2Int.ToString*
- uid: Prowl.Runtime.Vector2Int.ToString(System.String)
  commentId: M:Prowl.Runtime.Vector2Int.ToString(System.String)
  id: ToString(System.String)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector2Int.ToString(string)
  fullName: Prowl.Runtime.Vector2Int.ToString(string)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 109
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a String representing this Vector2Int instance, using the specified format to format individual elements.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Function ToString(format As String) As String
  overload: Prowl.Runtime.Vector2Int.ToString*
  nameWithType.vb: Vector2Int.ToString(String)
  fullName.vb: Prowl.Runtime.Vector2Int.ToString(String)
  name.vb: ToString(String)
- uid: Prowl.Runtime.Vector2Int.ToString(System.String,System.IFormatProvider)
  commentId: M:Prowl.Runtime.Vector2Int.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: ToString(string?, IFormatProvider?)
  nameWithType: Vector2Int.ToString(string?, IFormatProvider?)
  fullName: Prowl.Runtime.Vector2Int.ToString(string?, System.IFormatProvider?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 121
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Returns a String representing this Vector2Int instance, using the specified format to format individual elements

    and the given IFormatProvider.
  example: []
  syntax:
    content: public string ToString(string? format, IFormatProvider? formatProvider)
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider to use when formatting elements.
    return:
      type: System.String
      description: The string representation.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: Prowl.Runtime.Vector2Int.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector2Int.ToString(String, IFormatProvider)
  fullName.vb: Prowl.Runtime.Vector2Int.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: Prowl.Runtime.Vector2Int.IsFinate
  commentId: M:Prowl.Runtime.Vector2Int.IsFinate
  id: IsFinate
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: IsFinate()
  nameWithType: Vector2Int.IsFinate()
  fullName: Prowl.Runtime.Vector2Int.IsFinate()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsFinate
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 134
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool IsFinate()
    return:
      type: System.Boolean
    content.vb: Public Function IsFinate() As Boolean
  overload: Prowl.Runtime.Vector2Int.IsFinate*
- uid: Prowl.Runtime.Vector2Int.zero
  commentId: P:Prowl.Runtime.Vector2Int.zero
  id: zero
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: zero
  nameWithType: Vector2Int.zero
  fullName: Prowl.Runtime.Vector2Int.zero
  type: Property
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: zero
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 137
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static Vector2Int zero { get; }
    parameters: []
    return:
      type: Prowl.Runtime.Vector2Int
    content.vb: Public Shared ReadOnly Property zero As Vector2Int
  overload: Prowl.Runtime.Vector2Int.zero*
- uid: Prowl.Runtime.Vector2Int.Distance(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Distance(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: Distance(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Distance(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.Distance(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Distance(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Distance
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 147
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the Euclidean distance between the two given points.
  example: []
  syntax:
    content: public static double Distance(Vector2Int value1, Vector2Int value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector2Int
      description: The first point.
    - id: value2
      type: Prowl.Runtime.Vector2Int
      description: The second point.
    return:
      type: System.Double
      description: The distance.
    content.vb: Public Shared Function Distance(value1 As Vector2Int, value2 As Vector2Int) As Double
  overload: Prowl.Runtime.Vector2Int.Distance*
- uid: Prowl.Runtime.Vector2Int.Clamp(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Clamp(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: Clamp(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Clamp(Vector2Int, Vector2Int, Vector2Int)
  nameWithType: Vector2Int.Clamp(Vector2Int, Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Clamp(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Clamp
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 164
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Restricts a vector between a min and max value.
  example: []
  syntax:
    content: public static Vector2Int Clamp(Vector2Int value1, Vector2Int min, Vector2Int max)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector2Int
      description: The source vector.
    - id: min
      type: Prowl.Runtime.Vector2Int
      description: The minimum value.
    - id: max
      type: Prowl.Runtime.Vector2Int
      description: The maximum value.
    return:
      type: Prowl.Runtime.Vector2Int
    content.vb: Public Shared Function Clamp(value1 As Vector2Int, min As Vector2Int, max As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.Clamp*
- uid: Prowl.Runtime.Vector2Int.Min(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Min(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: Min(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Min(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.Min(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Min(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Min
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 186
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the minimum of each of the pairs of elements in the two source vectors.
  example: []
  syntax:
    content: public static Vector2Int Min(Vector2Int value1, Vector2Int value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector2Int
      description: The first source vector.
    - id: value2
      type: Prowl.Runtime.Vector2Int
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The minimized vector.
    content.vb: Public Shared Function Min(value1 As Vector2Int, value2 As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.Min*
- uid: Prowl.Runtime.Vector2Int.Max(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Max(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: Max(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Max(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.Max(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Max(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Max
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 200
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the maximum of each of the pairs of elements in the two source vectors
  example: []
  syntax:
    content: public static Vector2Int Max(Vector2Int value1, Vector2Int value2)
    parameters:
    - id: value1
      type: Prowl.Runtime.Vector2Int
      description: The first source vector
    - id: value2
      type: Prowl.Runtime.Vector2Int
      description: The second source vector
    return:
      type: Prowl.Runtime.Vector2Int
      description: The maximized vector
    content.vb: Public Shared Function Max(value1 As Vector2Int, value2 As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.Max*
- uid: Prowl.Runtime.Vector2Int.Abs(Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.Abs(Prowl.Runtime.Vector2Int)
  id: Abs(Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: Abs(Vector2Int)
  nameWithType: Vector2Int.Abs(Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.Abs(Prowl.Runtime.Vector2Int)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Abs
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 213
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a vector whose elements are the absolute values of each of the source vector's elements.
  example: []
  syntax:
    content: public static Vector2Int Abs(Vector2Int value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector2Int
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The absolute value vector.
    content.vb: Public Shared Function Abs(value As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.Abs*
- uid: Prowl.Runtime.Vector2Int.op_Addition(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Addition(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Addition(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator +(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator +(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator +(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Addition
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 228
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Adds two vectors together.
  example: []
  syntax:
    content: public static Vector2Int operator +(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The summed vector.
    content.vb: Public Shared Operator +(left As Vector2Int, right As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Addition*
  nameWithType.vb: Vector2Int.+(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.+(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: +(Vector2Int, Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Subtraction(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Subtraction(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Subtraction(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator -(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator -(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator -(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Subtraction
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 240
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Subtracts the second vector from the first.
  example: []
  syntax:
    content: public static Vector2Int operator -(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The difference vector.
    content.vb: Public Shared Operator -(left As Vector2Int, right As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Subtraction*
  nameWithType.vb: Vector2Int.-(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.-(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: -(Vector2Int, Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Multiply(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator *(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator *(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator *(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 252
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies two vectors together.
  example: []
  syntax:
    content: public static Vector2Int operator *(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The product vector.
    content.vb: Public Shared Operator *(left As Vector2Int, right As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Multiply*
  nameWithType.vb: Vector2Int.*(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.*(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: '*(Vector2Int, Vector2Int)'
- uid: Prowl.Runtime.Vector2Int.op_Multiply(System.Int32,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Multiply(System.Int32,Prowl.Runtime.Vector2Int)
  id: op_Multiply(System.Int32,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator *(int, Vector2Int)
  nameWithType: Vector2Int.operator *(int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator *(int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 264
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies a vector by the given scalar.
  example: []
  syntax:
    content: public static Vector2Int operator *(int left, Vector2Int right)
    parameters:
    - id: left
      type: System.Int32
      description: The scalar value.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The scaled vector.
    content.vb: Public Shared Operator *(left As Integer, right As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Multiply*
  nameWithType.vb: Vector2Int.*(Integer, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.*(Integer, Prowl.Runtime.Vector2Int)
  name.vb: '*(Integer, Vector2Int)'
- uid: Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,System.Int32)
  commentId: M:Prowl.Runtime.Vector2Int.op_Multiply(Prowl.Runtime.Vector2Int,System.Int32)
  id: op_Multiply(Prowl.Runtime.Vector2Int,System.Int32)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator *(Vector2Int, int)
  nameWithType: Vector2Int.operator *(Vector2Int, int)
  fullName: Prowl.Runtime.Vector2Int.operator *(Prowl.Runtime.Vector2Int, int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Multiply
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 276
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Multiplies a vector by the given scalar.
  example: []
  syntax:
    content: public static Vector2Int operator *(Vector2Int left, int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The source vector.
    - id: right
      type: System.Int32
      description: The scalar value.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The scaled vector.
    content.vb: Public Shared Operator *(left As Vector2Int, right As Integer) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Multiply*
  nameWithType.vb: Vector2Int.*(Vector2Int, Integer)
  fullName.vb: Prowl.Runtime.Vector2Int.*(Prowl.Runtime.Vector2Int, Integer)
  name.vb: '*(Vector2Int, Integer)'
- uid: Prowl.Runtime.Vector2Int.op_Division(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Division(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Division(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator /(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator /(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator /(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Division
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 288
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Divides the first vector by the second.
  example: []
  syntax:
    content: public static Vector2Int operator /(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first source vector.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second source vector.
    return:
      type: Prowl.Runtime.Vector2Int
      description: The vector resulting from the division.
    content.vb: Public Shared Operator /(left As Vector2Int, right As Vector2Int) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Division*
  nameWithType.vb: Vector2Int./(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int./(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: /(Vector2Int, Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Equality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Equality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Equality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator ==(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator ==(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator ==(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Equality
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 300
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the two given vectors are equal.
  example: []
  syntax:
    content: public static bool operator ==(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first vector to compare.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second vector to compare.
    return:
      type: System.Boolean
      description: True if the vectors are equal; False otherwise.
    content.vb: Public Shared Operator =(left As Vector2Int, right As Vector2Int) As Boolean
  overload: Prowl.Runtime.Vector2Int.op_Equality*
  nameWithType.vb: Vector2Int.=(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.=(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: =(Vector2Int, Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Inequality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  commentId: M:Prowl.Runtime.Vector2Int.op_Inequality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  id: op_Inequality(Prowl.Runtime.Vector2Int,Prowl.Runtime.Vector2Int)
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: operator !=(Vector2Int, Vector2Int)
  nameWithType: Vector2Int.operator !=(Vector2Int, Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.operator !=(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Inequality
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 312
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns a boolean indicating whether the two given vectors are not equal.
  example: []
  syntax:
    content: public static bool operator !=(Vector2Int left, Vector2Int right)
    parameters:
    - id: left
      type: Prowl.Runtime.Vector2Int
      description: The first vector to compare.
    - id: right
      type: Prowl.Runtime.Vector2Int
      description: The second vector to compare.
    return:
      type: System.Boolean
      description: True if the vectors are not equal; False if they are equal.
    content.vb: Public Shared Operator <>(left As Vector2Int, right As Vector2Int) As Boolean
  overload: Prowl.Runtime.Vector2Int.op_Inequality*
  nameWithType.vb: Vector2Int.<>(Vector2Int, Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.<>(Prowl.Runtime.Vector2Int, Prowl.Runtime.Vector2Int)
  name.vb: <>(Vector2Int, Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2Int)~Prowl.Runtime.Vector2
  commentId: M:Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2Int)~Prowl.Runtime.Vector2
  id: op_Implicit(Prowl.Runtime.Vector2Int)~Prowl.Runtime.Vector2
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: implicit operator Vector2(Vector2Int)
  nameWithType: Vector2Int.implicit operator Vector2(Vector2Int)
  fullName: Prowl.Runtime.Vector2Int.implicit operator Prowl.Runtime.Vector2(Prowl.Runtime.Vector2Int)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Implicit
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 318
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static implicit operator Vector2(Vector2Int value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector2Int
    return:
      type: Prowl.Runtime.Vector2
    content.vb: Public Shared Widening Operator CType(value As Vector2Int) As Vector2
  overload: Prowl.Runtime.Vector2Int.op_Implicit*
  nameWithType.vb: Vector2Int.CType(Vector2Int)
  fullName.vb: Prowl.Runtime.Vector2Int.CType(Prowl.Runtime.Vector2Int)
  name.vb: CType(Vector2Int)
- uid: Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2)~Prowl.Runtime.Vector2Int
  commentId: M:Prowl.Runtime.Vector2Int.op_Implicit(Prowl.Runtime.Vector2)~Prowl.Runtime.Vector2Int
  id: op_Implicit(Prowl.Runtime.Vector2)~Prowl.Runtime.Vector2Int
  parent: Prowl.Runtime.Vector2Int
  langs:
  - csharp
  - vb
  name: implicit operator Vector2Int(Vector2)
  nameWithType: Vector2Int.implicit operator Vector2Int(Vector2)
  fullName: Prowl.Runtime.Vector2Int.implicit operator Prowl.Runtime.Vector2Int(Prowl.Runtime.Vector2)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/Math/Vector2Int.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Implicit
    path: ../Prowl/Prowl.Runtime/Math/Vector2Int.cs
    startLine: 324
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static implicit operator Vector2Int(Vector2 value)
    parameters:
    - id: value
      type: Prowl.Runtime.Vector2
    return:
      type: Prowl.Runtime.Vector2Int
    content.vb: Public Shared Widening Operator CType(value As Vector2) As Vector2Int
  overload: Prowl.Runtime.Vector2Int.op_Implicit*
  nameWithType.vb: Vector2Int.CType(Vector2)
  fullName.vb: Prowl.Runtime.Vector2Int.CType(Prowl.Runtime.Vector2)
  name.vb: CType(Vector2)
references:
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: System.IEquatable{Prowl.Runtime.Vector2Int}
  commentId: T:System.IEquatable{Prowl.Runtime.Vector2Int}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector2Int>
  nameWithType: IEquatable<Vector2Int>
  fullName: System.IEquatable<Prowl.Runtime.Vector2Int>
  nameWithType.vb: IEquatable(Of Vector2Int)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Vector2Int)
  name.vb: IEquatable(Of Vector2Int)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Prowl.Runtime.Vector2Int
    name: Vector2Int
    href: Prowl.Runtime.Vector2Int.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Prowl.Runtime.Vector2Int
    name: Vector2Int
    href: Prowl.Runtime.Vector2Int.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Prowl.Runtime.Vector2Int.#ctor*
  commentId: Overload:Prowl.Runtime.Vector2Int.#ctor
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int__ctor_System_Int32_
  name: Vector2Int
  nameWithType: Vector2Int.Vector2Int
  fullName: Prowl.Runtime.Vector2Int.Vector2Int
  nameWithType.vb: Vector2Int.New
  fullName.vb: Prowl.Runtime.Vector2Int.New
  name.vb: New
- uid: Prowl.Runtime.Vector2Int.Item*
  commentId: Overload:Prowl.Runtime.Vector2Int.Item
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Item_System_Int32_
  name: this
  nameWithType: Vector2Int.this
  fullName: Prowl.Runtime.Vector2Int.this
  nameWithType.vb: Vector2Int.this[]
  fullName.vb: Prowl.Runtime.Vector2Int.this[]
  name.vb: this[]
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Prowl.Runtime.Vector2Int.GetHashCode*
  commentId: Overload:Prowl.Runtime.Vector2Int.GetHashCode
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_GetHashCode
  name: GetHashCode
  nameWithType: Vector2Int.GetHashCode
  fullName: Prowl.Runtime.Vector2Int.GetHashCode
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.Vector2Int.Equals*
  commentId: Overload:Prowl.Runtime.Vector2Int.Equals
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Equals_System_Object_
  name: Equals
  nameWithType: Vector2Int.Equals
  fullName: Prowl.Runtime.Vector2Int.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Prowl.Runtime.Vector2Int}.Equals(Prowl.Runtime.Vector2Int)
  commentId: M:System.IEquatable{Prowl.Runtime.Vector2Int}.Equals(Prowl.Runtime.Vector2Int)
  parent: System.IEquatable{Prowl.Runtime.Vector2Int}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector2Int)
  nameWithType: IEquatable<Vector2Int>.Equals(Vector2Int)
  fullName: System.IEquatable<Prowl.Runtime.Vector2Int>.Equals(Prowl.Runtime.Vector2Int)
  nameWithType.vb: IEquatable(Of Vector2Int).Equals(Vector2Int)
  fullName.vb: System.IEquatable(Of Prowl.Runtime.Vector2Int).Equals(Prowl.Runtime.Vector2Int)
  spec.csharp:
  - uid: System.IEquatable{Prowl.Runtime.Vector2Int}.Equals(Prowl.Runtime.Vector2Int)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Vector2Int
    name: Vector2Int
    href: Prowl.Runtime.Vector2Int.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Prowl.Runtime.Vector2Int}.Equals(Prowl.Runtime.Vector2Int)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Prowl.Runtime.Vector2Int
    name: Vector2Int
    href: Prowl.Runtime.Vector2Int.html
  - name: )
- uid: Prowl.Runtime.Vector2Int
  commentId: T:Prowl.Runtime.Vector2Int
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector2Int.html
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: Prowl.Runtime.Vector2Int
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Prowl.Runtime.Vector2Int.ToString*
  commentId: Overload:Prowl.Runtime.Vector2Int.ToString
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_ToString
  name: ToString
  nameWithType: Vector2Int.ToString
  fullName: Prowl.Runtime.Vector2Int.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Prowl.Runtime.Vector2Int.IsFinate*
  commentId: Overload:Prowl.Runtime.Vector2Int.IsFinate
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_IsFinate
  name: IsFinate
  nameWithType: Vector2Int.IsFinate
  fullName: Prowl.Runtime.Vector2Int.IsFinate
- uid: Prowl.Runtime.Vector2Int.zero*
  commentId: Overload:Prowl.Runtime.Vector2Int.zero
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_zero
  name: zero
  nameWithType: Vector2Int.zero
  fullName: Prowl.Runtime.Vector2Int.zero
- uid: Prowl.Runtime.Vector2Int.Distance*
  commentId: Overload:Prowl.Runtime.Vector2Int.Distance
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Distance_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: Distance
  nameWithType: Vector2Int.Distance
  fullName: Prowl.Runtime.Vector2Int.Distance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Prowl.Runtime.Vector2Int.Clamp*
  commentId: Overload:Prowl.Runtime.Vector2Int.Clamp
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Clamp_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: Clamp
  nameWithType: Vector2Int.Clamp
  fullName: Prowl.Runtime.Vector2Int.Clamp
- uid: Prowl.Runtime.Vector2Int.Min*
  commentId: Overload:Prowl.Runtime.Vector2Int.Min
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Min_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: Min
  nameWithType: Vector2Int.Min
  fullName: Prowl.Runtime.Vector2Int.Min
- uid: Prowl.Runtime.Vector2Int.Max*
  commentId: Overload:Prowl.Runtime.Vector2Int.Max
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Max_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: Max
  nameWithType: Vector2Int.Max
  fullName: Prowl.Runtime.Vector2Int.Max
- uid: Prowl.Runtime.Vector2Int.Abs*
  commentId: Overload:Prowl.Runtime.Vector2Int.Abs
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_Abs_Prowl_Runtime_Vector2Int_
  name: Abs
  nameWithType: Vector2Int.Abs
  fullName: Prowl.Runtime.Vector2Int.Abs
- uid: Prowl.Runtime.Vector2Int.op_Addition*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Addition
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Addition_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator +
  nameWithType: Vector2Int.operator +
  fullName: Prowl.Runtime.Vector2Int.operator +
  nameWithType.vb: Vector2Int.+
  fullName.vb: Prowl.Runtime.Vector2Int.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Addition*
    name: +
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Addition_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Subtraction*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Subtraction
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Subtraction_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator -
  nameWithType: Vector2Int.operator -
  fullName: Prowl.Runtime.Vector2Int.operator -
  nameWithType.vb: Vector2Int.-
  fullName.vb: Prowl.Runtime.Vector2Int.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Subtraction*
    name: '-'
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Subtraction_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Multiply*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Multiply
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Multiply_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator *
  nameWithType: Vector2Int.operator *
  fullName: Prowl.Runtime.Vector2Int.operator *
  nameWithType.vb: Vector2Int.*
  fullName.vb: Prowl.Runtime.Vector2Int.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Multiply*
    name: '*'
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Multiply_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Division*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Division
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Division_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator /
  nameWithType: Vector2Int.operator /
  fullName: Prowl.Runtime.Vector2Int.operator /
  nameWithType.vb: Vector2Int./
  fullName.vb: Prowl.Runtime.Vector2Int./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Division*
    name: /
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Division_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Equality*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Equality
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Equality_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator ==
  nameWithType: Vector2Int.operator ==
  fullName: Prowl.Runtime.Vector2Int.operator ==
  nameWithType.vb: Vector2Int.=
  fullName.vb: Prowl.Runtime.Vector2Int.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Equality*
    name: ==
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Equality_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Inequality*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Inequality
  href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Inequality_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
  name: operator !=
  nameWithType: Vector2Int.operator !=
  fullName: Prowl.Runtime.Vector2Int.operator !=
  nameWithType.vb: Vector2Int.<>
  fullName.vb: Prowl.Runtime.Vector2Int.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.Vector2Int.op_Inequality*
    name: '!='
    href: Prowl.Runtime.Vector2Int.html#Prowl_Runtime_Vector2Int_op_Inequality_Prowl_Runtime_Vector2Int_Prowl_Runtime_Vector2Int_
- uid: Prowl.Runtime.Vector2Int.op_Implicit*
  commentId: Overload:Prowl.Runtime.Vector2Int.op_Implicit
  name: implicit operator
  nameWithType: Vector2Int.implicit operator
  fullName: Prowl.Runtime.Vector2Int.implicit operator
  nameWithType.vb: Vector2Int.CType
  fullName.vb: Prowl.Runtime.Vector2Int.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Prowl.Runtime.Vector2
  commentId: T:Prowl.Runtime.Vector2
  parent: Prowl.Runtime
  href: Prowl.Runtime.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: Prowl.Runtime.Vector2
