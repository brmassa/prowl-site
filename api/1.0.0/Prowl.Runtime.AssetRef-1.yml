### YamlMime:ManagedReference
items:
- uid: Prowl.Runtime.AssetRef`1
  commentId: T:Prowl.Runtime.AssetRef`1
  id: AssetRef`1
  parent: Prowl.Runtime
  children:
  - Prowl.Runtime.AssetRef`1.#ctor(System.Guid)
  - Prowl.Runtime.AssetRef`1.#ctor(System.Guid,System.UInt16)
  - Prowl.Runtime.AssetRef`1.#ctor(`0)
  - Prowl.Runtime.AssetRef`1.AssetID
  - Prowl.Runtime.AssetRef`1.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  - Prowl.Runtime.AssetRef`1.Detach
  - Prowl.Runtime.AssetRef`1.EnsureLoaded
  - Prowl.Runtime.AssetRef`1.Equals(Prowl.Runtime.AssetRef{`0})
  - Prowl.Runtime.AssetRef`1.Equals(System.Object)
  - Prowl.Runtime.AssetRef`1.FileID
  - Prowl.Runtime.AssetRef`1.GetHashCode
  - Prowl.Runtime.AssetRef`1.GetInstance
  - Prowl.Runtime.AssetRef`1.InstanceType
  - Prowl.Runtime.AssetRef`1.IsAvailable
  - Prowl.Runtime.AssetRef`1.IsExplicitNull
  - Prowl.Runtime.AssetRef`1.IsLoaded
  - Prowl.Runtime.AssetRef`1.IsRuntimeResource
  - Prowl.Runtime.AssetRef`1.Name
  - Prowl.Runtime.AssetRef`1.Res
  - Prowl.Runtime.AssetRef`1.ResWeak
  - Prowl.Runtime.AssetRef`1.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  - Prowl.Runtime.AssetRef`1.SetInstance(System.Object)
  - Prowl.Runtime.AssetRef`1.ToString
  - Prowl.Runtime.AssetRef`1.op_Equality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  - Prowl.Runtime.AssetRef`1.op_Explicit(Prowl.Runtime.AssetRef{`0})~`0
  - Prowl.Runtime.AssetRef`1.op_Implicit(`0)~Prowl.Runtime.AssetRef{`0}
  - Prowl.Runtime.AssetRef`1.op_Inequality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  langs:
  - csharp
  - vb
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Prowl.Runtime.AssetRef<T>
  type: Struct
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AssetRef
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 10
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: 'public struct AssetRef<T> : IAssetRef, ISerializable where T : EngineObject'
    typeParameters:
    - id: T
    content.vb: Public Structure AssetRef(Of T As EngineObject) Implements IAssetRef, ISerializable
  implements:
  - Prowl.Runtime.IAssetRef
  - Prowl.Runtime.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Prowl.Runtime.AssetRef(Of T)
  name.vb: AssetRef(Of T)
- uid: Prowl.Runtime.AssetRef`1.Res
  commentId: P:Prowl.Runtime.AssetRef`1.Res
  id: Res
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Res
  nameWithType: AssetRef<T>.Res
  fullName: Prowl.Runtime.AssetRef<T>.Res
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Res
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 21
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    The actual <xref href="Prowl.Runtime.EngineObject" data-throw-if-not-resolved="false"></xref>. If currently unavailable, it is loaded and then returned.

    Because of that, this Property is only null if the references Resource is missing, invalid, or

    this content reference has been explicitly set to null. Never returns disposed Resources.
  example: []
  syntax:
    content: public T? Res { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Res As T
  overload: Prowl.Runtime.AssetRef`1.Res*
  nameWithType.vb: AssetRef(Of T).Res
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Res
- uid: Prowl.Runtime.AssetRef`1.ResWeak
  commentId: P:Prowl.Runtime.AssetRef`1.ResWeak
  id: ResWeak
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: ResWeak
  nameWithType: AssetRef<T>.ResWeak
  fullName: Prowl.Runtime.AssetRef<T>.ResWeak
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ResWeak
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 40
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Returns the current reference to the Resource that is stored locally. No attemp is made to load or reload

    the Resource if currently unavailable.
  example: []
  syntax:
    content: public T? ResWeak { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property ResWeak As T
  overload: Prowl.Runtime.AssetRef`1.ResWeak*
  nameWithType.vb: AssetRef(Of T).ResWeak
  fullName.vb: Prowl.Runtime.AssetRef(Of T).ResWeak
- uid: Prowl.Runtime.AssetRef`1.AssetID
  commentId: P:Prowl.Runtime.AssetRef`1.AssetID
  id: AssetID
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: AssetID
  nameWithType: AssetRef<T>.AssetID
  fullName: Prowl.Runtime.AssetRef<T>.AssetID
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: AssetID
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 48
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: The path where to look for the Resource, if it is currently unavailable.
  example: []
  syntax:
    content: public Guid AssetID { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property AssetID As Guid
  overload: Prowl.Runtime.AssetRef`1.AssetID*
  implements:
  - Prowl.Runtime.IAssetRef.AssetID
  nameWithType.vb: AssetRef(Of T).AssetID
  fullName.vb: Prowl.Runtime.AssetRef(Of T).AssetID
- uid: Prowl.Runtime.AssetRef`1.FileID
  commentId: P:Prowl.Runtime.AssetRef`1.FileID
  id: FileID
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: FileID
  nameWithType: AssetRef<T>.FileID
  fullName: Prowl.Runtime.AssetRef<T>.FileID
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: FileID
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 62
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: The Asset index inside the asset file. 0 is the Main Asset
  example: []
  syntax:
    content: public ushort FileID { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Property FileID As UShort
  overload: Prowl.Runtime.AssetRef`1.FileID*
  implements:
  - Prowl.Runtime.IAssetRef.FileID
  nameWithType.vb: AssetRef(Of T).FileID
  fullName.vb: Prowl.Runtime.AssetRef(Of T).FileID
- uid: Prowl.Runtime.AssetRef`1.IsExplicitNull
  commentId: P:Prowl.Runtime.AssetRef`1.IsExplicitNull
  id: IsExplicitNull
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: IsExplicitNull
  nameWithType: AssetRef<T>.IsExplicitNull
  fullName: Prowl.Runtime.AssetRef<T>.IsExplicitNull
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsExplicitNull
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 72
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns whether this content reference has been explicitly set to null.
  example: []
  syntax:
    content: public bool IsExplicitNull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExplicitNull As Boolean
  overload: Prowl.Runtime.AssetRef`1.IsExplicitNull*
  implements:
  - Prowl.Runtime.IAssetRef.IsExplicitNull
  nameWithType.vb: AssetRef(Of T).IsExplicitNull
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsExplicitNull
- uid: Prowl.Runtime.AssetRef`1.IsAvailable
  commentId: P:Prowl.Runtime.AssetRef`1.IsAvailable
  id: IsAvailable
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: AssetRef<T>.IsAvailable
  fullName: Prowl.Runtime.AssetRef<T>.IsAvailable
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsAvailable
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 83
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns whether this content reference is available in general. This may trigger loading it, if currently unavailable.
  example: []
  syntax:
    content: public bool IsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAvailable As Boolean
  overload: Prowl.Runtime.AssetRef`1.IsAvailable*
  implements:
  - Prowl.Runtime.IAssetRef.IsAvailable
  nameWithType.vb: AssetRef(Of T).IsAvailable
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsAvailable
- uid: Prowl.Runtime.AssetRef`1.IsLoaded
  commentId: P:Prowl.Runtime.AssetRef`1.IsLoaded
  id: IsLoaded
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: IsLoaded
  nameWithType: AssetRef<T>.IsLoaded
  fullName: Prowl.Runtime.AssetRef<T>.IsLoaded
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsLoaded
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 96
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns whether the referenced Resource is currently loaded.
  example: []
  syntax:
    content: public bool IsLoaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLoaded As Boolean
  overload: Prowl.Runtime.AssetRef`1.IsLoaded*
  implements:
  - Prowl.Runtime.IAssetRef.IsLoaded
  nameWithType.vb: AssetRef(Of T).IsLoaded
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsLoaded
- uid: Prowl.Runtime.AssetRef`1.IsRuntimeResource
  commentId: P:Prowl.Runtime.AssetRef`1.IsRuntimeResource
  id: IsRuntimeResource
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: IsRuntimeResource
  nameWithType: AssetRef<T>.IsRuntimeResource
  fullName: Prowl.Runtime.AssetRef<T>.IsRuntimeResource
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: IsRuntimeResource
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 108
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns whether the Resource has been generated at runtime and cannot be retrieved via content path.
  example: []
  syntax:
    content: public bool IsRuntimeResource { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRuntimeResource As Boolean
  overload: Prowl.Runtime.AssetRef`1.IsRuntimeResource*
  implements:
  - Prowl.Runtime.IAssetRef.IsRuntimeResource
  nameWithType.vb: AssetRef(Of T).IsRuntimeResource
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsRuntimeResource
- uid: Prowl.Runtime.AssetRef`1.Name
  commentId: P:Prowl.Runtime.AssetRef`1.Name
  id: Name
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AssetRef<T>.Name
  fullName: Prowl.Runtime.AssetRef<T>.Name
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Name
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 113
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Prowl.Runtime.AssetRef`1.Name*
  implements:
  - Prowl.Runtime.IAssetRef.Name
  nameWithType.vb: AssetRef(Of T).Name
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Name
- uid: Prowl.Runtime.AssetRef`1.InstanceType
  commentId: P:Prowl.Runtime.AssetRef`1.InstanceType
  id: InstanceType
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: InstanceType
  nameWithType: AssetRef<T>.InstanceType
  fullName: Prowl.Runtime.AssetRef<T>.InstanceType
  type: Property
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: InstanceType
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 122
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public Type InstanceType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property InstanceType As Type
  overload: Prowl.Runtime.AssetRef`1.InstanceType*
  implements:
  - Prowl.Runtime.IAssetRef.InstanceType
  nameWithType.vb: AssetRef(Of T).InstanceType
  fullName.vb: Prowl.Runtime.AssetRef(Of T).InstanceType
- uid: Prowl.Runtime.AssetRef`1.#ctor(System.Guid)
  commentId: M:Prowl.Runtime.AssetRef`1.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: AssetRef(Guid)
  nameWithType: AssetRef<T>.AssetRef(Guid)
  fullName: Prowl.Runtime.AssetRef<T>.AssetRef(System.Guid)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 129
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Creates a ContentRef pointing to the Resource at the specified id / using

    the specified alias.
  example: []
  syntax:
    content: public AssetRef(Guid id)
    parameters:
    - id: id
      type: System.Guid
      description: ''
    content.vb: Public Sub New(id As Guid)
  overload: Prowl.Runtime.AssetRef`1.#ctor*
  nameWithType.vb: AssetRef(Of T).New(Guid)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).New(System.Guid)
  name.vb: New(Guid)
- uid: Prowl.Runtime.AssetRef`1.#ctor(System.Guid,System.UInt16)
  commentId: M:Prowl.Runtime.AssetRef`1.#ctor(System.Guid,System.UInt16)
  id: '#ctor(System.Guid,System.UInt16)'
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: AssetRef(Guid, ushort)
  nameWithType: AssetRef<T>.AssetRef(Guid, ushort)
  fullName: Prowl.Runtime.AssetRef<T>.AssetRef(System.Guid, ushort)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 141
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Creates a ContentRef pointing to the Resource at the specified id / using

    the specified alias.
  example: []
  syntax:
    content: public AssetRef(Guid id, ushort fileId)
    parameters:
    - id: id
      type: System.Guid
      description: ''
    - id: fileId
      type: System.UInt16
    content.vb: Public Sub New(id As Guid, fileId As UShort)
  overload: Prowl.Runtime.AssetRef`1.#ctor*
  nameWithType.vb: AssetRef(Of T).New(Guid, UShort)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).New(System.Guid, UShort)
  name.vb: New(Guid, UShort)
- uid: Prowl.Runtime.AssetRef`1.#ctor(`0)
  commentId: M:Prowl.Runtime.AssetRef`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: AssetRef(T?)
  nameWithType: AssetRef<T>.AssetRef(T?)
  fullName: Prowl.Runtime.AssetRef<T>.AssetRef(T?)
  type: Constructor
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: .ctor
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 151
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Creates a ContentRef pointing to the specified Resource.
  example: []
  syntax:
    content: public AssetRef(T? res)
    parameters:
    - id: res
      type: '{T}'
      description: The Resource to reference.
    content.vb: Public Sub New(res As T)
  overload: Prowl.Runtime.AssetRef`1.#ctor*
  nameWithType.vb: AssetRef(Of T).New(T)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).New(T)
  name.vb: New(T)
- uid: Prowl.Runtime.AssetRef`1.GetInstance
  commentId: M:Prowl.Runtime.AssetRef`1.GetInstance
  id: GetInstance
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: AssetRef<T>.GetInstance()
  fullName: Prowl.Runtime.AssetRef<T>.GetInstance()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetInstance
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 158
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public object? GetInstance()
    return:
      type: System.Object
    content.vb: Public Function GetInstance() As Object
  overload: Prowl.Runtime.AssetRef`1.GetInstance*
  implements:
  - Prowl.Runtime.IAssetRef.GetInstance
  nameWithType.vb: AssetRef(Of T).GetInstance()
  fullName.vb: Prowl.Runtime.AssetRef(Of T).GetInstance()
- uid: Prowl.Runtime.AssetRef`1.SetInstance(System.Object)
  commentId: M:Prowl.Runtime.AssetRef`1.SetInstance(System.Object)
  id: SetInstance(System.Object)
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: SetInstance(object?)
  nameWithType: AssetRef<T>.SetInstance(object?)
  fullName: Prowl.Runtime.AssetRef<T>.SetInstance(object?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: SetInstance
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 163
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public void SetInstance(object? obj)
    parameters:
    - id: obj
      type: System.Object
    content.vb: Public Sub SetInstance(obj As Object)
  overload: Prowl.Runtime.AssetRef`1.SetInstance*
  implements:
  - Prowl.Runtime.IAssetRef.SetInstance(System.Object)
  nameWithType.vb: AssetRef(Of T).SetInstance(Object)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).SetInstance(Object)
  name.vb: SetInstance(Object)
- uid: Prowl.Runtime.AssetRef`1.EnsureLoaded
  commentId: M:Prowl.Runtime.AssetRef`1.EnsureLoaded
  id: EnsureLoaded
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: EnsureLoaded()
  nameWithType: AssetRef<T>.EnsureLoaded()
  fullName: Prowl.Runtime.AssetRef<T>.EnsureLoaded()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: EnsureLoaded
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 176
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Loads the associated content as if it was accessed now.

    You don't usually need to call this method. It is invoked implicitly by trying to

    access the <xref href="Prowl.Runtime.AssetRef%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void EnsureLoaded()
    content.vb: Public Sub EnsureLoaded()
  overload: Prowl.Runtime.AssetRef`1.EnsureLoaded*
  nameWithType.vb: AssetRef(Of T).EnsureLoaded()
  fullName.vb: Prowl.Runtime.AssetRef(Of T).EnsureLoaded()
- uid: Prowl.Runtime.AssetRef`1.Detach
  commentId: M:Prowl.Runtime.AssetRef`1.Detach
  id: Detach
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Detach()
  nameWithType: AssetRef<T>.Detach()
  fullName: Prowl.Runtime.AssetRef<T>.Detach()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Detach
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 185
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: >-
    Discards the resolved content reference cache to allow garbage-collecting the Resource

    without losing its reference. Accessing it will result in reloading the Resource.
  example: []
  syntax:
    content: public void Detach()
    content.vb: Public Sub Detach()
  overload: Prowl.Runtime.AssetRef`1.Detach*
  nameWithType.vb: AssetRef(Of T).Detach()
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Detach()
- uid: Prowl.Runtime.AssetRef`1.ToString
  commentId: M:Prowl.Runtime.AssetRef`1.ToString
  id: ToString
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AssetRef<T>.ToString()
  fullName: Prowl.Runtime.AssetRef<T>.ToString()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: ToString
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 200
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Prowl.Runtime.AssetRef`1.ToString*
  nameWithType.vb: AssetRef(Of T).ToString()
  fullName.vb: Prowl.Runtime.AssetRef(Of T).ToString()
- uid: Prowl.Runtime.AssetRef`1.Equals(System.Object)
  commentId: M:Prowl.Runtime.AssetRef`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: AssetRef<T>.Equals(object?)
  fullName: Prowl.Runtime.AssetRef<T>.Equals(object?)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 217
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Prowl.Runtime.AssetRef`1.Equals*
  nameWithType.vb: AssetRef(Of T).Equals(Object)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: Prowl.Runtime.AssetRef`1.GetHashCode
  commentId: M:Prowl.Runtime.AssetRef`1.GetHashCode
  id: GetHashCode
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AssetRef<T>.GetHashCode()
  fullName: Prowl.Runtime.AssetRef<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: GetHashCode
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 225
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Prowl.Runtime.AssetRef`1.GetHashCode*
  nameWithType.vb: AssetRef(Of T).GetHashCode()
  fullName.vb: Prowl.Runtime.AssetRef(Of T).GetHashCode()
- uid: Prowl.Runtime.AssetRef`1.Equals(Prowl.Runtime.AssetRef{`0})
  commentId: M:Prowl.Runtime.AssetRef`1.Equals(Prowl.Runtime.AssetRef{`0})
  id: Equals(Prowl.Runtime.AssetRef{`0})
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Equals(AssetRef<T>)
  nameWithType: AssetRef<T>.Equals(AssetRef<T>)
  fullName: Prowl.Runtime.AssetRef<T>.Equals(Prowl.Runtime.AssetRef<T>)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Equals
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 232
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public bool Equals(AssetRef<T> other)
    parameters:
    - id: other
      type: Prowl.Runtime.AssetRef`1
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As AssetRef(Of T)) As Boolean
  overload: Prowl.Runtime.AssetRef`1.Equals*
  nameWithType.vb: AssetRef(Of T).Equals(AssetRef(Of T))
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Equals(Prowl.Runtime.AssetRef(Of T))
  name.vb: Equals(AssetRef(Of T))
- uid: Prowl.Runtime.AssetRef`1.op_Implicit(`0)~Prowl.Runtime.AssetRef{`0}
  commentId: M:Prowl.Runtime.AssetRef`1.op_Implicit(`0)~Prowl.Runtime.AssetRef{`0}
  id: op_Implicit(`0)~Prowl.Runtime.AssetRef{`0}
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: implicit operator AssetRef<T>(T)
  nameWithType: AssetRef<T>.implicit operator AssetRef<T>(T)
  fullName: Prowl.Runtime.AssetRef<T>.implicit operator Prowl.Runtime.AssetRef<T>(T)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Implicit
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 237
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static implicit operator AssetRef<T>(T res)
    parameters:
    - id: res
      type: '{T}'
    return:
      type: Prowl.Runtime.AssetRef`1
    content.vb: Public Shared Widening Operator CType(res As T) As AssetRef(Of T)
  overload: Prowl.Runtime.AssetRef`1.op_Implicit*
  nameWithType.vb: AssetRef(Of T).CType(T)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).CType(T)
  name.vb: CType(T)
- uid: Prowl.Runtime.AssetRef`1.op_Explicit(Prowl.Runtime.AssetRef{`0})~`0
  commentId: M:Prowl.Runtime.AssetRef`1.op_Explicit(Prowl.Runtime.AssetRef{`0})~`0
  id: op_Explicit(Prowl.Runtime.AssetRef{`0})~`0
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: explicit operator T(AssetRef<T>)
  nameWithType: AssetRef<T>.explicit operator T(AssetRef<T>)
  fullName: Prowl.Runtime.AssetRef<T>.explicit operator T(Prowl.Runtime.AssetRef<T>)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Explicit
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 241
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  syntax:
    content: public static explicit operator T(AssetRef<T> res)
    parameters:
    - id: res
      type: Prowl.Runtime.AssetRef`1
    return:
      type: '{T}'
    content.vb: Public Shared Narrowing Operator CType(res As AssetRef(Of T)) As T
  overload: Prowl.Runtime.AssetRef`1.op_Explicit*
  nameWithType.vb: AssetRef(Of T).CType(AssetRef(Of T))
  fullName.vb: Prowl.Runtime.AssetRef(Of T).CType(Prowl.Runtime.AssetRef(Of T))
  name.vb: CType(AssetRef(Of T))
- uid: Prowl.Runtime.AssetRef`1.op_Equality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  commentId: M:Prowl.Runtime.AssetRef`1.op_Equality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  id: op_Equality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: operator ==(AssetRef<T>, AssetRef<T>)
  nameWithType: AssetRef<T>.operator ==(AssetRef<T>, AssetRef<T>)
  fullName: Prowl.Runtime.AssetRef<T>.operator ==(Prowl.Runtime.AssetRef<T>, Prowl.Runtime.AssetRef<T>)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Equality
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 255
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Compares two AssetRefs for equality.
  remarks: >-
    This is a two-step comparison. First, their actual Resources references are compared.

    If they're both not null and equal, true is returned. Otherwise, their AssetID's are compared for equality
  example: []
  syntax:
    content: public static bool operator ==(AssetRef<T> first, AssetRef<T> second)
    parameters:
    - id: first
      type: Prowl.Runtime.AssetRef`1
      description: ''
    - id: second
      type: Prowl.Runtime.AssetRef`1
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(first As AssetRef(Of T), second As AssetRef(Of T)) As Boolean
  overload: Prowl.Runtime.AssetRef`1.op_Equality*
  nameWithType.vb: AssetRef(Of T).=(AssetRef(Of T), AssetRef(Of T))
  fullName.vb: Prowl.Runtime.AssetRef(Of T).=(Prowl.Runtime.AssetRef(Of T), Prowl.Runtime.AssetRef(Of T))
  name.vb: =(AssetRef(Of T), AssetRef(Of T))
- uid: Prowl.Runtime.AssetRef`1.op_Inequality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  commentId: M:Prowl.Runtime.AssetRef`1.op_Inequality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  id: op_Inequality(Prowl.Runtime.AssetRef{`0},Prowl.Runtime.AssetRef{`0})
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: operator !=(AssetRef<T>, AssetRef<T>)
  nameWithType: AssetRef<T>.operator !=(AssetRef<T>, AssetRef<T>)
  fullName: Prowl.Runtime.AssetRef<T>.operator !=(Prowl.Runtime.AssetRef<T>, Prowl.Runtime.AssetRef<T>)
  type: Operator
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: op_Inequality
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 285
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  summary: Compares two AssetRefs for inequality.
  example: []
  syntax:
    content: public static bool operator !=(AssetRef<T> first, AssetRef<T> second)
    parameters:
    - id: first
      type: Prowl.Runtime.AssetRef`1
      description: ''
    - id: second
      type: Prowl.Runtime.AssetRef`1
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(first As AssetRef(Of T), second As AssetRef(Of T)) As Boolean
  overload: Prowl.Runtime.AssetRef`1.op_Inequality*
  nameWithType.vb: AssetRef(Of T).<>(AssetRef(Of T), AssetRef(Of T))
  fullName.vb: Prowl.Runtime.AssetRef(Of T).<>(Prowl.Runtime.AssetRef(Of T), Prowl.Runtime.AssetRef(Of T))
  name.vb: <>(AssetRef(Of T), AssetRef(Of T))
- uid: Prowl.Runtime.AssetRef`1.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  commentId: M:Prowl.Runtime.AssetRef`1.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  id: Serialize(Prowl.Runtime.Serializer.SerializationContext)
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Serialize(SerializationContext)
  nameWithType: AssetRef<T>.Serialize(Serializer.SerializationContext)
  fullName: Prowl.Runtime.AssetRef<T>.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Serialize
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 291
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public SerializedProperty Serialize(Serializer.SerializationContext ctx)
    parameters:
    - id: ctx
      type: Prowl.Runtime.Serializer.SerializationContext
    return:
      type: Prowl.Runtime.SerializedProperty
    content.vb: Public Function Serialize(ctx As Serializer.SerializationContext) As SerializedProperty
  overload: Prowl.Runtime.AssetRef`1.Serialize*
  implements:
  - Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  nameWithType.vb: AssetRef(Of T).Serialize(Serializer.SerializationContext)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Serialize(Prowl.Runtime.Serializer.SerializationContext)
- uid: Prowl.Runtime.AssetRef`1.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  commentId: M:Prowl.Runtime.AssetRef`1.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  id: Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  parent: Prowl.Runtime.AssetRef`1
  langs:
  - csharp
  - vb
  name: Deserialize(SerializedProperty, SerializationContext)
  nameWithType: AssetRef<T>.Deserialize(SerializedProperty, Serializer.SerializationContext)
  fullName: Prowl.Runtime.AssetRef<T>.Deserialize(Prowl.Runtime.SerializedProperty, Prowl.Runtime.Serializer.SerializationContext)
  type: Method
  source:
    remote:
      path: Prowl.Runtime/AssetRef.cs
      branch: development
      repo: git@github.com:brmassa/Prowl.git
    id: Deserialize
    path: ../Prowl/Prowl.Runtime/AssetRef.cs
    startLine: 304
  assemblies:
  - Prowl.Runtime
  namespace: Prowl.Runtime
  example: []
  syntax:
    content: public void Deserialize(SerializedProperty value, Serializer.SerializationContext ctx)
    parameters:
    - id: value
      type: Prowl.Runtime.SerializedProperty
    - id: ctx
      type: Prowl.Runtime.Serializer.SerializationContext
    content.vb: Public Sub Deserialize(value As SerializedProperty, ctx As Serializer.SerializationContext)
  overload: Prowl.Runtime.AssetRef`1.Deserialize*
  implements:
  - Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  nameWithType.vb: AssetRef(Of T).Deserialize(SerializedProperty, Serializer.SerializationContext)
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Deserialize(Prowl.Runtime.SerializedProperty, Prowl.Runtime.Serializer.SerializationContext)
references:
- uid: Prowl.Runtime
  commentId: N:Prowl.Runtime
  href: Prowl.html
  name: Prowl.Runtime
  nameWithType: Prowl.Runtime
  fullName: Prowl.Runtime
  spec.csharp:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
  spec.vb:
  - uid: Prowl
    name: Prowl
    href: Prowl.html
  - name: .
  - uid: Prowl.Runtime
    name: Runtime
    href: Prowl.Runtime.html
- uid: Prowl.Runtime.IAssetRef
  commentId: T:Prowl.Runtime.IAssetRef
  parent: Prowl.Runtime
  href: Prowl.Runtime.IAssetRef.html
  name: IAssetRef
  nameWithType: IAssetRef
  fullName: Prowl.Runtime.IAssetRef
- uid: Prowl.Runtime.ISerializable
  commentId: T:Prowl.Runtime.ISerializable
  parent: Prowl.Runtime
  href: Prowl.Runtime.ISerializable.html
  name: ISerializable
  nameWithType: ISerializable
  fullName: Prowl.Runtime.ISerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Prowl.Runtime.RuntimeUtils.GetSerializableFields
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  parent: Prowl.Runtime.RuntimeUtils
  definition: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  commentId: M:Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
  isExternal: true
  href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  name: GetSerializableFields(object)
  nameWithType: RuntimeUtils.GetSerializableFields(object)
  fullName: Prowl.Runtime.RuntimeUtils.GetSerializableFields(object)
  nameWithType.vb: RuntimeUtils.GetSerializableFields(Object)
  fullName.vb: Prowl.Runtime.RuntimeUtils.GetSerializableFields(Object)
  name.vb: GetSerializableFields(Object)
  spec.csharp:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.RuntimeUtils.GetSerializableFields(System.Object)
    name: GetSerializableFields
    href: Prowl.Runtime.RuntimeUtils.html#Prowl_Runtime_RuntimeUtils_GetSerializableFields_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.RuntimeUtils
  commentId: T:Prowl.Runtime.RuntimeUtils
  parent: Prowl.Runtime
  href: Prowl.Runtime.RuntimeUtils.html
  name: RuntimeUtils
  nameWithType: RuntimeUtils
  fullName: Prowl.Runtime.RuntimeUtils
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Prowl.Runtime.EngineObject
  commentId: T:Prowl.Runtime.EngineObject
  parent: Prowl.Runtime
  href: Prowl.Runtime.EngineObject.html
  name: EngineObject
  nameWithType: EngineObject
  fullName: Prowl.Runtime.EngineObject
- uid: Prowl.Runtime.AssetRef`1.Res*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Res
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Res
  name: Res
  nameWithType: AssetRef<T>.Res
  fullName: Prowl.Runtime.AssetRef<T>.Res
  nameWithType.vb: AssetRef(Of T).Res
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Res
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Prowl.Runtime.AssetRef`1.ResWeak*
  commentId: Overload:Prowl.Runtime.AssetRef`1.ResWeak
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_ResWeak
  name: ResWeak
  nameWithType: AssetRef<T>.ResWeak
  fullName: Prowl.Runtime.AssetRef<T>.ResWeak
  nameWithType.vb: AssetRef(Of T).ResWeak
  fullName.vb: Prowl.Runtime.AssetRef(Of T).ResWeak
- uid: Prowl.Runtime.AssetRef`1.AssetID*
  commentId: Overload:Prowl.Runtime.AssetRef`1.AssetID
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_AssetID
  name: AssetID
  nameWithType: AssetRef<T>.AssetID
  fullName: Prowl.Runtime.AssetRef<T>.AssetID
  nameWithType.vb: AssetRef(Of T).AssetID
  fullName.vb: Prowl.Runtime.AssetRef(Of T).AssetID
- uid: Prowl.Runtime.IAssetRef.AssetID
  commentId: P:Prowl.Runtime.IAssetRef.AssetID
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_AssetID
  name: AssetID
  nameWithType: IAssetRef.AssetID
  fullName: Prowl.Runtime.IAssetRef.AssetID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Prowl.Runtime.AssetRef`1.FileID*
  commentId: Overload:Prowl.Runtime.AssetRef`1.FileID
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_FileID
  name: FileID
  nameWithType: AssetRef<T>.FileID
  fullName: Prowl.Runtime.AssetRef<T>.FileID
  nameWithType.vb: AssetRef(Of T).FileID
  fullName.vb: Prowl.Runtime.AssetRef(Of T).FileID
- uid: Prowl.Runtime.IAssetRef.FileID
  commentId: P:Prowl.Runtime.IAssetRef.FileID
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_FileID
  name: FileID
  nameWithType: IAssetRef.FileID
  fullName: Prowl.Runtime.IAssetRef.FileID
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Prowl.Runtime.AssetRef`1.IsExplicitNull*
  commentId: Overload:Prowl.Runtime.AssetRef`1.IsExplicitNull
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_IsExplicitNull
  name: IsExplicitNull
  nameWithType: AssetRef<T>.IsExplicitNull
  fullName: Prowl.Runtime.AssetRef<T>.IsExplicitNull
  nameWithType.vb: AssetRef(Of T).IsExplicitNull
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsExplicitNull
- uid: Prowl.Runtime.IAssetRef.IsExplicitNull
  commentId: P:Prowl.Runtime.IAssetRef.IsExplicitNull
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_IsExplicitNull
  name: IsExplicitNull
  nameWithType: IAssetRef.IsExplicitNull
  fullName: Prowl.Runtime.IAssetRef.IsExplicitNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Prowl.Runtime.AssetRef`1.IsAvailable*
  commentId: Overload:Prowl.Runtime.AssetRef`1.IsAvailable
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_IsAvailable
  name: IsAvailable
  nameWithType: AssetRef<T>.IsAvailable
  fullName: Prowl.Runtime.AssetRef<T>.IsAvailable
  nameWithType.vb: AssetRef(Of T).IsAvailable
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsAvailable
- uid: Prowl.Runtime.IAssetRef.IsAvailable
  commentId: P:Prowl.Runtime.IAssetRef.IsAvailable
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_IsAvailable
  name: IsAvailable
  nameWithType: IAssetRef.IsAvailable
  fullName: Prowl.Runtime.IAssetRef.IsAvailable
- uid: Prowl.Runtime.AssetRef`1.IsLoaded*
  commentId: Overload:Prowl.Runtime.AssetRef`1.IsLoaded
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_IsLoaded
  name: IsLoaded
  nameWithType: AssetRef<T>.IsLoaded
  fullName: Prowl.Runtime.AssetRef<T>.IsLoaded
  nameWithType.vb: AssetRef(Of T).IsLoaded
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsLoaded
- uid: Prowl.Runtime.IAssetRef.IsLoaded
  commentId: P:Prowl.Runtime.IAssetRef.IsLoaded
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_IsLoaded
  name: IsLoaded
  nameWithType: IAssetRef.IsLoaded
  fullName: Prowl.Runtime.IAssetRef.IsLoaded
- uid: Prowl.Runtime.AssetRef`1.IsRuntimeResource*
  commentId: Overload:Prowl.Runtime.AssetRef`1.IsRuntimeResource
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_IsRuntimeResource
  name: IsRuntimeResource
  nameWithType: AssetRef<T>.IsRuntimeResource
  fullName: Prowl.Runtime.AssetRef<T>.IsRuntimeResource
  nameWithType.vb: AssetRef(Of T).IsRuntimeResource
  fullName.vb: Prowl.Runtime.AssetRef(Of T).IsRuntimeResource
- uid: Prowl.Runtime.IAssetRef.IsRuntimeResource
  commentId: P:Prowl.Runtime.IAssetRef.IsRuntimeResource
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_IsRuntimeResource
  name: IsRuntimeResource
  nameWithType: IAssetRef.IsRuntimeResource
  fullName: Prowl.Runtime.IAssetRef.IsRuntimeResource
- uid: Prowl.Runtime.AssetRef`1.Name*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Name
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Name
  name: Name
  nameWithType: AssetRef<T>.Name
  fullName: Prowl.Runtime.AssetRef<T>.Name
  nameWithType.vb: AssetRef(Of T).Name
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Name
- uid: Prowl.Runtime.IAssetRef.Name
  commentId: P:Prowl.Runtime.IAssetRef.Name
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_Name
  name: Name
  nameWithType: IAssetRef.Name
  fullName: Prowl.Runtime.IAssetRef.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Prowl.Runtime.AssetRef`1.InstanceType*
  commentId: Overload:Prowl.Runtime.AssetRef`1.InstanceType
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_InstanceType
  name: InstanceType
  nameWithType: AssetRef<T>.InstanceType
  fullName: Prowl.Runtime.AssetRef<T>.InstanceType
  nameWithType.vb: AssetRef(Of T).InstanceType
  fullName.vb: Prowl.Runtime.AssetRef(Of T).InstanceType
- uid: Prowl.Runtime.IAssetRef.InstanceType
  commentId: P:Prowl.Runtime.IAssetRef.InstanceType
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_InstanceType
  name: InstanceType
  nameWithType: IAssetRef.InstanceType
  fullName: Prowl.Runtime.IAssetRef.InstanceType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Prowl.Runtime.AssetRef`1.#ctor*
  commentId: Overload:Prowl.Runtime.AssetRef`1.#ctor
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1__ctor_System_Guid_
  name: AssetRef
  nameWithType: AssetRef<T>.AssetRef
  fullName: Prowl.Runtime.AssetRef<T>.AssetRef
  nameWithType.vb: AssetRef(Of T).New
  fullName.vb: Prowl.Runtime.AssetRef(Of T).New
  name.vb: New
- uid: Prowl.Runtime.AssetRef`1.GetInstance*
  commentId: Overload:Prowl.Runtime.AssetRef`1.GetInstance
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_GetInstance
  name: GetInstance
  nameWithType: AssetRef<T>.GetInstance
  fullName: Prowl.Runtime.AssetRef<T>.GetInstance
  nameWithType.vb: AssetRef(Of T).GetInstance
  fullName.vb: Prowl.Runtime.AssetRef(Of T).GetInstance
- uid: Prowl.Runtime.IAssetRef.GetInstance
  commentId: M:Prowl.Runtime.IAssetRef.GetInstance
  parent: Prowl.Runtime.IAssetRef
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_GetInstance
  name: GetInstance()
  nameWithType: IAssetRef.GetInstance()
  fullName: Prowl.Runtime.IAssetRef.GetInstance()
  spec.csharp:
  - uid: Prowl.Runtime.IAssetRef.GetInstance
    name: GetInstance
    href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_GetInstance
  - name: (
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.IAssetRef.GetInstance
    name: GetInstance
    href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_GetInstance
  - name: (
  - name: )
- uid: Prowl.Runtime.AssetRef`1.SetInstance*
  commentId: Overload:Prowl.Runtime.AssetRef`1.SetInstance
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_SetInstance_System_Object_
  name: SetInstance
  nameWithType: AssetRef<T>.SetInstance
  fullName: Prowl.Runtime.AssetRef<T>.SetInstance
  nameWithType.vb: AssetRef(Of T).SetInstance
  fullName.vb: Prowl.Runtime.AssetRef(Of T).SetInstance
- uid: Prowl.Runtime.IAssetRef.SetInstance(System.Object)
  commentId: M:Prowl.Runtime.IAssetRef.SetInstance(System.Object)
  parent: Prowl.Runtime.IAssetRef
  isExternal: true
  href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_SetInstance_System_Object_
  name: SetInstance(object)
  nameWithType: IAssetRef.SetInstance(object)
  fullName: Prowl.Runtime.IAssetRef.SetInstance(object)
  nameWithType.vb: IAssetRef.SetInstance(Object)
  fullName.vb: Prowl.Runtime.IAssetRef.SetInstance(Object)
  name.vb: SetInstance(Object)
  spec.csharp:
  - uid: Prowl.Runtime.IAssetRef.SetInstance(System.Object)
    name: SetInstance
    href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_SetInstance_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.IAssetRef.SetInstance(System.Object)
    name: SetInstance
    href: Prowl.Runtime.IAssetRef.html#Prowl_Runtime_IAssetRef_SetInstance_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.AssetRef`1
  commentId: T:Prowl.Runtime.AssetRef`1
  parent: Prowl.Runtime
  href: Prowl.Runtime.AssetRef-1.html
  name: AssetRef<T>
  nameWithType: AssetRef<T>
  fullName: Prowl.Runtime.AssetRef<T>
  nameWithType.vb: AssetRef(Of T)
  fullName.vb: Prowl.Runtime.AssetRef(Of T)
  name.vb: AssetRef(Of T)
  spec.csharp:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Prowl.Runtime.AssetRef`1
    name: AssetRef
    href: Prowl.Runtime.AssetRef-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Prowl.Runtime.AssetRef`1.EnsureLoaded*
  commentId: Overload:Prowl.Runtime.AssetRef`1.EnsureLoaded
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_EnsureLoaded
  name: EnsureLoaded
  nameWithType: AssetRef<T>.EnsureLoaded
  fullName: Prowl.Runtime.AssetRef<T>.EnsureLoaded
  nameWithType.vb: AssetRef(Of T).EnsureLoaded
  fullName.vb: Prowl.Runtime.AssetRef(Of T).EnsureLoaded
- uid: Prowl.Runtime.AssetRef`1.Detach*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Detach
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Detach
  name: Detach
  nameWithType: AssetRef<T>.Detach
  fullName: Prowl.Runtime.AssetRef<T>.Detach
  nameWithType.vb: AssetRef(Of T).Detach
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Detach
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Prowl.Runtime.AssetRef`1.ToString*
  commentId: Overload:Prowl.Runtime.AssetRef`1.ToString
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_ToString
  name: ToString
  nameWithType: AssetRef<T>.ToString
  fullName: Prowl.Runtime.AssetRef<T>.ToString
  nameWithType.vb: AssetRef(Of T).ToString
  fullName.vb: Prowl.Runtime.AssetRef(Of T).ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Prowl.Runtime.AssetRef`1.Equals*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Equals
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Equals_System_Object_
  name: Equals
  nameWithType: AssetRef<T>.Equals
  fullName: Prowl.Runtime.AssetRef<T>.Equals
  nameWithType.vb: AssetRef(Of T).Equals
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Equals
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Prowl.Runtime.AssetRef`1.GetHashCode*
  commentId: Overload:Prowl.Runtime.AssetRef`1.GetHashCode
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_GetHashCode
  name: GetHashCode
  nameWithType: AssetRef<T>.GetHashCode
  fullName: Prowl.Runtime.AssetRef<T>.GetHashCode
  nameWithType.vb: AssetRef(Of T).GetHashCode
  fullName.vb: Prowl.Runtime.AssetRef(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Prowl.Runtime.AssetRef`1.op_Implicit*
  commentId: Overload:Prowl.Runtime.AssetRef`1.op_Implicit
  name: implicit operator
  nameWithType: AssetRef<T>.implicit operator
  fullName: Prowl.Runtime.AssetRef<T>.implicit operator
  nameWithType.vb: AssetRef(Of T).CType
  fullName.vb: Prowl.Runtime.AssetRef(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Prowl.Runtime.AssetRef`1.op_Explicit*
  commentId: Overload:Prowl.Runtime.AssetRef`1.op_Explicit
  name: explicit operator
  nameWithType: AssetRef<T>.explicit operator
  fullName: Prowl.Runtime.AssetRef<T>.explicit operator
  nameWithType.vb: AssetRef(Of T).CType
  fullName.vb: Prowl.Runtime.AssetRef(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: Prowl.Runtime.AssetRef`1.op_Equality*
  commentId: Overload:Prowl.Runtime.AssetRef`1.op_Equality
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_op_Equality_Prowl_Runtime_AssetRef__0__Prowl_Runtime_AssetRef__0__
  name: operator ==
  nameWithType: AssetRef<T>.operator ==
  fullName: Prowl.Runtime.AssetRef<T>.operator ==
  nameWithType.vb: AssetRef(Of T).=
  fullName.vb: Prowl.Runtime.AssetRef(Of T).=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.AssetRef`1.op_Equality*
    name: ==
    href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_op_Equality_Prowl_Runtime_AssetRef__0__Prowl_Runtime_AssetRef__0__
- uid: Prowl.Runtime.AssetRef`1.op_Inequality*
  commentId: Overload:Prowl.Runtime.AssetRef`1.op_Inequality
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_op_Inequality_Prowl_Runtime_AssetRef__0__Prowl_Runtime_AssetRef__0__
  name: operator !=
  nameWithType: AssetRef<T>.operator !=
  fullName: Prowl.Runtime.AssetRef<T>.operator !=
  nameWithType.vb: AssetRef(Of T).<>
  fullName.vb: Prowl.Runtime.AssetRef(Of T).<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Prowl.Runtime.AssetRef`1.op_Inequality*
    name: '!='
    href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_op_Inequality_Prowl_Runtime_AssetRef__0__Prowl_Runtime_AssetRef__0__
- uid: Prowl.Runtime.AssetRef`1.Serialize*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Serialize
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Serialize_Prowl_Runtime_Serializer_SerializationContext_
  name: Serialize
  nameWithType: AssetRef<T>.Serialize
  fullName: Prowl.Runtime.AssetRef<T>.Serialize
  nameWithType.vb: AssetRef(Of T).Serialize
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Serialize
- uid: Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  commentId: M:Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  parent: Prowl.Runtime.ISerializable
  href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Serialize_Prowl_Runtime_Serializer_SerializationContext_
  name: Serialize(SerializationContext)
  nameWithType: ISerializable.Serialize(Serializer.SerializationContext)
  fullName: Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
  spec.csharp:
  - uid: Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
    name: Serialize
    href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Serialize_Prowl_Runtime_Serializer_SerializationContext_
  - name: (
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.ISerializable.Serialize(Prowl.Runtime.Serializer.SerializationContext)
    name: Serialize
    href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Serialize_Prowl_Runtime_Serializer_SerializationContext_
  - name: (
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
  - name: )
- uid: Prowl.Runtime.Serializer.SerializationContext
  commentId: T:Prowl.Runtime.Serializer.SerializationContext
  parent: Prowl.Runtime
  href: Prowl.Runtime.Serializer.html
  name: Serializer.SerializationContext
  nameWithType: Serializer.SerializationContext
  fullName: Prowl.Runtime.Serializer.SerializationContext
  spec.csharp:
  - uid: Prowl.Runtime.Serializer
    name: Serializer
    href: Prowl.Runtime.Serializer.html
  - name: .
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
  spec.vb:
  - uid: Prowl.Runtime.Serializer
    name: Serializer
    href: Prowl.Runtime.Serializer.html
  - name: .
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
- uid: Prowl.Runtime.SerializedProperty
  commentId: T:Prowl.Runtime.SerializedProperty
  parent: Prowl.Runtime
  href: Prowl.Runtime.SerializedProperty.html
  name: SerializedProperty
  nameWithType: SerializedProperty
  fullName: Prowl.Runtime.SerializedProperty
- uid: Prowl.Runtime.AssetRef`1.Deserialize*
  commentId: Overload:Prowl.Runtime.AssetRef`1.Deserialize
  href: Prowl.Runtime.AssetRef-1.html#Prowl_Runtime_AssetRef_1_Deserialize_Prowl_Runtime_SerializedProperty_Prowl_Runtime_Serializer_SerializationContext_
  name: Deserialize
  nameWithType: AssetRef<T>.Deserialize
  fullName: Prowl.Runtime.AssetRef<T>.Deserialize
  nameWithType.vb: AssetRef(Of T).Deserialize
  fullName.vb: Prowl.Runtime.AssetRef(Of T).Deserialize
- uid: Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  commentId: M:Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
  parent: Prowl.Runtime.ISerializable
  href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Deserialize_Prowl_Runtime_SerializedProperty_Prowl_Runtime_Serializer_SerializationContext_
  name: Deserialize(SerializedProperty, SerializationContext)
  nameWithType: ISerializable.Deserialize(SerializedProperty, Serializer.SerializationContext)
  fullName: Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty, Prowl.Runtime.Serializer.SerializationContext)
  spec.csharp:
  - uid: Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
    name: Deserialize
    href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Deserialize_Prowl_Runtime_SerializedProperty_Prowl_Runtime_Serializer_SerializationContext_
  - name: (
  - uid: Prowl.Runtime.SerializedProperty
    name: SerializedProperty
    href: Prowl.Runtime.SerializedProperty.html
  - name: ','
  - name: " "
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
  - name: )
  spec.vb:
  - uid: Prowl.Runtime.ISerializable.Deserialize(Prowl.Runtime.SerializedProperty,Prowl.Runtime.Serializer.SerializationContext)
    name: Deserialize
    href: Prowl.Runtime.ISerializable.html#Prowl_Runtime_ISerializable_Deserialize_Prowl_Runtime_SerializedProperty_Prowl_Runtime_Serializer_SerializationContext_
  - name: (
  - uid: Prowl.Runtime.SerializedProperty
    name: SerializedProperty
    href: Prowl.Runtime.SerializedProperty.html
  - name: ','
  - name: " "
  - uid: Prowl.Runtime.Serializer.SerializationContext
    name: SerializationContext
    href: Prowl.Runtime.Serializer.SerializationContext.html
  - name: )
